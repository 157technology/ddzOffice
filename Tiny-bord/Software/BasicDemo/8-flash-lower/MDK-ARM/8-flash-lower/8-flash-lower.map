Component: ARM Compiler 6.12 Tool: armlink [5d624300]

==============================================================================

Section Cross References

    osmain.o(.text) refers (Special) to _scanf_str.o(.text) for _scanf_string
    osmain.o(.text.app_main) refers (Special) to _scanf_str.o(.text) for _scanf_string
    osmain.o(.text.app_main) refers to serial.o(.text.em_printf) for em_printf
    osmain.o(.text.app_main) refers to fs_mapi.o(i.finit) for finit
    osmain.o(.text.app_main) refers to fs_mapi.o(i.fmount) for fmount
    osmain.o(.text.app_main) refers to fs_mapi.o(i.ffind) for ffind
    osmain.o(.text.app_main) refers to fopen_locked.o(.text) for fopen
    osmain.o(.text.app_main) refers to __0fscanf.o(.text) for __0fscanf
    osmain.o(.text.app_main) refers to fs_mapi.o(i.funmount) for funmount
    osmain.o(.text.app_main) refers to fs_mapi.o(i.funinit) for funinit
    osmain.o(.text.app_main) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for osSemaphoreAcquire
    osmain.o(.text.app_main) refers to shell.o(.text.console_line_handle) for console_line_handle
    osmain.o(.text.app_main) refers to osmain.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    osmain.o(.text.app_main) refers to osmain.o(.rodata.str1.1) for .L.str
    osmain.o(.text.app_main) refers to fwritefast_locked.o(.text) for fwrite
    osmain.o(.text.app_main) refers to fclose_locked.o(.text) for fclose
    osmain.o(.ARM.exidx.text.app_main) refers (Special) to _scanf_str.o(.text) for _scanf_string
    osmain.o(.ARM.exidx.text.app_main) refers to osmain.o(.text.app_main) for [Anonymous Symbol]
    osmain.o(.text.app_pwm) refers (Special) to _scanf_str.o(.text) for _scanf_string
    osmain.o(.text.app_pwm) refers to osmain.o(.bss.light) for light
    osmain.o(.text.app_pwm) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    osmain.o(.ARM.exidx.text.app_pwm) refers (Special) to _scanf_str.o(.text) for _scanf_string
    osmain.o(.ARM.exidx.text.app_pwm) refers to osmain.o(.text.app_pwm) for [Anonymous Symbol]
    osmain.o(.text.osMain) refers (Special) to _scanf_str.o(.text) for _scanf_string
    osmain.o(.text.osMain) refers to eventrecorder.o(.text.EventRecorderInitialize) for EventRecorderInitialize
    osmain.o(.text.osMain) refers to rtx_semaphore.o(.text.osSemaphoreNew) for osSemaphoreNew
    osmain.o(.text.osMain) refers to serial.o(.text.registerSerial) for registerSerial
    osmain.o(.text.osMain) refers to shell.o(.text.console_cmd_init) for console_cmd_init
    osmain.o(.text.osMain) refers to system_stm32f4xx.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    osmain.o(.text.osMain) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    osmain.o(.text.osMain) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    osmain.o(.text.osMain) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    osmain.o(.text.osMain) refers to osmain.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    osmain.o(.text.osMain) refers to usart.o(.bss.huart1) for huart1
    osmain.o(.text.osMain) refers to osmain.o(.text.app_main) for app_main
    osmain.o(.text.osMain) refers to osmain.o(.text.app_pwm) for app_pwm
    osmain.o(.ARM.exidx.text.osMain) refers (Special) to _scanf_str.o(.text) for _scanf_string
    osmain.o(.ARM.exidx.text.osMain) refers to osmain.o(.text.osMain) for [Anonymous Symbol]
    osmain.o(.bss.light) refers (Special) to _scanf_str.o(.text) for _scanf_string
    osmain.o(.rodata.str1.1) refers (Special) to _scanf_str.o(.text) for _scanf_string
    osmain.o(.data.str) refers (Special) to _scanf_str.o(.text) for _scanf_string
    osmain.o(.bss.buf) refers (Special) to _scanf_str.o(.text) for _scanf_string
    osmain.o(.bss..L_MergedGlobals) refers (Special) to _scanf_str.o(.text) for _scanf_string
    serial.o(.ARM.exidx.text.emHAL_UART_Transmit_DMA) refers to serial.o(.text.emHAL_UART_Transmit_DMA) for [Anonymous Symbol]
    serial.o(.text.em_printf) refers to vsnprintf.o(.text) for vsnprintf
    serial.o(.text.em_printf) refers to serial.o(.text.emHAL_UART_Transmit_DMA) for emHAL_UART_Transmit_DMA
    serial.o(.text.em_printf) refers to serial.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    serial.o(.ARM.exidx.text.em_printf) refers to serial.o(.text.em_printf) for [Anonymous Symbol]
    serial.o(.ARM.exidx.text.initSerial) refers to serial.o(.text.initSerial) for [Anonymous Symbol]
    serial.o(.ARM.exidx.text.restartDMA) refers to serial.o(.text.restartDMA) for [Anonymous Symbol]
    serial.o(.text.USART1_IRQHandler) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for osSemaphoreRelease
    serial.o(.text.USART1_IRQHandler) refers to serial.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    serial.o(.ARM.exidx.text.USART1_IRQHandler) refers to serial.o(.text.USART1_IRQHandler) for [Anonymous Symbol]
    serial.o(.text.registerSerial) refers to serial.o(.text.em_printf) for em_printf
    serial.o(.text.registerSerial) refers to h1_alloc_threads.o(.text) for malloc
    serial.o(.text.registerSerial) refers to serial.o(.text.initSerial) for initSerial
    serial.o(.text.registerSerial) refers to serial.o(.text.restartDMA) for restartDMA
    serial.o(.text.registerSerial) refers to usart.o(.bss.huart1) for huart1
    serial.o(.text.registerSerial) refers to serial.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    serial.o(.ARM.exidx.text.registerSerial) refers to serial.o(.text.registerSerial) for [Anonymous Symbol]
    w25qxx.o(.ARM.exidx.text.mmdelay) refers to w25qxx.o(.text.mmdelay) for [Anonymous Symbol]
    w25qxx.o(.text.W25qxx_Spi) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive) for HAL_SPI_TransmitReceive
    w25qxx.o(.text.W25qxx_Spi) refers to spi.o(.bss.hspi2) for hspi2
    w25qxx.o(.ARM.exidx.text.W25qxx_Spi) refers to w25qxx.o(.text.W25qxx_Spi) for [Anonymous Symbol]
    w25qxx.o(.text.W25qxx_ReadID) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    w25qxx.o(.text.W25qxx_ReadID) refers to w25qxx.o(.text.W25qxx_Spi) for W25qxx_Spi
    w25qxx.o(.ARM.exidx.text.W25qxx_ReadID) refers to w25qxx.o(.text.W25qxx_ReadID) for [Anonymous Symbol]
    w25qxx.o(.text.W25qxx_ReadUniqID) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    w25qxx.o(.text.W25qxx_ReadUniqID) refers to w25qxx.o(.text.W25qxx_Spi) for W25qxx_Spi
    w25qxx.o(.text.W25qxx_ReadUniqID) refers to w25qxx.o(.bss.w25qxx) for w25qxx
    w25qxx.o(.ARM.exidx.text.W25qxx_ReadUniqID) refers to w25qxx.o(.text.W25qxx_ReadUniqID) for [Anonymous Symbol]
    w25qxx.o(.text.W25qxx_WriteEnable) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    w25qxx.o(.text.W25qxx_WriteEnable) refers to w25qxx.o(.text.W25qxx_Spi) for W25qxx_Spi
    w25qxx.o(.text.W25qxx_WriteEnable) refers to w25qxx.o(.text.mmdelay) for mmdelay
    w25qxx.o(.ARM.exidx.text.W25qxx_WriteEnable) refers to w25qxx.o(.text.W25qxx_WriteEnable) for [Anonymous Symbol]
    w25qxx.o(.text.W25qxx_WriteDisable) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    w25qxx.o(.text.W25qxx_WriteDisable) refers to w25qxx.o(.text.W25qxx_Spi) for W25qxx_Spi
    w25qxx.o(.text.W25qxx_WriteDisable) refers to w25qxx.o(.text.mmdelay) for mmdelay
    w25qxx.o(.ARM.exidx.text.W25qxx_WriteDisable) refers to w25qxx.o(.text.W25qxx_WriteDisable) for [Anonymous Symbol]
    w25qxx.o(.text.W25qxx_ReadStatusRegister) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    w25qxx.o(.text.W25qxx_ReadStatusRegister) refers to w25qxx.o(.text.W25qxx_Spi) for W25qxx_Spi
    w25qxx.o(.text.W25qxx_ReadStatusRegister) refers to w25qxx.o(.bss.w25qxx) for w25qxx
    w25qxx.o(.ARM.exidx.text.W25qxx_ReadStatusRegister) refers to w25qxx.o(.text.W25qxx_ReadStatusRegister) for [Anonymous Symbol]
    w25qxx.o(.text.W25qxx_WriteStatusRegister) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    w25qxx.o(.text.W25qxx_WriteStatusRegister) refers to w25qxx.o(.text.W25qxx_Spi) for W25qxx_Spi
    w25qxx.o(.text.W25qxx_WriteStatusRegister) refers to w25qxx.o(.bss.w25qxx) for w25qxx
    w25qxx.o(.ARM.exidx.text.W25qxx_WriteStatusRegister) refers to w25qxx.o(.text.W25qxx_WriteStatusRegister) for [Anonymous Symbol]
    w25qxx.o(.text.W25qxx_WaitForWriteEnd) refers to w25qxx.o(.text.mmdelay) for mmdelay
    w25qxx.o(.text.W25qxx_WaitForWriteEnd) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    w25qxx.o(.text.W25qxx_WaitForWriteEnd) refers to w25qxx.o(.text.W25qxx_Spi) for W25qxx_Spi
    w25qxx.o(.text.W25qxx_WaitForWriteEnd) refers to w25qxx.o(.bss.w25qxx) for w25qxx
    w25qxx.o(.ARM.exidx.text.W25qxx_WaitForWriteEnd) refers to w25qxx.o(.text.W25qxx_WaitForWriteEnd) for [Anonymous Symbol]
    w25qxx.o(.text.W25qxx_Init) refers to w25qxx.o(.text.mmdelay) for mmdelay
    w25qxx.o(.text.W25qxx_Init) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    w25qxx.o(.text.W25qxx_Init) refers to w25qxx.o(.text.W25qxx_ReadID) for W25qxx_ReadID
    w25qxx.o(.text.W25qxx_Init) refers to w25qxx.o(.text.W25qxx_ReadUniqID) for W25qxx_ReadUniqID
    w25qxx.o(.text.W25qxx_Init) refers to w25qxx.o(.bss.w25qxx) for w25qxx
    w25qxx.o(.text.W25qxx_Init) refers to w25qxx.o(.text.W25qxx_ReadStatusRegister) for W25qxx_ReadStatusRegister
    w25qxx.o(.ARM.exidx.text.W25qxx_Init) refers to w25qxx.o(.text.W25qxx_Init) for [Anonymous Symbol]
    w25qxx.o(.text.W25qxx_EraseChip) refers to w25qxx.o(.text.mmdelay) for mmdelay
    w25qxx.o(.text.W25qxx_EraseChip) refers to w25qxx.o(.text.W25qxx_WriteEnable) for W25qxx_WriteEnable
    w25qxx.o(.text.W25qxx_EraseChip) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    w25qxx.o(.text.W25qxx_EraseChip) refers to w25qxx.o(.text.W25qxx_Spi) for W25qxx_Spi
    w25qxx.o(.text.W25qxx_EraseChip) refers to w25qxx.o(.text.W25qxx_WaitForWriteEnd) for W25qxx_WaitForWriteEnd
    w25qxx.o(.text.W25qxx_EraseChip) refers to w25qxx.o(.bss.w25qxx) for w25qxx
    w25qxx.o(.ARM.exidx.text.W25qxx_EraseChip) refers to w25qxx.o(.text.W25qxx_EraseChip) for [Anonymous Symbol]
    w25qxx.o(.text.W25qxx_EraseSector) refers to w25qxx.o(.text.mmdelay) for mmdelay
    w25qxx.o(.text.W25qxx_EraseSector) refers to w25qxx.o(.text.W25qxx_WaitForWriteEnd) for W25qxx_WaitForWriteEnd
    w25qxx.o(.text.W25qxx_EraseSector) refers to w25qxx.o(.text.W25qxx_WriteEnable) for W25qxx_WriteEnable
    w25qxx.o(.text.W25qxx_EraseSector) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    w25qxx.o(.text.W25qxx_EraseSector) refers to w25qxx.o(.text.W25qxx_Spi) for W25qxx_Spi
    w25qxx.o(.text.W25qxx_EraseSector) refers to w25qxx.o(.bss.w25qxx) for w25qxx
    w25qxx.o(.ARM.exidx.text.W25qxx_EraseSector) refers to w25qxx.o(.text.W25qxx_EraseSector) for [Anonymous Symbol]
    w25qxx.o(.text.W25qxx_EraseBlock) refers to w25qxx.o(.text.mmdelay) for mmdelay
    w25qxx.o(.text.W25qxx_EraseBlock) refers to w25qxx.o(.text.W25qxx_WaitForWriteEnd) for W25qxx_WaitForWriteEnd
    w25qxx.o(.text.W25qxx_EraseBlock) refers to w25qxx.o(.text.W25qxx_WriteEnable) for W25qxx_WriteEnable
    w25qxx.o(.text.W25qxx_EraseBlock) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    w25qxx.o(.text.W25qxx_EraseBlock) refers to w25qxx.o(.text.W25qxx_Spi) for W25qxx_Spi
    w25qxx.o(.text.W25qxx_EraseBlock) refers to w25qxx.o(.bss.w25qxx) for w25qxx
    w25qxx.o(.ARM.exidx.text.W25qxx_EraseBlock) refers to w25qxx.o(.text.W25qxx_EraseBlock) for [Anonymous Symbol]
    w25qxx.o(.text.W25qxx_PageToSector) refers to w25qxx.o(.bss.w25qxx) for w25qxx
    w25qxx.o(.ARM.exidx.text.W25qxx_PageToSector) refers to w25qxx.o(.text.W25qxx_PageToSector) for [Anonymous Symbol]
    w25qxx.o(.text.W25qxx_PageToBlock) refers to w25qxx.o(.bss.w25qxx) for w25qxx
    w25qxx.o(.ARM.exidx.text.W25qxx_PageToBlock) refers to w25qxx.o(.text.W25qxx_PageToBlock) for [Anonymous Symbol]
    w25qxx.o(.text.W25qxx_SectorToBlock) refers to w25qxx.o(.bss.w25qxx) for w25qxx
    w25qxx.o(.ARM.exidx.text.W25qxx_SectorToBlock) refers to w25qxx.o(.text.W25qxx_SectorToBlock) for [Anonymous Symbol]
    w25qxx.o(.text.W25qxx_SectorToPage) refers to w25qxx.o(.bss.w25qxx) for w25qxx
    w25qxx.o(.ARM.exidx.text.W25qxx_SectorToPage) refers to w25qxx.o(.text.W25qxx_SectorToPage) for [Anonymous Symbol]
    w25qxx.o(.text.W25qxx_BlockToPage) refers to w25qxx.o(.bss.w25qxx) for w25qxx
    w25qxx.o(.ARM.exidx.text.W25qxx_BlockToPage) refers to w25qxx.o(.text.W25qxx_BlockToPage) for [Anonymous Symbol]
    w25qxx.o(.text.W25qxx_IsEmptyPage) refers to w25qxx.o(.text.mmdelay) for mmdelay
    w25qxx.o(.text.W25qxx_IsEmptyPage) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    w25qxx.o(.text.W25qxx_IsEmptyPage) refers to w25qxx.o(.text.W25qxx_Spi) for W25qxx_Spi
    w25qxx.o(.text.W25qxx_IsEmptyPage) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive) for HAL_SPI_Receive
    w25qxx.o(.text.W25qxx_IsEmptyPage) refers to w25qxx.o(.bss.w25qxx) for w25qxx
    w25qxx.o(.text.W25qxx_IsEmptyPage) refers to spi.o(.bss.hspi2) for hspi2
    w25qxx.o(.ARM.exidx.text.W25qxx_IsEmptyPage) refers to w25qxx.o(.text.W25qxx_IsEmptyPage) for [Anonymous Symbol]
    w25qxx.o(.text.W25qxx_IsEmptySector) refers to w25qxx.o(.text.mmdelay) for mmdelay
    w25qxx.o(.text.W25qxx_IsEmptySector) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    w25qxx.o(.text.W25qxx_IsEmptySector) refers to w25qxx.o(.text.W25qxx_Spi) for W25qxx_Spi
    w25qxx.o(.text.W25qxx_IsEmptySector) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive) for HAL_SPI_Receive
    w25qxx.o(.text.W25qxx_IsEmptySector) refers to w25qxx.o(.bss.w25qxx) for w25qxx
    w25qxx.o(.text.W25qxx_IsEmptySector) refers to spi.o(.bss.hspi2) for hspi2
    w25qxx.o(.ARM.exidx.text.W25qxx_IsEmptySector) refers to w25qxx.o(.text.W25qxx_IsEmptySector) for [Anonymous Symbol]
    w25qxx.o(.text.W25qxx_IsEmptyBlock) refers to w25qxx.o(.text.mmdelay) for mmdelay
    w25qxx.o(.text.W25qxx_IsEmptyBlock) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    w25qxx.o(.text.W25qxx_IsEmptyBlock) refers to w25qxx.o(.text.W25qxx_Spi) for W25qxx_Spi
    w25qxx.o(.text.W25qxx_IsEmptyBlock) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive) for HAL_SPI_Receive
    w25qxx.o(.text.W25qxx_IsEmptyBlock) refers to w25qxx.o(.bss.w25qxx) for w25qxx
    w25qxx.o(.text.W25qxx_IsEmptyBlock) refers to spi.o(.bss.hspi2) for hspi2
    w25qxx.o(.ARM.exidx.text.W25qxx_IsEmptyBlock) refers to w25qxx.o(.text.W25qxx_IsEmptyBlock) for [Anonymous Symbol]
    w25qxx.o(.text.W25qxx_WriteByte) refers to w25qxx.o(.text.mmdelay) for mmdelay
    w25qxx.o(.text.W25qxx_WriteByte) refers to w25qxx.o(.text.W25qxx_WaitForWriteEnd) for W25qxx_WaitForWriteEnd
    w25qxx.o(.text.W25qxx_WriteByte) refers to w25qxx.o(.text.W25qxx_WriteEnable) for W25qxx_WriteEnable
    w25qxx.o(.text.W25qxx_WriteByte) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    w25qxx.o(.text.W25qxx_WriteByte) refers to w25qxx.o(.text.W25qxx_Spi) for W25qxx_Spi
    w25qxx.o(.text.W25qxx_WriteByte) refers to w25qxx.o(.bss.w25qxx) for w25qxx
    w25qxx.o(.ARM.exidx.text.W25qxx_WriteByte) refers to w25qxx.o(.text.W25qxx_WriteByte) for [Anonymous Symbol]
    w25qxx.o(.text.W25qxx_WritePage) refers to w25qxx.o(.text.mmdelay) for mmdelay
    w25qxx.o(.text.W25qxx_WritePage) refers to w25qxx.o(.text.W25qxx_WaitForWriteEnd) for W25qxx_WaitForWriteEnd
    w25qxx.o(.text.W25qxx_WritePage) refers to w25qxx.o(.text.W25qxx_WriteEnable) for W25qxx_WriteEnable
    w25qxx.o(.text.W25qxx_WritePage) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    w25qxx.o(.text.W25qxx_WritePage) refers to w25qxx.o(.text.W25qxx_Spi) for W25qxx_Spi
    w25qxx.o(.text.W25qxx_WritePage) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit) for HAL_SPI_Transmit
    w25qxx.o(.text.W25qxx_WritePage) refers to w25qxx.o(.bss.w25qxx) for w25qxx
    w25qxx.o(.text.W25qxx_WritePage) refers to spi.o(.bss.hspi2) for hspi2
    w25qxx.o(.ARM.exidx.text.W25qxx_WritePage) refers to w25qxx.o(.text.W25qxx_WritePage) for [Anonymous Symbol]
    w25qxx.o(.text.W25qxx_WriteSector) refers to w25qxx.o(.text.W25qxx_WritePage) for W25qxx_WritePage
    w25qxx.o(.text.W25qxx_WriteSector) refers to w25qxx.o(.bss.w25qxx) for w25qxx
    w25qxx.o(.ARM.exidx.text.W25qxx_WriteSector) refers to w25qxx.o(.text.W25qxx_WriteSector) for [Anonymous Symbol]
    w25qxx.o(.text.W25qxx_WriteBlock) refers to w25qxx.o(.text.W25qxx_WritePage) for W25qxx_WritePage
    w25qxx.o(.text.W25qxx_WriteBlock) refers to w25qxx.o(.bss.w25qxx) for w25qxx
    w25qxx.o(.ARM.exidx.text.W25qxx_WriteBlock) refers to w25qxx.o(.text.W25qxx_WriteBlock) for [Anonymous Symbol]
    w25qxx.o(.text.W25qxx_ReadByte) refers to w25qxx.o(.text.mmdelay) for mmdelay
    w25qxx.o(.text.W25qxx_ReadByte) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    w25qxx.o(.text.W25qxx_ReadByte) refers to w25qxx.o(.text.W25qxx_Spi) for W25qxx_Spi
    w25qxx.o(.text.W25qxx_ReadByte) refers to w25qxx.o(.bss.w25qxx) for w25qxx
    w25qxx.o(.ARM.exidx.text.W25qxx_ReadByte) refers to w25qxx.o(.text.W25qxx_ReadByte) for [Anonymous Symbol]
    w25qxx.o(.text.W25qxx_ReadBytes) refers to w25qxx.o(.text.mmdelay) for mmdelay
    w25qxx.o(.text.W25qxx_ReadBytes) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    w25qxx.o(.text.W25qxx_ReadBytes) refers to w25qxx.o(.text.W25qxx_Spi) for W25qxx_Spi
    w25qxx.o(.text.W25qxx_ReadBytes) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive) for HAL_SPI_Receive
    w25qxx.o(.text.W25qxx_ReadBytes) refers to w25qxx.o(.bss.w25qxx) for w25qxx
    w25qxx.o(.text.W25qxx_ReadBytes) refers to spi.o(.bss.hspi2) for hspi2
    w25qxx.o(.ARM.exidx.text.W25qxx_ReadBytes) refers to w25qxx.o(.text.W25qxx_ReadBytes) for [Anonymous Symbol]
    w25qxx.o(.text.W25qxx_ReadPage) refers to w25qxx.o(.text.mmdelay) for mmdelay
    w25qxx.o(.text.W25qxx_ReadPage) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    w25qxx.o(.text.W25qxx_ReadPage) refers to w25qxx.o(.text.W25qxx_Spi) for W25qxx_Spi
    w25qxx.o(.text.W25qxx_ReadPage) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive) for HAL_SPI_Receive
    w25qxx.o(.text.W25qxx_ReadPage) refers to w25qxx.o(.bss.w25qxx) for w25qxx
    w25qxx.o(.text.W25qxx_ReadPage) refers to spi.o(.bss.hspi2) for hspi2
    w25qxx.o(.ARM.exidx.text.W25qxx_ReadPage) refers to w25qxx.o(.text.W25qxx_ReadPage) for [Anonymous Symbol]
    w25qxx.o(.text.W25qxx_ReadSector) refers to w25qxx.o(.text.W25qxx_ReadPage) for W25qxx_ReadPage
    w25qxx.o(.text.W25qxx_ReadSector) refers to w25qxx.o(.bss.w25qxx) for w25qxx
    w25qxx.o(.ARM.exidx.text.W25qxx_ReadSector) refers to w25qxx.o(.text.W25qxx_ReadSector) for [Anonymous Symbol]
    w25qxx.o(.text.W25qxx_ReadBlock) refers to w25qxx.o(.text.W25qxx_ReadPage) for W25qxx_ReadPage
    w25qxx.o(.text.W25qxx_ReadBlock) refers to w25qxx.o(.bss.w25qxx) for w25qxx
    w25qxx.o(.ARM.exidx.text.W25qxx_ReadBlock) refers to w25qxx.o(.text.W25qxx_ReadBlock) for [Anonymous Symbol]
    driver_flash.o(.ARM.exidx.text.ARM_Flash_GetVersion) refers to driver_flash.o(.text.ARM_Flash_GetVersion) for [Anonymous Symbol]
    driver_flash.o(.ARM.exidx.text.ARM_Flash_GetCapabilities) refers to driver_flash.o(.text.ARM_Flash_GetCapabilities) for [Anonymous Symbol]
    driver_flash.o(.text.ARM_Flash_Initialize) refers to w25qxx.o(.text.W25qxx_Init) for W25qxx_Init
    driver_flash.o(.text.ARM_Flash_Initialize) refers to driver_flash.o(.bss.FlashStatus) for [Anonymous Symbol]
    driver_flash.o(.ARM.exidx.text.ARM_Flash_Initialize) refers to driver_flash.o(.text.ARM_Flash_Initialize) for [Anonymous Symbol]
    driver_flash.o(.ARM.exidx.text.ARM_Flash_Uninitialize) refers to driver_flash.o(.text.ARM_Flash_Uninitialize) for [Anonymous Symbol]
    driver_flash.o(.ARM.exidx.text.ARM_Flash_PowerControl) refers to driver_flash.o(.text.ARM_Flash_PowerControl) for [Anonymous Symbol]
    driver_flash.o(.text.ARM_Flash_ReadData) refers to w25qxx.o(.text.W25qxx_ReadBytes) for W25qxx_ReadBytes
    driver_flash.o(.ARM.exidx.text.ARM_Flash_ReadData) refers to driver_flash.o(.text.ARM_Flash_ReadData) for [Anonymous Symbol]
    driver_flash.o(.text.ARM_Flash_ProgramData) refers to w25qxx.o(.text.W25qxx_WriteByte) for W25qxx_WriteByte
    driver_flash.o(.ARM.exidx.text.ARM_Flash_ProgramData) refers to driver_flash.o(.text.ARM_Flash_ProgramData) for [Anonymous Symbol]
    driver_flash.o(.text.ARM_Flash_EraseSector) refers to serial.o(.text.em_printf) for em_printf
    driver_flash.o(.text.ARM_Flash_EraseSector) refers to w25qxx.o(.text.W25qxx_EraseSector) for W25qxx_EraseSector
    driver_flash.o(.text.ARM_Flash_EraseSector) refers to driver_flash.o(.bss.cnt) for cnt
    driver_flash.o(.ARM.exidx.text.ARM_Flash_EraseSector) refers to driver_flash.o(.text.ARM_Flash_EraseSector) for [Anonymous Symbol]
    driver_flash.o(.text.ARM_Flash_EraseChip) refers to w25qxx.o(.text.W25qxx_EraseChip) for W25qxx_EraseChip
    driver_flash.o(.ARM.exidx.text.ARM_Flash_EraseChip) refers to driver_flash.o(.text.ARM_Flash_EraseChip) for [Anonymous Symbol]
    driver_flash.o(.text.ARM_Flash_GetStatus) refers to driver_flash.o(.bss.FlashStatus) for [Anonymous Symbol]
    driver_flash.o(.ARM.exidx.text.ARM_Flash_GetStatus) refers to driver_flash.o(.text.ARM_Flash_GetStatus) for [Anonymous Symbol]
    driver_flash.o(.text.ARM_Flash_GetInfo) refers to driver_flash.o(.rodata.FlashInfo) for [Anonymous Symbol]
    driver_flash.o(.ARM.exidx.text.ARM_Flash_GetInfo) refers to driver_flash.o(.text.ARM_Flash_GetInfo) for [Anonymous Symbol]
    driver_flash.o(.ARM.exidx.text.ARM_Flash_SignalEvent) refers to driver_flash.o(.text.ARM_Flash_SignalEvent) for [Anonymous Symbol]
    driver_flash.o(.rodata.Driver_Flash0) refers to driver_flash.o(.text.ARM_Flash_GetVersion) for ARM_Flash_GetVersion
    driver_flash.o(.rodata.Driver_Flash0) refers to driver_flash.o(.text.ARM_Flash_GetCapabilities) for ARM_Flash_GetCapabilities
    driver_flash.o(.rodata.Driver_Flash0) refers to driver_flash.o(.text.ARM_Flash_Initialize) for ARM_Flash_Initialize
    driver_flash.o(.rodata.Driver_Flash0) refers to driver_flash.o(.text.ARM_Flash_Uninitialize) for ARM_Flash_Uninitialize
    driver_flash.o(.rodata.Driver_Flash0) refers to driver_flash.o(.text.ARM_Flash_PowerControl) for ARM_Flash_PowerControl
    driver_flash.o(.rodata.Driver_Flash0) refers to driver_flash.o(.text.ARM_Flash_ReadData) for ARM_Flash_ReadData
    driver_flash.o(.rodata.Driver_Flash0) refers to driver_flash.o(.text.ARM_Flash_ProgramData) for ARM_Flash_ProgramData
    driver_flash.o(.rodata.Driver_Flash0) refers to driver_flash.o(.text.ARM_Flash_EraseSector) for ARM_Flash_EraseSector
    driver_flash.o(.rodata.Driver_Flash0) refers to driver_flash.o(.text.ARM_Flash_EraseChip) for ARM_Flash_EraseChip
    driver_flash.o(.rodata.Driver_Flash0) refers to driver_flash.o(.text.ARM_Flash_GetStatus) for ARM_Flash_GetStatus
    driver_flash.o(.rodata.Driver_Flash0) refers to driver_flash.o(.text.ARM_Flash_GetInfo) for ARM_Flash_GetInfo
    shell.o(.text) refers (Special) to _scanf_str.o(.text) for _scanf_string
    shell.o(.text.hInitialise) refers (Special) to _scanf_str.o(.text) for _scanf_string
    shell.o(.ARM.exidx.text.hInitialise) refers (Special) to _scanf_str.o(.text) for _scanf_string
    shell.o(.ARM.exidx.text.hInitialise) refers to shell.o(.text.hInitialise) for [Anonymous Symbol]
    shell.o(.text.hAppend) refers (Special) to _scanf_str.o(.text) for _scanf_string
    shell.o(.text.hAppend) refers to strcmpv7em.o(.text) for strcmp
    shell.o(.text.hAppend) refers to strlen.o(.text) for strlen
    shell.o(.text.hAppend) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    shell.o(.ARM.exidx.text.hAppend) refers (Special) to _scanf_str.o(.text) for _scanf_string
    shell.o(.ARM.exidx.text.hAppend) refers to shell.o(.text.hAppend) for [Anonymous Symbol]
    shell.o(.text.hPrevious) refers (Special) to _scanf_str.o(.text) for _scanf_string
    shell.o(.ARM.exidx.text.hPrevious) refers (Special) to _scanf_str.o(.text) for _scanf_string
    shell.o(.ARM.exidx.text.hPrevious) refers to shell.o(.text.hPrevious) for [Anonymous Symbol]
    shell.o(.text.hNext) refers (Special) to _scanf_str.o(.text) for _scanf_string
    shell.o(.ARM.exidx.text.hNext) refers (Special) to _scanf_str.o(.text) for _scanf_string
    shell.o(.ARM.exidx.text.hNext) refers to shell.o(.text.hNext) for [Anonymous Symbol]
    shell.o(.text.consoleStringSetString) refers (Special) to _scanf_str.o(.text) for _scanf_string
    shell.o(.text.consoleStringSetString) refers to strlen.o(.text) for strlen
    shell.o(.text.consoleStringSetString) refers to serial.o(.text.em_printf) for em_printf
    shell.o(.text.consoleStringSetString) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    shell.o(.text.consoleStringSetString) refers to shell.o(.rodata.str1.1) for .L.str.4
    shell.o(.ARM.exidx.text.consoleStringSetString) refers (Special) to _scanf_str.o(.text) for _scanf_string
    shell.o(.ARM.exidx.text.consoleStringSetString) refers to shell.o(.text.consoleStringSetString) for [Anonymous Symbol]
    shell.o(.text.consoleStringReset) refers (Special) to _scanf_str.o(.text) for _scanf_string
    shell.o(.ARM.exidx.text.consoleStringReset) refers (Special) to _scanf_str.o(.text) for _scanf_string
    shell.o(.ARM.exidx.text.consoleStringReset) refers to shell.o(.text.consoleStringReset) for [Anonymous Symbol]
    shell.o(.text.consoleStringInsert) refers (Special) to _scanf_str.o(.text) for _scanf_string
    shell.o(.text.consoleStringInsert) refers to serial.o(.text.em_printf) for em_printf
    shell.o(.text.consoleStringInsert) refers to shell.o(.rodata.str1.1) for .L.str.5
    shell.o(.ARM.exidx.text.consoleStringInsert) refers (Special) to _scanf_str.o(.text) for _scanf_string
    shell.o(.ARM.exidx.text.consoleStringInsert) refers to shell.o(.text.consoleStringInsert) for [Anonymous Symbol]
    shell.o(.text.consoleStringRemove) refers (Special) to _scanf_str.o(.text) for _scanf_string
    shell.o(.text.consoleStringRemove) refers to serial.o(.text.em_printf) for em_printf
    shell.o(.text.consoleStringRemove) refers to shell.o(.rodata.str1.1) for .L.str.5
    shell.o(.ARM.exidx.text.consoleStringRemove) refers (Special) to _scanf_str.o(.text) for _scanf_string
    shell.o(.ARM.exidx.text.consoleStringRemove) refers to shell.o(.text.consoleStringRemove) for [Anonymous Symbol]
    shell.o(.text.consoleStringGetString) refers (Special) to _scanf_str.o(.text) for _scanf_string
    shell.o(.ARM.exidx.text.consoleStringGetString) refers (Special) to _scanf_str.o(.text) for _scanf_string
    shell.o(.ARM.exidx.text.consoleStringGetString) refers to shell.o(.text.consoleStringGetString) for [Anonymous Symbol]
    shell.o(.text.consoleStringStringSplit) refers (Special) to _scanf_str.o(.text) for _scanf_string
    shell.o(.text.consoleStringStringSplit) refers to strlen.o(.text) for strlen
    shell.o(.text.consoleStringStringSplit) refers to h1_alloc_threads.o(.text) for malloc
    shell.o(.text.consoleStringStringSplit) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    shell.o(.text.consoleStringStringSplit) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    shell.o(.text.consoleStringStringSplit) refers to __0sscanf.o(.text) for __0sscanf
    shell.o(.text.consoleStringStringSplit) refers to shell.o(.rodata.str1.1) for .L.str.4
    shell.o(.ARM.exidx.text.consoleStringStringSplit) refers (Special) to _scanf_str.o(.text) for _scanf_string
    shell.o(.ARM.exidx.text.consoleStringStringSplit) refers to shell.o(.text.consoleStringStringSplit) for [Anonymous Symbol]
    shell.o(.text.consoleCmdManageAppend) refers (Special) to _scanf_str.o(.text) for _scanf_string
    shell.o(.ARM.exidx.text.consoleCmdManageAppend) refers (Special) to _scanf_str.o(.text) for _scanf_string
    shell.o(.ARM.exidx.text.consoleCmdManageAppend) refers to shell.o(.text.consoleCmdManageAppend) for [Anonymous Symbol]
    shell.o(.text.consoleCmdManageFind) refers (Special) to _scanf_str.o(.text) for _scanf_string
    shell.o(.text.consoleCmdManageFind) refers to strcmpv7em.o(.text) for strcmp
    shell.o(.ARM.exidx.text.consoleCmdManageFind) refers (Special) to _scanf_str.o(.text) for _scanf_string
    shell.o(.ARM.exidx.text.consoleCmdManageFind) refers to shell.o(.text.consoleCmdManageFind) for [Anonymous Symbol]
    shell.o(.text.console_line_handle) refers (Special) to _scanf_str.o(.text) for _scanf_string
    shell.o(.text.console_line_handle) refers to serial.o(.text.em_printf) for em_printf
    shell.o(.text.console_line_handle) refers to strcmpv7em.o(.text) for strcmp
    shell.o(.text.console_line_handle) refers to shell.o(.data.emConsoleString) for emConsoleString
    shell.o(.text.console_line_handle) refers to shell.o(.rodata.str1.1) for .L.str
    shell.o(.text.console_line_handle) refers to shell.o(.data.emHistory) for emHistory
    shell.o(.text.console_line_handle) refers to shell.o(.data.emConsoleCmdManage) for emConsoleCmdManage
    shell.o(.ARM.exidx.text.console_line_handle) refers (Special) to _scanf_str.o(.text) for _scanf_string
    shell.o(.ARM.exidx.text.console_line_handle) refers to shell.o(.text.console_line_handle) for [Anonymous Symbol]
    shell.o(.text.m_cmd_fun_help) refers (Special) to _scanf_str.o(.text) for _scanf_string
    shell.o(.text.m_cmd_fun_help) refers to serial.o(.text.em_printf) for em_printf
    shell.o(.text.m_cmd_fun_help) refers to shell.o(.rodata.str1.1) for .L.str.1
    shell.o(.ARM.exidx.text.m_cmd_fun_help) refers (Special) to _scanf_str.o(.text) for _scanf_string
    shell.o(.ARM.exidx.text.m_cmd_fun_help) refers to shell.o(.text.m_cmd_fun_help) for [Anonymous Symbol]
    shell.o(.text.console_cmd_init) refers (Special) to _scanf_str.o(.text) for _scanf_string
    shell.o(.text.console_cmd_init) refers to shell.o(.data.emConsoleCmdManage) for emConsoleCmdManage
    shell.o(.text.console_cmd_init) refers to shell.o(.rodata.s_cmd_1) for [Anonymous Symbol]
    shell.o(.ARM.exidx.text.console_cmd_init) refers (Special) to _scanf_str.o(.text) for _scanf_string
    shell.o(.ARM.exidx.text.console_cmd_init) refers to shell.o(.text.console_cmd_init) for [Anonymous Symbol]
    shell.o(.data.emHistory) refers (Special) to _scanf_str.o(.text) for _scanf_string
    shell.o(.data.emHistory) refers to shell.o(.text.hInitialise) for hInitialise
    shell.o(.data.emHistory) refers to shell.o(.text.hAppend) for hAppend
    shell.o(.data.emHistory) refers to shell.o(.text.hPrevious) for hPrevious
    shell.o(.data.emHistory) refers to shell.o(.text.hNext) for hNext
    shell.o(.data.emConsoleString) refers (Special) to _scanf_str.o(.text) for _scanf_string
    shell.o(.data.emConsoleString) refers to shell.o(.text.consoleStringSetString) for consoleStringSetString
    shell.o(.data.emConsoleString) refers to shell.o(.text.consoleStringReset) for consoleStringReset
    shell.o(.data.emConsoleString) refers to shell.o(.text.consoleStringInsert) for consoleStringInsert
    shell.o(.data.emConsoleString) refers to shell.o(.text.consoleStringRemove) for consoleStringRemove
    shell.o(.data.emConsoleString) refers to shell.o(.text.consoleStringGetString) for consoleStringGetString
    shell.o(.data.emConsoleString) refers to shell.o(.text.consoleStringStringSplit) for consoleStringStringSplit
    shell.o(.data.emConsoleCmdManage) refers (Special) to _scanf_str.o(.text) for _scanf_string
    shell.o(.data.emConsoleCmdManage) refers to shell.o(.text.consoleCmdManageAppend) for consoleCmdManageAppend
    shell.o(.data.emConsoleCmdManage) refers to shell.o(.text.consoleCmdManageFind) for consoleCmdManageFind
    shell.o(.rodata.str1.1) refers (Special) to _scanf_str.o(.text) for _scanf_string
    shell.o(.rodata.s_cmd_1) refers (Special) to _scanf_str.o(.text) for _scanf_string
    shell.o(.rodata.s_cmd_1) refers to shell.o(.text.m_cmd_fun_help) for m_cmd_fun_help
    startup_stm32f411xe.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f411xe.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f411xe.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f411xe.o(RESET) refers to startup_stm32f411xe.o(STACK) for __initial_sp
    startup_stm32f411xe.o(RESET) refers to startup_stm32f411xe.o(.text) for Reset_Handler
    startup_stm32f411xe.o(RESET) refers to stm32f4xx_it.o(.text.NMI_Handler) for NMI_Handler
    startup_stm32f411xe.o(RESET) refers to stm32f4xx_it.o(.text.HardFault_Handler) for HardFault_Handler
    startup_stm32f411xe.o(RESET) refers to stm32f4xx_it.o(.text.MemManage_Handler) for MemManage_Handler
    startup_stm32f411xe.o(RESET) refers to stm32f4xx_it.o(.text.BusFault_Handler) for BusFault_Handler
    startup_stm32f411xe.o(RESET) refers to stm32f4xx_it.o(.text.UsageFault_Handler) for UsageFault_Handler
    startup_stm32f411xe.o(RESET) refers to irq_cm4f.o(.text) for SVC_Handler
    startup_stm32f411xe.o(RESET) refers to stm32f4xx_it.o(.text.DebugMon_Handler) for DebugMon_Handler
    startup_stm32f411xe.o(RESET) refers to stm32f4xx_it.o(.text.TIM1_TRG_COM_TIM11_IRQHandler) for TIM1_TRG_COM_TIM11_IRQHandler
    startup_stm32f411xe.o(RESET) refers to serial.o(.text.USART1_IRQHandler) for USART1_IRQHandler
    startup_stm32f411xe.o(RESET) refers to stm32f4xx_it.o(.text.DMA2_Stream2_IRQHandler) for DMA2_Stream2_IRQHandler
    startup_stm32f411xe.o(RESET) refers to stm32f4xx_it.o(.text.DMA2_Stream7_IRQHandler) for DMA2_Stream7_IRQHandler
    startup_stm32f411xe.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f411xe.o(.text) refers to system_stm32f4xx.o(.text.SystemInit) for SystemInit
    startup_stm32f411xe.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f411xe.o(.text) refers to startup_stm32f411xe.o(HEAP) for Heap_Mem
    startup_stm32f411xe.o(.text) refers to startup_stm32f411xe.o(STACK) for Stack_Mem
    main.o(.text.main) refers to stm32f4xx_hal.o(.text.HAL_Init) for HAL_Init
    main.o(.text.main) refers to main.o(.text.SystemClock_Config) for SystemClock_Config
    main.o(.text.main) refers to gpio.o(.text.MX_GPIO_Init) for MX_GPIO_Init
    main.o(.text.main) refers to dma.o(.text.MX_DMA_Init) for MX_DMA_Init
    main.o(.text.main) refers to usart.o(.text.MX_USART1_UART_Init) for MX_USART1_UART_Init
    main.o(.text.main) refers to spi.o(.text.MX_SPI2_Init) for MX_SPI2_Init
    main.o(.text.main) refers to osmain.o(.text.osMain) for osMain
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.SystemClock_Config) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    main.o(.text.SystemClock_Config) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_OscConfig) for HAL_RCC_OscConfig
    main.o(.text.SystemClock_Config) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) for HAL_RCC_ClockConfig
    main.o(.ARM.exidx.text.SystemClock_Config) refers to main.o(.text.SystemClock_Config) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.Error_Handler) refers to main.o(.text.Error_Handler) for [Anonymous Symbol]
    main.o(.text.HAL_TIM_PeriodElapsedCallback) refers to stm32f4xx_hal.o(.text.HAL_IncTick) for HAL_IncTick
    main.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedCallback) refers to main.o(.text.HAL_TIM_PeriodElapsedCallback) for [Anonymous Symbol]
    gpio.o(.text.MX_GPIO_Init) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    gpio.o(.text.MX_GPIO_Init) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    gpio.o(.ARM.exidx.text.MX_GPIO_Init) refers to gpio.o(.text.MX_GPIO_Init) for [Anonymous Symbol]
    dma.o(.text.MX_DMA_Init) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    dma.o(.text.MX_DMA_Init) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for HAL_NVIC_EnableIRQ
    dma.o(.ARM.exidx.text.MX_DMA_Init) refers to dma.o(.text.MX_DMA_Init) for [Anonymous Symbol]
    spi.o(.text.MX_SPI2_Init) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Init) for HAL_SPI_Init
    spi.o(.text.MX_SPI2_Init) refers to main.o(.text.Error_Handler) for Error_Handler
    spi.o(.text.MX_SPI2_Init) refers to spi.o(.bss.hspi2) for hspi2
    spi.o(.ARM.exidx.text.MX_SPI2_Init) refers to spi.o(.text.MX_SPI2_Init) for [Anonymous Symbol]
    spi.o(.text.HAL_SPI_MspInit) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    spi.o(.text.HAL_SPI_MspInit) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    spi.o(.ARM.exidx.text.HAL_SPI_MspInit) refers to spi.o(.text.HAL_SPI_MspInit) for [Anonymous Symbol]
    spi.o(.text.HAL_SPI_MspDeInit) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for HAL_GPIO_DeInit
    spi.o(.ARM.exidx.text.HAL_SPI_MspDeInit) refers to spi.o(.text.HAL_SPI_MspDeInit) for [Anonymous Symbol]
    usart.o(.text.MX_USART1_UART_Init) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_Init) for HAL_UART_Init
    usart.o(.text.MX_USART1_UART_Init) refers to main.o(.text.Error_Handler) for Error_Handler
    usart.o(.text.MX_USART1_UART_Init) refers to usart.o(.bss.huart1) for huart1
    usart.o(.ARM.exidx.text.MX_USART1_UART_Init) refers to usart.o(.text.MX_USART1_UART_Init) for [Anonymous Symbol]
    usart.o(.text.HAL_UART_MspInit) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    usart.o(.text.HAL_UART_MspInit) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    usart.o(.text.HAL_UART_MspInit) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Init) for HAL_DMA_Init
    usart.o(.text.HAL_UART_MspInit) refers to main.o(.text.Error_Handler) for Error_Handler
    usart.o(.text.HAL_UART_MspInit) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    usart.o(.text.HAL_UART_MspInit) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for HAL_NVIC_EnableIRQ
    usart.o(.text.HAL_UART_MspInit) refers to usart.o(.bss.hdma_usart1_rx) for hdma_usart1_rx
    usart.o(.text.HAL_UART_MspInit) refers to usart.o(.bss.hdma_usart1_tx) for hdma_usart1_tx
    usart.o(.ARM.exidx.text.HAL_UART_MspInit) refers to usart.o(.text.HAL_UART_MspInit) for [Anonymous Symbol]
    usart.o(.text.HAL_UART_MspDeInit) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for HAL_GPIO_DeInit
    usart.o(.text.HAL_UART_MspDeInit) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_DeInit) for HAL_DMA_DeInit
    usart.o(.text.HAL_UART_MspDeInit) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) for HAL_NVIC_DisableIRQ
    usart.o(.ARM.exidx.text.HAL_UART_MspDeInit) refers to usart.o(.text.HAL_UART_MspDeInit) for [Anonymous Symbol]
    stm32f4xx_it.o(.ARM.exidx.text.NMI_Handler) refers to stm32f4xx_it.o(.text.NMI_Handler) for [Anonymous Symbol]
    stm32f4xx_it.o(.ARM.exidx.text.HardFault_Handler) refers to stm32f4xx_it.o(.text.HardFault_Handler) for [Anonymous Symbol]
    stm32f4xx_it.o(.ARM.exidx.text.MemManage_Handler) refers to stm32f4xx_it.o(.text.MemManage_Handler) for [Anonymous Symbol]
    stm32f4xx_it.o(.ARM.exidx.text.BusFault_Handler) refers to stm32f4xx_it.o(.text.BusFault_Handler) for [Anonymous Symbol]
    stm32f4xx_it.o(.ARM.exidx.text.UsageFault_Handler) refers to stm32f4xx_it.o(.text.UsageFault_Handler) for [Anonymous Symbol]
    stm32f4xx_it.o(.ARM.exidx.text.DebugMon_Handler) refers to stm32f4xx_it.o(.text.DebugMon_Handler) for [Anonymous Symbol]
    stm32f4xx_it.o(.text.TIM1_TRG_COM_TIM11_IRQHandler) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IRQHandler) for HAL_TIM_IRQHandler
    stm32f4xx_it.o(.text.TIM1_TRG_COM_TIM11_IRQHandler) refers to stm32f4xx_hal_timebase_tim.o(.bss.htim11) for htim11
    stm32f4xx_it.o(.ARM.exidx.text.TIM1_TRG_COM_TIM11_IRQHandler) refers to stm32f4xx_it.o(.text.TIM1_TRG_COM_TIM11_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_it.o(.text.DMA2_Stream2_IRQHandler) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_IRQHandler) for HAL_DMA_IRQHandler
    stm32f4xx_it.o(.text.DMA2_Stream2_IRQHandler) refers to usart.o(.bss.hdma_usart1_rx) for hdma_usart1_rx
    stm32f4xx_it.o(.ARM.exidx.text.DMA2_Stream2_IRQHandler) refers to stm32f4xx_it.o(.text.DMA2_Stream2_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_it.o(.text.DMA2_Stream7_IRQHandler) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_IRQHandler) for HAL_DMA_IRQHandler
    stm32f4xx_it.o(.text.DMA2_Stream7_IRQHandler) refers to usart.o(.bss.hdma_usart1_tx) for hdma_usart1_tx
    stm32f4xx_it.o(.ARM.exidx.text.DMA2_Stream7_IRQHandler) refers to stm32f4xx_it.o(.text.DMA2_Stream7_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_msp.o(.ARM.exidx.text.HAL_MspInit) refers to stm32f4xx_hal_msp.o(.text.HAL_MspInit) for [Anonymous Symbol]
    stm32f4xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    stm32f4xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for HAL_NVIC_EnableIRQ
    stm32f4xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig) for HAL_RCC_GetClockConfig
    stm32f4xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) for HAL_RCC_GetPCLK2Freq
    stm32f4xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Init) for HAL_TIM_Base_Init
    stm32f4xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT) for HAL_TIM_Base_Start_IT
    stm32f4xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32f4xx_hal_timebase_tim.o(.bss.htim11) for htim11
    stm32f4xx_hal_timebase_tim.o(.ARM.exidx.text.HAL_InitTick) refers to stm32f4xx_hal_timebase_tim.o(.text.HAL_InitTick) for [Anonymous Symbol]
    stm32f4xx_hal_timebase_tim.o(.text.HAL_SuspendTick) refers to stm32f4xx_hal_timebase_tim.o(.bss.htim11) for htim11
    stm32f4xx_hal_timebase_tim.o(.ARM.exidx.text.HAL_SuspendTick) refers to stm32f4xx_hal_timebase_tim.o(.text.HAL_SuspendTick) for [Anonymous Symbol]
    stm32f4xx_hal_timebase_tim.o(.text.HAL_ResumeTick) refers to stm32f4xx_hal_timebase_tim.o(.bss.htim11) for htim11
    stm32f4xx_hal_timebase_tim.o(.ARM.exidx.text.HAL_ResumeTick) refers to stm32f4xx_hal_timebase_tim.o(.text.HAL_ResumeTick) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Init) refers to spi.o(.text.HAL_SPI_MspInit) for HAL_SPI_MspInit
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Init) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Init) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_MspInit) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_MspInit) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_DeInit) refers to spi.o(.text.HAL_SPI_MspDeInit) for HAL_SPI_MspDeInit
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_DeInit) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_MspDeInit) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_MspDeInit) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit) refers to stm32f4xx_hal_spi.o(.text.SPI_EndRxTxTransaction) for SPI_EndRxTxTransaction
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Transmit) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_EndRxTxTransaction) refers to stm32f4xx_hal_spi.o(.text.SPI_WaitFlagStateUntilTimeout) for SPI_WaitFlagStateUntilTimeout
    stm32f4xx_hal_spi.o(.text.SPI_EndRxTxTransaction) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_EndRxTxTransaction) refers to stm32f4xx_hal_spi.o(.text.SPI_EndRxTxTransaction) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive) refers to stm32f4xx_hal_spi.o(.text.SPI_EndRxTransaction) for SPI_EndRxTransaction
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive) for HAL_SPI_TransmitReceive
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Receive) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive) refers to stm32f4xx_hal_spi.o(.text.SPI_EndRxTxTransaction) for SPI_EndRxTxTransaction
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TransmitReceive) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_EndRxTransaction) refers to stm32f4xx_hal_spi.o(.text.SPI_WaitFlagStateUntilTimeout) for SPI_WaitFlagStateUntilTimeout
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_EndRxTransaction) refers to stm32f4xx_hal_spi.o(.text.SPI_EndRxTransaction) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit_IT) refers to stm32f4xx_hal_spi.o(.text.SPI_TxISR_8BIT) for SPI_TxISR_8BIT
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit_IT) refers to stm32f4xx_hal_spi.o(.text.SPI_TxISR_16BIT) for SPI_TxISR_16BIT
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Transmit_IT) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit_IT) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_TxISR_16BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_CloseTx_ISR) for SPI_CloseTx_ISR
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_TxISR_16BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_TxISR_16BIT) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_TxISR_8BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_CloseTx_ISR) for SPI_CloseTx_ISR
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_TxISR_8BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_TxISR_8BIT) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive_IT) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_IT) for HAL_SPI_TransmitReceive_IT
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive_IT) refers to stm32f4xx_hal_spi.o(.text.SPI_RxISR_8BIT) for SPI_RxISR_8BIT
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive_IT) refers to stm32f4xx_hal_spi.o(.text.SPI_RxISR_16BIT) for SPI_RxISR_16BIT
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Receive_IT) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive_IT) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_IT) refers to stm32f4xx_hal_spi.o(.text.SPI_2linesTxISR_8BIT) for SPI_2linesTxISR_8BIT
    stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_IT) refers to stm32f4xx_hal_spi.o(.text.SPI_2linesTxISR_16BIT) for SPI_2linesTxISR_16BIT
    stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_IT) refers to stm32f4xx_hal_spi.o(.text.SPI_2linesRxISR_8BIT) for SPI_2linesRxISR_8BIT
    stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_IT) refers to stm32f4xx_hal_spi.o(.text.SPI_2linesRxISR_16BIT) for SPI_2linesRxISR_16BIT
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TransmitReceive_IT) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_IT) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_RxISR_16BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_CloseRx_ISR) for SPI_CloseRx_ISR
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_RxISR_16BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_RxISR_16BIT) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_RxISR_8BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_CloseRx_ISR) for SPI_CloseRx_ISR
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_RxISR_8BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_RxISR_8BIT) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_2linesRxISR_16BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) for SPI_CloseRxTx_ISR
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_2linesRxISR_16BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_2linesRxISR_16BIT) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_2linesTxISR_16BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) for SPI_CloseRxTx_ISR
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_2linesTxISR_16BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_2linesTxISR_16BIT) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_2linesRxISR_8BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) for SPI_CloseRxTx_ISR
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_2linesRxISR_8BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_2linesRxISR_8BIT) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_2linesTxISR_8BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) for SPI_CloseRxTx_ISR
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_2linesTxISR_8BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_2linesTxISR_8BIT) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit_DMA) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAError) for SPI_DMAError
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit_DMA) refers to stm32f4xx_hal_spi.o(.text.SPI_DMATransmitCplt) for SPI_DMATransmitCplt
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit_DMA) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAHalfTransmitCplt) for SPI_DMAHalfTransmitCplt
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Transmit_DMA) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_DMAHalfTransmitCplt) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TxHalfCpltCallback) for HAL_SPI_TxHalfCpltCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMAHalfTransmitCplt) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAHalfTransmitCplt) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_DMATransmitCplt) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(.text.SPI_DMATransmitCplt) refers to stm32f4xx_hal_spi.o(.text.SPI_EndRxTxTransaction) for SPI_EndRxTxTransaction
    stm32f4xx_hal_spi.o(.text.SPI_DMATransmitCplt) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f4xx_hal_spi.o(.text.SPI_DMATransmitCplt) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TxCpltCallback) for HAL_SPI_TxCpltCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMATransmitCplt) refers to stm32f4xx_hal_spi.o(.text.SPI_DMATransmitCplt) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_DMAError) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMAError) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAError) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive_DMA) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_DMA) for HAL_SPI_TransmitReceive_DMA
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive_DMA) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAError) for SPI_DMAError
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive_DMA) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAReceiveCplt) for SPI_DMAReceiveCplt
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive_DMA) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAHalfReceiveCplt) for SPI_DMAHalfReceiveCplt
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Receive_DMA) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_DMA) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAError) for SPI_DMAError
    stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_DMA) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAReceiveCplt) for SPI_DMAReceiveCplt
    stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_DMA) refers to stm32f4xx_hal_spi.o(.text.SPI_DMATransmitReceiveCplt) for SPI_DMATransmitReceiveCplt
    stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_DMA) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAHalfReceiveCplt) for SPI_DMAHalfReceiveCplt
    stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_DMA) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAHalfTransmitReceiveCplt) for SPI_DMAHalfTransmitReceiveCplt
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TransmitReceive_DMA) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_DMAHalfReceiveCplt) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_RxHalfCpltCallback) for HAL_SPI_RxHalfCpltCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMAHalfReceiveCplt) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAHalfReceiveCplt) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_DMAReceiveCplt) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(.text.SPI_DMAReceiveCplt) refers to stm32f4xx_hal_spi.o(.text.SPI_EndRxTransaction) for SPI_EndRxTransaction
    stm32f4xx_hal_spi.o(.text.SPI_DMAReceiveCplt) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f4xx_hal_spi.o(.text.SPI_DMAReceiveCplt) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_RxCpltCallback) for HAL_SPI_RxCpltCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMAReceiveCplt) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAReceiveCplt) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_DMAHalfTransmitReceiveCplt) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TxRxHalfCpltCallback) for HAL_SPI_TxRxHalfCpltCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMAHalfTransmitReceiveCplt) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAHalfTransmitReceiveCplt) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_DMATransmitReceiveCplt) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(.text.SPI_DMATransmitReceiveCplt) refers to stm32f4xx_hal_spi.o(.text.SPI_EndRxTxTransaction) for SPI_EndRxTxTransaction
    stm32f4xx_hal_spi.o(.text.SPI_DMATransmitReceiveCplt) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f4xx_hal_spi.o(.text.SPI_DMATransmitReceiveCplt) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TxRxCpltCallback) for HAL_SPI_TxRxCpltCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMATransmitReceiveCplt) refers to stm32f4xx_hal_spi.o(.text.SPI_DMATransmitReceiveCplt) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort) refers to stm32f4xx_hal_spi.o(.text.SPI_AbortTx_ISR) for SPI_AbortTx_ISR
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort) refers to stm32f4xx_hal_spi.o(.text.SPI_AbortRx_ISR) for SPI_AbortRx_ISR
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Abort) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_AbortTx_ISR) refers to stm32f4xx_hal_spi.o(.text.SPI_AbortTx_ISR) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_AbortRx_ISR) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_AbortRx_ISR) refers to stm32f4xx_hal_spi.o(.text.SPI_AbortRx_ISR) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort_IT) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort_IT) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_AbortCpltCallback) for HAL_SPI_AbortCpltCallback
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort_IT) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort_IT) refers to stm32f4xx_hal_spi.o(.text.SPI_AbortTx_ISR) for SPI_AbortTx_ISR
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort_IT) refers to stm32f4xx_hal_spi.o(.text.SPI_AbortRx_ISR) for SPI_AbortRx_ISR
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort_IT) refers to stm32f4xx_hal_spi.o(.text.SPI_DMATxAbortCallback) for SPI_DMATxAbortCallback
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort_IT) refers to stm32f4xx_hal_spi.o(.text.SPI_DMARxAbortCallback) for SPI_DMARxAbortCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Abort_IT) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort_IT) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_DMATxAbortCallback) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_AbortCpltCallback) for HAL_SPI_AbortCpltCallback
    stm32f4xx_hal_spi.o(.text.SPI_DMATxAbortCallback) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMATxAbortCallback) refers to stm32f4xx_hal_spi.o(.text.SPI_DMATxAbortCallback) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_DMARxAbortCallback) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(.text.SPI_DMARxAbortCallback) refers to stm32f4xx_hal_spi.o(.text.SPI_EndRxTxTransaction) for SPI_EndRxTxTransaction
    stm32f4xx_hal_spi.o(.text.SPI_DMARxAbortCallback) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_AbortCpltCallback) for HAL_SPI_AbortCpltCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMARxAbortCallback) refers to stm32f4xx_hal_spi.o(.text.SPI_DMARxAbortCallback) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_AbortCpltCallback) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_AbortCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_DMAPause) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_DMAPause) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_DMAResume) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_DMAResume) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_DMAStop) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_DMAStop) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_DMAStop) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_IRQHandler) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_spi.o(.text.HAL_SPI_IRQHandler) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f4xx_hal_spi.o(.text.HAL_SPI_IRQHandler) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAAbortOnError) for SPI_DMAAbortOnError
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_IRQHandler) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_DMAAbortOnError) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMAAbortOnError) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAAbortOnError) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_ErrorCallback) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TxCpltCallback) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TxCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_RxCpltCallback) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_RxCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TxRxCpltCallback) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TxRxCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TxHalfCpltCallback) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TxHalfCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_RxHalfCpltCallback) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_RxHalfCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TxRxHalfCpltCallback) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TxRxHalfCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_GetState) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_GetState) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_GetError) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_GetError) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) refers to stm32f4xx_hal_spi.o(.text.SPI_EndRxTxTransaction) for SPI_EndRxTxTransaction
    stm32f4xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f4xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_RxCpltCallback) for HAL_SPI_RxCpltCallback
    stm32f4xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TxRxCpltCallback) for HAL_SPI_TxRxCpltCallback
    stm32f4xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_CloseRxTx_ISR) refers to stm32f4xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_CloseRx_ISR) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(.text.SPI_CloseRx_ISR) refers to stm32f4xx_hal_spi.o(.text.SPI_EndRxTransaction) for SPI_EndRxTransaction
    stm32f4xx_hal_spi.o(.text.SPI_CloseRx_ISR) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f4xx_hal_spi.o(.text.SPI_CloseRx_ISR) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_RxCpltCallback) for HAL_SPI_RxCpltCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_CloseRx_ISR) refers to stm32f4xx_hal_spi.o(.text.SPI_CloseRx_ISR) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_CloseTx_ISR) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(.text.SPI_CloseTx_ISR) refers to stm32f4xx_hal_spi.o(.text.SPI_EndRxTxTransaction) for SPI_EndRxTxTransaction
    stm32f4xx_hal_spi.o(.text.SPI_CloseTx_ISR) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f4xx_hal_spi.o(.text.SPI_CloseTx_ISR) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TxCpltCallback) for HAL_SPI_TxCpltCallback
    stm32f4xx_hal_spi.o(.text.SPI_CloseTx_ISR) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_CloseTx_ISR) refers to stm32f4xx_hal_spi.o(.text.SPI_CloseTx_ISR) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_WaitFlagStateUntilTimeout) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_WaitFlagStateUntilTimeout) refers to stm32f4xx_hal_spi.o(.text.SPI_WaitFlagStateUntilTimeout) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Init) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_MspInit) for HAL_TIM_Base_MspInit
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Init) refers to stm32f4xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Init) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Init) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_MspInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_MspInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_Base_SetConfig) refers to stm32f4xx_hal_tim.o(.text.TIM_Base_SetConfig) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_DeInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_MspDeInit) for HAL_TIM_Base_MspDeInit
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_DeInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_MspDeInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_MspDeInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Start) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Stop) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start_IT) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop_IT) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Stop_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) for TIM_DMAPeriodElapsedCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) for TIM_DMAPeriodElapsedHalfCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) refers to main.o(.text.HAL_TIM_PeriodElapsedCallback) for HAL_TIM_PeriodElapsedCallback
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_DMAPeriodElapsedCplt) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedHalfCpltCallback) for HAL_TIM_PeriodElapsedHalfCpltCallback
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_DMAPeriodElapsedHalfCplt) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.TIM_DMAError) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_ErrorCallback) for HAL_TIM_ErrorCallback
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_DMAError) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAError) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Stop_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop_DMA) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Stop_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Init) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_MspInit) for HAL_TIM_OC_MspInit
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Init) refers to stm32f4xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Init) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Init) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_MspInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_MspInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_DeInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_MspDeInit) for HAL_TIM_OC_MspDeInit
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_DeInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_MspDeInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_MspDeInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Start) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Start) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_CCxChannelCmd) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Stop) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Stop) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Start_IT) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start_IT) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Start_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Stop_IT) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop_IT) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Stop_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for TIM_DMADelayPulseCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for HAL_TIM_PWM_PulseFinishedCallback
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_DMADelayPulseCplt) refers to stm32f4xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback) for HAL_TIM_PWM_PulseFinishedHalfCpltCallback
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_DMADelayPulseHalfCplt) refers to stm32f4xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Stop_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Stop_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop_DMA) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Stop_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Init) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_MspInit) for HAL_TIM_PWM_MspInit
    stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Init) refers to stm32f4xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Init) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Init) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_MspInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_DeInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_MspDeInit) for HAL_TIM_PWM_MspDeInit
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_DeInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspDeInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_MspDeInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Start) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Start) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Stop) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Stop) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Start_IT) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start_IT) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Start_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_IT) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_IT) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for TIM_DMADelayPulseCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_DMA) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Init) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_MspInit) for HAL_TIM_IC_MspInit
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Init) refers to stm32f4xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Init) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Init) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_MspInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_MspInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_DeInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_MspDeInit) for HAL_TIM_IC_MspDeInit
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_DeInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_MspDeInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_MspDeInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Start) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Start) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Stop) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Stop) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Start_IT) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start_IT) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Start_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Stop_IT) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop_IT) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Stop_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.TIM_DMACaptureCplt) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback) for HAL_TIM_IC_CaptureCallback
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_DMACaptureCplt) refers to stm32f4xx_hal_tim.o(.text.TIM_DMACaptureCplt) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_CaptureHalfCpltCallback) for HAL_TIM_IC_CaptureHalfCpltCallback
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_DMACaptureHalfCplt) refers to stm32f4xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Stop_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Stop_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop_DMA) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Stop_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Init) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspInit) for HAL_TIM_OnePulse_MspInit
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Init) refers to stm32f4xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Init) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Init) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_DeInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspDeInit) for HAL_TIM_OnePulse_MspDeInit
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_DeInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspDeInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspDeInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start_IT) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start_IT) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop_IT) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop_IT) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Init) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_MspInit) for HAL_TIM_Encoder_MspInit
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Init) refers to stm32f4xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Init) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Init) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_MspInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_MspInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_DeInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_MspDeInit) for HAL_TIM_Encoder_MspDeInit
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_DeInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_MspDeInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_MspDeInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Start) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Start) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_IT) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_IT) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_IT) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_IT) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_DMA) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback) for HAL_TIMEx_CommutCallback
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback) for HAL_TIM_IC_CaptureCallback
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to main.o(.text.HAL_TIM_PeriodElapsedCallback) for HAL_TIM_PeriodElapsedCallback
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_BreakCallback) for HAL_TIMEx_BreakCallback
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_TriggerCallback) for HAL_TIM_TriggerCallback
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback) for HAL_TIM_OC_DelayElapsedCallback
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for HAL_TIM_PWM_PulseFinishedCallback
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IRQHandler) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_CaptureCallback) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_DelayElapsedCallback) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedCallback) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedCallback) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedCallback) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_TriggerCallback) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_TriggerCallback) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.TIM_OC1_SetConfig) for TIM_OC1_SetConfig
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.TIM_OC2_SetConfig) for TIM_OC2_SetConfig
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.TIM_OC3_SetConfig) for TIM_OC3_SetConfig
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.TIM_OC4_SetConfig) for TIM_OC4_SetConfig
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_OC1_SetConfig) refers to stm32f4xx_hal_tim.o(.text.TIM_OC1_SetConfig) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_OC2_SetConfig) refers to stm32f4xx_hal_tim.o(.text.TIM_OC2_SetConfig) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_OC3_SetConfig) refers to stm32f4xx_hal_tim.o(.text.TIM_OC3_SetConfig) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_OC4_SetConfig) refers to stm32f4xx_hal_tim.o(.text.TIM_OC4_SetConfig) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.TIM_TI1_SetConfig) for TIM_TI1_SetConfig
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.TIM_TI2_SetConfig) for TIM_TI2_SetConfig
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_TI1_SetConfig) refers to stm32f4xx_hal_tim.o(.text.TIM_TI1_SetConfig) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_TI2_SetConfig) refers to stm32f4xx_hal_tim.o(.text.TIM_TI2_SetConfig) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.TIM_OC1_SetConfig) for TIM_OC1_SetConfig
    stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.TIM_OC2_SetConfig) for TIM_OC2_SetConfig
    stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.TIM_OC3_SetConfig) for TIM_OC3_SetConfig
    stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.TIM_OC4_SetConfig) for TIM_OC4_SetConfig
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.TIM_OC1_SetConfig) for TIM_OC1_SetConfig
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.TIM_OC2_SetConfig) for TIM_OC2_SetConfig
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.TIM_TI1_SetConfig) for TIM_TI1_SetConfig
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.TIM_TI2_SetConfig) for TIM_TI2_SetConfig
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStart) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStart) refers to stm32f4xx_hal_tim.o(.text.TIM_DMATriggerCplt) for TIM_DMATriggerCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStart) refers to stm32f4xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt) for TIM_DMATriggerHalfCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStart) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStart) refers to stm32f4xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) for TIMEx_DMACommutationCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStart) refers to stm32f4xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) for TIMEx_DMACommutationHalfCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStart) refers to stm32f4xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for TIM_DMADelayPulseCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStart) refers to stm32f4xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStart) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) for TIM_DMAPeriodElapsedCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStart) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) for TIM_DMAPeriodElapsedHalfCplt
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStart) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStart) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.TIM_DMATriggerCplt) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_TriggerCallback) for HAL_TIM_TriggerCallback
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_DMATriggerCplt) refers to stm32f4xx_hal_tim.o(.text.TIM_DMATriggerCplt) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_TriggerHalfCpltCallback) for HAL_TIM_TriggerHalfCpltCallback
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_DMATriggerHalfCplt) refers to stm32f4xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStop) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStop) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStop) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStart) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStart) refers to stm32f4xx_hal_tim.o(.text.TIM_DMATriggerCplt) for TIM_DMATriggerCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStart) refers to stm32f4xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt) for TIM_DMATriggerHalfCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStart) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStart) refers to stm32f4xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) for TIMEx_DMACommutationCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStart) refers to stm32f4xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) for TIMEx_DMACommutationHalfCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStart) refers to stm32f4xx_hal_tim.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStart) refers to stm32f4xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStart) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) for TIM_DMAPeriodElapsedCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStart) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) for TIM_DMAPeriodElapsedHalfCplt
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStart) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStart) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStop) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStop) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStop) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GenerateEvent) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_GenerateEvent) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigOCrefClear) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_ConfigOCrefClear) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_ETR_SetConfig) refers to stm32f4xx_hal_tim.o(.text.TIM_ETR_SetConfig) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource) refers to stm32f4xx_hal_tim.o(.text.TIM_TI1_ConfigInputStage) for TIM_TI1_ConfigInputStage
    stm32f4xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource) refers to stm32f4xx_hal_tim.o(.text.TIM_TI2_ConfigInputStage) for TIM_TI2_ConfigInputStage
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigClockSource) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_TI1_ConfigInputStage) refers to stm32f4xx_hal_tim.o(.text.TIM_TI1_ConfigInputStage) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_TI2_ConfigInputStage) refers to stm32f4xx_hal_tim.o(.text.TIM_TI2_ConfigInputStage) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigTI1Input) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_ConfigTI1Input) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro) refers to stm32f4xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) for TIM_SlaveTimer_SetConfig
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) refers to stm32f4xx_hal_tim.o(.text.TIM_TI1_ConfigInputStage) for TIM_TI1_ConfigInputStage
    stm32f4xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) refers to stm32f4xx_hal_tim.o(.text.TIM_TI2_ConfigInputStage) for TIM_TI2_ConfigInputStage
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_SlaveTimer_SetConfig) refers to stm32f4xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro_IT) refers to stm32f4xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) for TIM_SlaveTimer_SetConfig
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro_IT) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ReadCapturedValue) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_ReadCapturedValue) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedHalfCpltCallback) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedHalfCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_CaptureHalfCpltCallback) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_CaptureHalfCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_TriggerHalfCpltCallback) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_TriggerHalfCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ErrorCallback) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_ErrorCallback) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_GetState) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_GetState) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_GetState) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_GetState) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_GetState) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_GetState) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_GetState) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_GetState) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_GetState) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_GetState) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_GetState) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_GetState) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspInit) for HAL_TIMEx_HallSensor_MspInit
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) refers to stm32f4xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) refers to stm32f4xx_hal_tim.o(.text.TIM_TI1_SetConfig) for TIM_TI1_SetConfig
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) refers to stm32f4xx_hal_tim.o(.text.TIM_OC2_SetConfig) for TIM_OC2_SetConfig
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Init) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_MspInit) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_DeInit) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspDeInit) for HAL_TIMEx_HallSensor_MspDeInit
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_DeInit) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_MspDeInit) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspDeInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_IT) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start_IT) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_IT) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop_IT) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop_DMA) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.TIM_CCxNChannelCmd) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_IT) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start_IT) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_IT) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop_IT) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for TIM_DMADelayPulseCplt
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_DMA) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop_DMA) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_IT) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start_IT) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_IT) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop_IT) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for TIM_DMADelayPulseCplt
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_DMA) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop_DMA) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Start) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Stop) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start_IT) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Start_IT) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop_IT) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Stop_IT) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent_IT) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to stm32f4xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) for TIMEx_DMACommutationCplt
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to stm32f4xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) for TIMEx_DMACommutationHalfCplt
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback) for HAL_TIMEx_CommutCallback
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.TIMEx_DMACommutationCplt) refers to stm32f4xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutHalfCpltCallback) for HAL_TIMEx_CommutHalfCpltCallback
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.TIMEx_DMACommutationHalfCplt) refers to stm32f4xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_MasterConfigSynchronization) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_MasterConfigSynchronization) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigBreakDeadTime) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigBreakDeadTime) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_RemapConfig) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_RemapConfig) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_CommutCallback) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_CommutHalfCpltCallback) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutHalfCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_BreakCallback) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_BreakCallback) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_GetState) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_GetState) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_UART_Init) refers to usart.o(.text.HAL_UART_MspInit) for HAL_UART_MspInit
    stm32f4xx_hal_uart.o(.text.HAL_UART_Init) refers to stm32f4xx_hal_uart.o(.text.UART_SetConfig) for UART_SetConfig
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Init) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_Init) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_MspInit) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_MspInit) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.UART_SetConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) for HAL_RCC_GetPCLK2Freq
    stm32f4xx_hal_uart.o(.text.UART_SetConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for HAL_RCC_GetPCLK1Freq
    stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_SetConfig) refers to stm32f4xx_hal_uart.o(.text.UART_SetConfig) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_HalfDuplex_Init) refers to usart.o(.text.HAL_UART_MspInit) for HAL_UART_MspInit
    stm32f4xx_hal_uart.o(.text.HAL_HalfDuplex_Init) refers to stm32f4xx_hal_uart.o(.text.UART_SetConfig) for UART_SetConfig
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_Init) refers to stm32f4xx_hal_uart.o(.text.HAL_HalfDuplex_Init) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_LIN_Init) refers to usart.o(.text.HAL_UART_MspInit) for HAL_UART_MspInit
    stm32f4xx_hal_uart.o(.text.HAL_LIN_Init) refers to stm32f4xx_hal_uart.o(.text.UART_SetConfig) for UART_SetConfig
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_LIN_Init) refers to stm32f4xx_hal_uart.o(.text.HAL_LIN_Init) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_MultiProcessor_Init) refers to usart.o(.text.HAL_UART_MspInit) for HAL_UART_MspInit
    stm32f4xx_hal_uart.o(.text.HAL_MultiProcessor_Init) refers to stm32f4xx_hal_uart.o(.text.UART_SetConfig) for UART_SetConfig
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_Init) refers to stm32f4xx_hal_uart.o(.text.HAL_MultiProcessor_Init) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_UART_DeInit) refers to usart.o(.text.HAL_UART_MspDeInit) for HAL_UART_MspDeInit
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DeInit) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_MspDeInit) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_MspDeInit) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_UART_Transmit) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_uart.o(.text.HAL_UART_Transmit) refers to stm32f4xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout) for UART_WaitOnFlagUntilTimeout
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_Transmit) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_WaitOnFlagUntilTimeout) refers to stm32f4xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_UART_Receive) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_uart.o(.text.HAL_UART_Receive) refers to stm32f4xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout) for UART_WaitOnFlagUntilTimeout
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_Receive) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit_IT) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_Transmit_IT) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive_IT) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_Receive_IT) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_UART_Transmit_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_uart.o(.text.HAL_UART_Transmit_DMA) refers to stm32f4xx_hal_uart.o(.text.UART_DMAError) for UART_DMAError
    stm32f4xx_hal_uart.o(.text.HAL_UART_Transmit_DMA) refers to stm32f4xx_hal_uart.o(.text.UART_DMATxHalfCplt) for UART_DMATxHalfCplt
    stm32f4xx_hal_uart.o(.text.HAL_UART_Transmit_DMA) refers to stm32f4xx_hal_uart.o(.text.UART_DMATransmitCplt) for UART_DMATransmitCplt
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit_DMA) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_Transmit_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.UART_DMATransmitCplt) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_TxCpltCallback) for HAL_UART_TxCpltCallback
    stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMATransmitCplt) refers to stm32f4xx_hal_uart.o(.text.UART_DMATransmitCplt) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.UART_DMATxHalfCplt) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_TxHalfCpltCallback) for HAL_UART_TxHalfCpltCallback
    stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMATxHalfCplt) refers to stm32f4xx_hal_uart.o(.text.UART_DMATxHalfCplt) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.UART_DMAError) refers to stm32f4xx_hal_uart.o(.text.UART_EndRxTransfer) for UART_EndRxTransfer
    stm32f4xx_hal_uart.o(.text.UART_DMAError) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_ErrorCallback) for HAL_UART_ErrorCallback
    stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMAError) refers to stm32f4xx_hal_uart.o(.text.UART_DMAError) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_UART_Receive_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_uart.o(.text.HAL_UART_Receive_DMA) refers to stm32f4xx_hal_uart.o(.text.UART_DMAError) for UART_DMAError
    stm32f4xx_hal_uart.o(.text.HAL_UART_Receive_DMA) refers to stm32f4xx_hal_uart.o(.text.UART_DMARxHalfCplt) for UART_DMARxHalfCplt
    stm32f4xx_hal_uart.o(.text.HAL_UART_Receive_DMA) refers to stm32f4xx_hal_uart.o(.text.UART_DMAReceiveCplt) for UART_DMAReceiveCplt
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive_DMA) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_Receive_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.UART_DMAReceiveCplt) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_RxCpltCallback) for HAL_UART_RxCpltCallback
    stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMAReceiveCplt) refers to stm32f4xx_hal_uart.o(.text.UART_DMAReceiveCplt) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.UART_DMARxHalfCplt) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_RxHalfCpltCallback) for HAL_UART_RxHalfCpltCallback
    stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMARxHalfCplt) refers to stm32f4xx_hal_uart.o(.text.UART_DMARxHalfCplt) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAPause) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_DMAPause) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAResume) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_DMAResume) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_UART_DMAStop) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f4xx_hal_uart.o(.text.HAL_UART_DMAStop) refers to stm32f4xx_hal_uart.o(.text.UART_EndRxTransfer) for UART_EndRxTransfer
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAStop) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_DMAStop) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_EndRxTransfer) refers to stm32f4xx_hal_uart.o(.text.UART_EndRxTransfer) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_UART_Abort) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f4xx_hal_uart.o(.text.HAL_UART_Abort) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_GetError) for HAL_DMA_GetError
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Abort) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_Abort) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_UART_AbortTransmit) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f4xx_hal_uart.o(.text.HAL_UART_AbortTransmit) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_GetError) for HAL_DMA_GetError
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmit) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_AbortTransmit) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_UART_AbortReceive) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f4xx_hal_uart.o(.text.HAL_UART_AbortReceive) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_GetError) for HAL_DMA_GetError
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceive) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_AbortReceive) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_UART_Abort_IT) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_uart.o(.text.HAL_UART_Abort_IT) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_AbortCpltCallback) for HAL_UART_AbortCpltCallback
    stm32f4xx_hal_uart.o(.text.HAL_UART_Abort_IT) refers to stm32f4xx_hal_uart.o(.text.UART_DMATxAbortCallback) for UART_DMATxAbortCallback
    stm32f4xx_hal_uart.o(.text.HAL_UART_Abort_IT) refers to stm32f4xx_hal_uart.o(.text.UART_DMARxAbortCallback) for UART_DMARxAbortCallback
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Abort_IT) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_Abort_IT) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.UART_DMATxAbortCallback) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_AbortCpltCallback) for HAL_UART_AbortCpltCallback
    stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMATxAbortCallback) refers to stm32f4xx_hal_uart.o(.text.UART_DMATxAbortCallback) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.UART_DMARxAbortCallback) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_AbortCpltCallback) for HAL_UART_AbortCpltCallback
    stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMARxAbortCallback) refers to stm32f4xx_hal_uart.o(.text.UART_DMARxAbortCallback) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortCpltCallback) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_AbortCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_UART_AbortTransmit_IT) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_uart.o(.text.HAL_UART_AbortTransmit_IT) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_AbortTransmitCpltCallback) for HAL_UART_AbortTransmitCpltCallback
    stm32f4xx_hal_uart.o(.text.HAL_UART_AbortTransmit_IT) refers to stm32f4xx_hal_uart.o(.text.UART_DMATxOnlyAbortCallback) for UART_DMATxOnlyAbortCallback
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmit_IT) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_AbortTransmit_IT) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.UART_DMATxOnlyAbortCallback) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_AbortTransmitCpltCallback) for HAL_UART_AbortTransmitCpltCallback
    stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMATxOnlyAbortCallback) refers to stm32f4xx_hal_uart.o(.text.UART_DMATxOnlyAbortCallback) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmitCpltCallback) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_AbortTransmitCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_UART_AbortReceive_IT) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_uart.o(.text.HAL_UART_AbortReceive_IT) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_AbortReceiveCpltCallback) for HAL_UART_AbortReceiveCpltCallback
    stm32f4xx_hal_uart.o(.text.HAL_UART_AbortReceive_IT) refers to stm32f4xx_hal_uart.o(.text.UART_DMARxOnlyAbortCallback) for UART_DMARxOnlyAbortCallback
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceive_IT) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_AbortReceive_IT) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.UART_DMARxOnlyAbortCallback) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_AbortReceiveCpltCallback) for HAL_UART_AbortReceiveCpltCallback
    stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMARxOnlyAbortCallback) refers to stm32f4xx_hal_uart.o(.text.UART_DMARxOnlyAbortCallback) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceiveCpltCallback) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_AbortReceiveCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32f4xx_hal_uart.o(.text.UART_Receive_IT) for UART_Receive_IT
    stm32f4xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32f4xx_hal_uart.o(.text.UART_EndRxTransfer) for UART_EndRxTransfer
    stm32f4xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_TxCpltCallback) for HAL_UART_TxCpltCallback
    stm32f4xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_ErrorCallback) for HAL_UART_ErrorCallback
    stm32f4xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32f4xx_hal_uart.o(.text.UART_DMAAbortOnError) for UART_DMAAbortOnError
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_IRQHandler) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.UART_Receive_IT) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_RxCpltCallback) for HAL_UART_RxCpltCallback
    stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_Receive_IT) refers to stm32f4xx_hal_uart.o(.text.UART_Receive_IT) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.UART_DMAAbortOnError) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_ErrorCallback) for HAL_UART_ErrorCallback
    stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMAAbortOnError) refers to stm32f4xx_hal_uart.o(.text.UART_DMAAbortOnError) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_ErrorCallback) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_ErrorCallback) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_TxCpltCallback) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_TxCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_TxHalfCpltCallback) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_TxHalfCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_RxCpltCallback) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_RxCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_RxHalfCpltCallback) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_RxHalfCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_LIN_SendBreak) refers to stm32f4xx_hal_uart.o(.text.HAL_LIN_SendBreak) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_EnterMuteMode) refers to stm32f4xx_hal_uart.o(.text.HAL_MultiProcessor_EnterMuteMode) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_ExitMuteMode) refers to stm32f4xx_hal_uart.o(.text.HAL_MultiProcessor_ExitMuteMode) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_EnableTransmitter) refers to stm32f4xx_hal_uart.o(.text.HAL_HalfDuplex_EnableTransmitter) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_EnableReceiver) refers to stm32f4xx_hal_uart.o(.text.HAL_HalfDuplex_EnableReceiver) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_GetState) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_GetState) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_GetError) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_GetError) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DeInit) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_OscConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for HAL_RCC_GetSysClockFreq
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32f4xx_hal_timebase_tim.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_stm32f4xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) refers to lludivv7m.o(.text) for __aeabi_uldivmod
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_MCOConfig) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_MCOConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableCSS) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_EnableCSS) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DisableCSS) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_DisableCSS) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) refers to system_stm32f4xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) refers to system_stm32f4xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK2Freq) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetOscConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetOscConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetClockConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_CSSCallback) for HAL_RCC_CSSCallback
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_CSSCallback) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_CSSCallback) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKFreq) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_SelectLSEMode) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_SelectLSEMode) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLI2S) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLI2S) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLI2S) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLI2S) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLI2S) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLI2S) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_DeInit) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_DeInit) refers to stm32f4xx_hal_timebase_tim.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_DeInit) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCC_DeInit) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_Program) refers to stm32f4xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_Program) refers to stm32f4xx_hal_flash.o(.text.FLASH_Program_Byte) for FLASH_Program_Byte
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_Program) refers to stm32f4xx_hal_flash.o(.text.FLASH_Program_Word) for FLASH_Program_Word
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_Program) refers to stm32f4xx_hal_flash.o(.text.FLASH_Program_HalfWord) for FLASH_Program_HalfWord
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_Program) refers to stm32f4xx_hal_flash.o(.text.FLASH_Program_DoubleWord) for FLASH_Program_DoubleWord
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_Program) refers to stm32f4xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Program) refers to stm32f4xx_hal_flash.o(.text.HAL_FLASH_Program) for [Anonymous Symbol]
    stm32f4xx_hal_flash.o(.text.FLASH_WaitForLastOperation) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_flash.o(.text.FLASH_WaitForLastOperation) refers to stm32f4xx_hal_flash.o(.text.FLASH_SetErrorCode) for FLASH_SetErrorCode
    stm32f4xx_hal_flash.o(.text.FLASH_WaitForLastOperation) refers to stm32f4xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32f4xx_hal_flash.o(.ARM.exidx.text.FLASH_WaitForLastOperation) refers to stm32f4xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for [Anonymous Symbol]
    stm32f4xx_hal_flash.o(.ARM.exidx.text.FLASH_Program_Byte) refers to stm32f4xx_hal_flash.o(.text.FLASH_Program_Byte) for [Anonymous Symbol]
    stm32f4xx_hal_flash.o(.ARM.exidx.text.FLASH_Program_HalfWord) refers to stm32f4xx_hal_flash.o(.text.FLASH_Program_HalfWord) for [Anonymous Symbol]
    stm32f4xx_hal_flash.o(.ARM.exidx.text.FLASH_Program_Word) refers to stm32f4xx_hal_flash.o(.text.FLASH_Program_Word) for [Anonymous Symbol]
    stm32f4xx_hal_flash.o(.ARM.exidx.text.FLASH_Program_DoubleWord) refers to stm32f4xx_hal_flash.o(.text.FLASH_Program_DoubleWord) for [Anonymous Symbol]
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_Program_IT) refers to stm32f4xx_hal_flash.o(.text.FLASH_Program_Byte) for FLASH_Program_Byte
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_Program_IT) refers to stm32f4xx_hal_flash.o(.text.FLASH_Program_Word) for FLASH_Program_Word
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_Program_IT) refers to stm32f4xx_hal_flash.o(.text.FLASH_Program_HalfWord) for FLASH_Program_HalfWord
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_Program_IT) refers to stm32f4xx_hal_flash.o(.text.FLASH_Program_DoubleWord) for FLASH_Program_DoubleWord
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_Program_IT) refers to stm32f4xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Program_IT) refers to stm32f4xx_hal_flash.o(.text.HAL_FLASH_Program_IT) for [Anonymous Symbol]
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) refers to stm32f4xx_hal_flash.o(.text.FLASH_SetErrorCode) for FLASH_SetErrorCode
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) refers to stm32f4xx_hal_flash.o(.text.HAL_FLASH_OperationErrorCallback) for HAL_FLASH_OperationErrorCallback
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) refers to stm32f4xx_hal_flash.o(.text.HAL_FLASH_EndOfOperationCallback) for HAL_FLASH_EndOfOperationCallback
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_Erase_Sector) for FLASH_Erase_Sector
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_FlushCaches) for FLASH_FlushCaches
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) refers to stm32f4xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_IRQHandler) refers to stm32f4xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_flash.o(.text.FLASH_SetErrorCode) refers to stm32f4xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32f4xx_hal_flash.o(.ARM.exidx.text.FLASH_SetErrorCode) refers to stm32f4xx_hal_flash.o(.text.FLASH_SetErrorCode) for [Anonymous Symbol]
    stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OperationErrorCallback) refers to stm32f4xx_hal_flash.o(.text.HAL_FLASH_OperationErrorCallback) for [Anonymous Symbol]
    stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_EndOfOperationCallback) refers to stm32f4xx_hal_flash.o(.text.HAL_FLASH_EndOfOperationCallback) for [Anonymous Symbol]
    stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Unlock) refers to stm32f4xx_hal_flash.o(.text.HAL_FLASH_Unlock) for [Anonymous Symbol]
    stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Lock) refers to stm32f4xx_hal_flash.o(.text.HAL_FLASH_Lock) for [Anonymous Symbol]
    stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Unlock) refers to stm32f4xx_hal_flash.o(.text.HAL_FLASH_OB_Unlock) for [Anonymous Symbol]
    stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Lock) refers to stm32f4xx_hal_flash.o(.text.HAL_FLASH_OB_Lock) for [Anonymous Symbol]
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_OB_Launch) refers to stm32f4xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Launch) refers to stm32f4xx_hal_flash.o(.text.HAL_FLASH_OB_Launch) for [Anonymous Symbol]
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_GetError) refers to stm32f4xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_GetError) refers to stm32f4xx_hal_flash.o(.text.HAL_FLASH_GetError) for [Anonymous Symbol]
    stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase) refers to stm32f4xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_MassErase) for FLASH_MassErase
    stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_Erase_Sector) for FLASH_Erase_Sector
    stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_FlushCaches) for FLASH_FlushCaches
    stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase) refers to stm32f4xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_Erase) refers to stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase) for [Anonymous Symbol]
    stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_MassErase) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_MassErase) for [Anonymous Symbol]
    stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_Erase_Sector) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_Erase_Sector) for [Anonymous Symbol]
    stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_FlushCaches) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_FlushCaches) for [Anonymous Symbol]
    stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase_IT) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_MassErase) for FLASH_MassErase
    stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase_IT) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_Erase_Sector) for FLASH_Erase_Sector
    stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase_IT) refers to stm32f4xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_Erase_IT) refers to stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase_IT) for [Anonymous Symbol]
    stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram) refers to stm32f4xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram) refers to stm32f4xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OBProgram) refers to stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram) for [Anonymous Symbol]
    stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OBGetConfig) refers to stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBGetConfig) for [Anonymous Symbol]
    stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_AdvOBProgram) refers to stm32f4xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_AdvOBProgram) refers to stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_AdvOBProgram) for [Anonymous Symbol]
    stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_AdvOBGetConfig) refers to stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_AdvOBGetConfig) for [Anonymous Symbol]
    stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OB_SelectPCROP) refers to stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_OB_SelectPCROP) for [Anonymous Symbol]
    stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OB_DeSelectPCROP) refers to stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_OB_DeSelectPCROP) for [Anonymous Symbol]
    stm32f4xx_hal_flash_ramfunc.o(.ARM.exidx.RamFunc) refers to stm32f4xx_hal_flash_ramfunc.o(.RamFunc) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_ReadPin) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_TogglePin) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_LockPin) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback) for HAL_GPIO_EXTI_Callback
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback) for [Anonymous Symbol]
    stm32f4xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MultiBufferStart) refers to stm32f4xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart) for [Anonymous Symbol]
    stm32f4xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MultiBufferStart_IT) refers to stm32f4xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart_IT) for [Anonymous Symbol]
    stm32f4xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_ChangeMemory) refers to stm32f4xx_hal_dma_ex.o(.text.HAL_DMAEx_ChangeMemory) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.text.HAL_DMA_Init) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_dma.o(.text.HAL_DMA_Init) refers to stm32f4xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift) for DMA_CalcBaseAndBitshift
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Init) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Init) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.ARM.exidx.text.DMA_CalcBaseAndBitshift) refers to stm32f4xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.text.HAL_DMA_DeInit) refers to stm32f4xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift) for DMA_CalcBaseAndBitshift
    stm32f4xx_hal_dma.o(.text.HAL_DMA_DeInit) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_DeInit) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.text.HAL_DMA_Start) refers to stm32f4xx_hal_dma.o(.text.DMA_SetConfig) for DMA_SetConfig
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.ARM.exidx.text.DMA_SetConfig) refers to stm32f4xx_hal_dma.o(.text.DMA_SetConfig) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) refers to stm32f4xx_hal_dma.o(.text.DMA_SetConfig) for DMA_SetConfig
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start_IT) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort_IT) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.text.HAL_DMA_PollForTransfer) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_dma.o(.text.HAL_DMA_PollForTransfer) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_PollForTransfer) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_PollForTransfer) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.text.HAL_DMA_IRQHandler) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_IRQHandler) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_RegisterCallback) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_RegisterCallback) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.text.HAL_DMA_UnRegisterCallback) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_UnRegisterCallback) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_UnRegisterCallback) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetState) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_GetState) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetError) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_GetError) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DeInit) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_ConfigPVD) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_ConfigPVD) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnablePVD) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnablePVD) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisablePVD) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisablePVD) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableWakeUpPin) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableWakeUpPin) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableWakeUpPin) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableWakeUpPin) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTANDBYMode) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnterSTANDBYMode) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_PVDCallback) for HAL_PWR_PVDCallback
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVD_IRQHandler) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVDCallback) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_PVDCallback) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableSleepOnExit) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableSleepOnExit) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableSEVOnPend) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableSEVOnPend) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBkUpReg) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableBkUpReg) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBkUpReg) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBkUpReg) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableBkUpReg) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBkUpReg) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableFlashPowerDown) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableFlashPowerDown) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableFlashPowerDown) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableFlashPowerDown) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetVoltageRange) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVoltageRange) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ControlVoltageScaling) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableMainRegulatorLowVoltage) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableMainRegulatorLowVoltage) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableMainRegulatorLowVoltage) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableMainRegulatorLowVoltage) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableLowRegulatorLowVoltage) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableLowRegulatorLowVoltage) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableLowRegulatorLowVoltage) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableLowRegulatorLowVoltage) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriorityGrouping) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriority) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SystemReset) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SystemReset) for __NVIC_SystemReset
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SystemReset) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SystemReset) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SystemReset) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config) refers to stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Config) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Disable) refers to stm32f4xx_hal_cortex.o(.text.HAL_MPU_Disable) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Enable) refers to stm32f4xx_hal_cortex.o(.text.HAL_MPU_Enable) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigRegion) refers to stm32f4xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriorityGrouping) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetActive) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetActive) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig) refers to stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) refers to stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Callback) for HAL_SYSTICK_Callback
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler) refers to stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback) refers to stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Callback) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_Init) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) for HAL_NVIC_SetPriorityGrouping
    stm32f4xx_hal.o(.text.HAL_Init) refers to stm32f4xx_hal_timebase_tim.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f4xx_hal.o(.text.HAL_Init) refers to stm32f4xx_hal_msp.o(.text.HAL_MspInit) for HAL_MspInit
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_Init) refers to stm32f4xx_hal.o(.text.HAL_Init) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_InitTick) refers to stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Config) for HAL_SYSTICK_Config
    stm32f4xx_hal.o(.text.HAL_InitTick) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    stm32f4xx_hal.o(.text.HAL_InitTick) refers to stm32f4xx_hal.o(.data..L_MergedGlobals) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_InitTick) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_InitTick) refers to stm32f4xx_hal.o(.text.HAL_InitTick) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_MspInit) refers to stm32f4xx_hal.o(.text.HAL_MspInit) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_DeInit) refers to stm32f4xx_hal.o(.text.HAL_MspDeInit) for HAL_MspDeInit
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DeInit) refers to stm32f4xx_hal.o(.text.HAL_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_MspDeInit) refers to stm32f4xx_hal.o(.text.HAL_MspDeInit) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_IncTick) refers to stm32f4xx_hal.o(.data..L_MergedGlobals) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_IncTick) refers to stm32f4xx_hal.o(.bss.uwTick) for uwTick
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_IncTick) refers to stm32f4xx_hal.o(.text.HAL_IncTick) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_GetTick) refers to stm32f4xx_hal.o(.bss.uwTick) for uwTick
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetTick) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_GetTickPrio) refers to stm32f4xx_hal.o(.data..L_MergedGlobals) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetTickPrio) refers to stm32f4xx_hal.o(.text.HAL_GetTickPrio) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_SetTickFreq) refers to stm32f4xx_hal_timebase_tim.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f4xx_hal.o(.text.HAL_SetTickFreq) refers to stm32f4xx_hal.o(.data..L_MergedGlobals) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_SetTickFreq) refers to stm32f4xx_hal.o(.text.HAL_SetTickFreq) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_GetTickFreq) refers to stm32f4xx_hal.o(.data..L_MergedGlobals) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetTickFreq) refers to stm32f4xx_hal.o(.text.HAL_GetTickFreq) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_Delay) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal.o(.text.HAL_Delay) refers to stm32f4xx_hal.o(.data..L_MergedGlobals) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_Delay) refers to stm32f4xx_hal.o(.text.HAL_Delay) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_SuspendTick) refers to stm32f4xx_hal.o(.text.HAL_SuspendTick) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_ResumeTick) refers to stm32f4xx_hal.o(.text.HAL_ResumeTick) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetHalVersion) refers to stm32f4xx_hal.o(.text.HAL_GetHalVersion) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetREVID) refers to stm32f4xx_hal.o(.text.HAL_GetREVID) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetDEVID) refers to stm32f4xx_hal.o(.text.HAL_GetDEVID) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGSleepMode) refers to stm32f4xx_hal.o(.text.HAL_DBGMCU_EnableDBGSleepMode) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGSleepMode) refers to stm32f4xx_hal.o(.text.HAL_DBGMCU_DisableDBGSleepMode) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode) refers to stm32f4xx_hal.o(.text.HAL_DBGMCU_EnableDBGStopMode) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode) refers to stm32f4xx_hal.o(.text.HAL_DBGMCU_DisableDBGStopMode) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode) refers to stm32f4xx_hal.o(.text.HAL_DBGMCU_EnableDBGStandbyMode) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode) refers to stm32f4xx_hal.o(.text.HAL_DBGMCU_DisableDBGStandbyMode) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_EnableCompensationCell) refers to stm32f4xx_hal.o(.text.HAL_EnableCompensationCell) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DisableCompensationCell) refers to stm32f4xx_hal.o(.text.HAL_DisableCompensationCell) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw0) refers to stm32f4xx_hal.o(.text.HAL_GetUIDw0) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw1) refers to stm32f4xx_hal.o(.text.HAL_GetUIDw1) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw2) refers to stm32f4xx_hal.o(.text.HAL_GetUIDw2) for [Anonymous Symbol]
    stm32f4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_SetConfigLine) refers to stm32f4xx_hal_exti.o(.text.HAL_EXTI_SetConfigLine) for [Anonymous Symbol]
    stm32f4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetConfigLine) refers to stm32f4xx_hal_exti.o(.text.HAL_EXTI_GetConfigLine) for [Anonymous Symbol]
    stm32f4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_ClearConfigLine) refers to stm32f4xx_hal_exti.o(.text.HAL_EXTI_ClearConfigLine) for [Anonymous Symbol]
    stm32f4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_RegisterCallback) refers to stm32f4xx_hal_exti.o(.text.HAL_EXTI_RegisterCallback) for [Anonymous Symbol]
    stm32f4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetHandle) refers to stm32f4xx_hal_exti.o(.text.HAL_EXTI_GetHandle) for [Anonymous Symbol]
    stm32f4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_IRQHandler) refers to stm32f4xx_hal_exti.o(.text.HAL_EXTI_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetPending) refers to stm32f4xx_hal_exti.o(.text.HAL_EXTI_GetPending) for [Anonymous Symbol]
    stm32f4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_ClearPending) refers to stm32f4xx_hal_exti.o(.text.HAL_EXTI_ClearPending) for [Anonymous Symbol]
    stm32f4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GenerateSWI) refers to stm32f4xx_hal_exti.o(.text.HAL_EXTI_GenerateSWI) for [Anonymous Symbol]
    system_stm32f4xx.o(.ARM.exidx.text.SystemInit) refers to system_stm32f4xx.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32f4xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32f4xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f4xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32f4xx.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32f4xx.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    irq_cm4f.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_cm4f.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_cm4f.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_cm4f.o(.text) refers to rtx_lib.o(.rodata.osRtxUserSVC) for osRtxUserSVC
    rtx_delay.o(.text.osDelay) refers to rtx_evr.o(.text.EvrRtxDelay) for EvrRtxDelay
    rtx_delay.o(.text.osDelay) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayUntil) for EvrRtxDelayUntil
    rtx_delay.o(.text.osDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_evr.o(.text.EvrRtxDelayStarted) for EvrRtxDelayStarted
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_evr.o(.text.EvrRtxDelayCompleted) for EvrRtxDelayCompleted
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayUntilStarted) for EvrRtxDelayUntilStarted
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayCompleted) for EvrRtxDelayCompleted
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsNew) for EvrRtxEventFlagsNew
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evflags.o(.text.svcRtxEventFlagsNew) for svcRtxEventFlagsNew
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsNew) refers to rtx_evflags.o(.text.osEventFlagsNew) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evr.o(.text.EvrRtxEventFlagsGetName) for EvrRtxEventFlagsGetName
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.svcRtxEventFlagsGetName) for svcRtxEventFlagsGetName
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.osEventFlagsGetName) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSet) for EvrRtxEventFlagsSet
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSetDone) for EvrRtxEventFlagsSetDone
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evflags.o(.text.svcRtxEventFlagsSet) for svcRtxEventFlagsSet
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsSet) refers to rtx_evflags.o(.text.osEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsClear) for EvrRtxEventFlagsClear
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evflags.o(.text.svcRtxEventFlagsClear) for svcRtxEventFlagsClear
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsClear) refers to rtx_evflags.o(.text.osEventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsClearDone) for EvrRtxEventFlagsClearDone
    rtx_evflags.o(.text.svcRtxEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsClear) refers to rtx_evflags.o(.text.svcRtxEventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsGet) refers to rtx_evflags.o(.text.svcRtxEventFlagsGet) for svcRtxEventFlagsGet
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsGet) refers to rtx_evflags.o(.text.osEventFlagsGet) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsGet) refers to rtx_evr.o(.text.EvrRtxEventFlagsGet) for EvrRtxEventFlagsGet
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGet) refers to rtx_evflags.o(.text.svcRtxEventFlagsGet) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWait) for EvrRtxEventFlagsWait
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) for EvrRtxEventFlagsWaitNotCompleted
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.svcRtxEventFlagsWait) for svcRtxEventFlagsWait
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsWait) refers to rtx_evflags.o(.text.osEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsDelete) for EvrRtxEventFlagsDelete
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.svcRtxEventFlagsDelete) for svcRtxEventFlagsDelete
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.osEventFlagsDelete) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsCreated) for EvrRtxEventFlagsCreated
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.osRtxEventFlagsPostProcess) for osRtxEventFlagsPostProcess
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.svcRtxEventFlagsNew) for [Anonymous Symbol]
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsPostProcess) refers to rtx_evflags.o(.text.osRtxEventFlagsPostProcess) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.EventFlagsCheck) refers to rtx_evflags.o(.text.EventFlagsCheck) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsGetName) refers to rtx_evr.o(.text.EvrRtxEventFlagsGetName) for EvrRtxEventFlagsGetName
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGetName) refers to rtx_evflags.o(.text.svcRtxEventFlagsGetName) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSetDone) for EvrRtxEventFlagsSetDone
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.svcRtxEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitPending) for EvrRtxEventFlagsWaitPending
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) for EvrRtxEventFlagsWaitNotCompleted
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) for EvrRtxEventFlagsWaitTimeout
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.svcRtxEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsDestroyed) for EvrRtxEventFlagsDestroyed
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsDelete) refers to rtx_evflags.o(.text.svcRtxEventFlagsDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryInit) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryInit) refers to rtx_evr.o(.text.EvrRtxMemoryInit) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryAlloc) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryFree) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryFree) refers to rtx_evr.o(.text.EvrRtxMemoryFree) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryBlockInit) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockInit) refers to rtx_evr.o(.text.EvrRtxMemoryBlockInit) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryBlockFree) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockFree) refers to rtx_evr.o(.text.EvrRtxMemoryBlockFree) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelError) refers to rtx_evr.o(.text.EvrRtxKernelError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelInitialize) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelInitialize) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelInitialized) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialized) refers to rtx_evr.o(.text.EvrRtxKernelInitialized) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelGetInfo) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetInfo) refers to rtx_evr.o(.text.EvrRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) refers to eventrecorder.o(.text.EventRecordData) for EventRecordData
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInfoRetrieved) refers to rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelGetState) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetState) refers to rtx_evr.o(.text.EvrRtxKernelGetState) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelStart) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelStart) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelStarted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStarted) refers to rtx_evr.o(.text.EvrRtxKernelStarted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelLock) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelLock) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelLocked) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLocked) refers to rtx_evr.o(.text.EvrRtxKernelLocked) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelUnlock) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelUnlock) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelUnlocked) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlocked) refers to rtx_evr.o(.text.EvrRtxKernelUnlocked) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelRestoreLock) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelLockRestored) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLockRestored) refers to rtx_evr.o(.text.EvrRtxKernelLockRestored) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelSuspend) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelSuspend) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelSuspended) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspended) refers to rtx_evr.o(.text.EvrRtxKernelSuspended) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelResume) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelResume) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelResumed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResumed) refers to rtx_evr.o(.text.EvrRtxKernelResumed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelGetTickCount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickCount) refers to rtx_evr.o(.text.EvrRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelGetTickFreq) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelGetSysTimerCount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetSysTimerCount) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelGetSysTimerFreq) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetSysTimerFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadError) refers to rtx_evr.o(.text.EvrRtxThreadError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadNew) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadCreated) refers to rtx_evr.o(.text.EvrRtxThreadCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetName) refers to rtx_evr.o(.text.EvrRtxThreadGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetId) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetId) refers to rtx_evr.o(.text.EvrRtxThreadGetId) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetState) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetState) refers to rtx_evr.o(.text.EvrRtxThreadGetState) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetStackSize) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSize) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetStackSpace) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSpace) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadSetPriority) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadPriorityUpdated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPriorityUpdated) refers to rtx_evr.o(.text.EvrRtxThreadPriorityUpdated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetPriority) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetPriority) refers to rtx_evr.o(.text.EvrRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadYield) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadYield) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadSuspend) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadSuspend) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadSuspended) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspended) refers to rtx_evr.o(.text.EvrRtxThreadSuspended) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadResume) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadResume) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadResumed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResumed) refers to rtx_evr.o(.text.EvrRtxThreadResumed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadDetach) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadDetach) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadDetached) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetached) refers to rtx_evr.o(.text.EvrRtxThreadDetached) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadJoin) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoin) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadJoinPending) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoinPending) refers to rtx_evr.o(.text.EvrRtxThreadJoinPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadJoined) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoined) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadBlocked) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadBlocked) refers to rtx_evr.o(.text.EvrRtxThreadBlocked) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadUnblocked) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadUnblocked) refers to rtx_evr.o(.text.EvrRtxThreadUnblocked) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadPreempted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPreempted) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadSwitched) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSwitched) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadExit) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadExit) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadTerminate) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadTerminate) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDestroyed) refers to rtx_evr.o(.text.EvrRtxThreadDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetCount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetCount) refers to rtx_evr.o(.text.EvrRtxThreadGetCount) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadEnumerate) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadEnumerate) refers to rtx_evr.o(.text.EvrRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsError) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsSet) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSetDone) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsClear) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsClearDone) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClearDone) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClearDone) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsGet) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsGet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsWait) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitPending) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitTimeout) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitCompleted) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitNotCompleted) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxDelayError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayError) refers to rtx_evr.o(.text.EvrRtxDelayError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxDelay) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelay) refers to rtx_evr.o(.text.EvrRtxDelay) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxDelayUntil) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayUntil) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxDelayStarted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayStarted) refers to rtx_evr.o(.text.EvrRtxDelayStarted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxDelayUntilStarted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntilStarted) refers to rtx_evr.o(.text.EvrRtxDelayUntilStarted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxDelayCompleted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayCompleted) refers to rtx_evr.o(.text.EvrRtxDelayCompleted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerError) refers to rtx_evr.o(.text.EvrRtxTimerError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerCallback) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCallback) refers to rtx_evr.o(.text.EvrRtxTimerCallback) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerNew) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCreated) refers to rtx_evr.o(.text.EvrRtxTimerCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerGetName) refers to rtx_evr.o(.text.EvrRtxTimerGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerStart) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerStart) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerStarted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStarted) refers to rtx_evr.o(.text.EvrRtxTimerStarted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerStop) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerStop) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerStopped) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStopped) refers to rtx_evr.o(.text.EvrRtxTimerStopped) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerIsRunning) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerIsRunning) refers to rtx_evr.o(.text.EvrRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDestroyed) refers to rtx_evr.o(.text.EvrRtxTimerDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsError) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsNew) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsCreated) refers to rtx_evr.o(.text.EvrRtxEventFlagsCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGetName) refers to rtx_evr.o(.text.EvrRtxEventFlagsGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsSet) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSet) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsSetDone) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSetDone) refers to rtx_evr.o(.text.EvrRtxEventFlagsSetDone) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsClear) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsClear) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsClearDone) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClearDone) refers to rtx_evr.o(.text.EvrRtxEventFlagsClearDone) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsGet) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGet) refers to rtx_evr.o(.text.EvrRtxEventFlagsGet) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsWait) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWait) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsWaitPending) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitPending) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitTimeout) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitCompleted) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitNotCompleted) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDestroyed) refers to rtx_evr.o(.text.EvrRtxEventFlagsDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexError) refers to rtx_evr.o(.text.EvrRtxMutexError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexNew) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexCreated) refers to rtx_evr.o(.text.EvrRtxMutexCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetName) refers to rtx_evr.o(.text.EvrRtxMutexGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexAcquire) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquire) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexAcquirePending) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquirePending) refers to rtx_evr.o(.text.EvrRtxMutexAcquirePending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquireTimeout) refers to rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexAcquired) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquired) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexNotAcquired) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNotAcquired) refers to rtx_evr.o(.text.EvrRtxMutexNotAcquired) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexRelease) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexRelease) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexReleased) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexReleased) refers to rtx_evr.o(.text.EvrRtxMutexReleased) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexGetOwner) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetOwner) refers to rtx_evr.o(.text.EvrRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDestroyed) refers to rtx_evr.o(.text.EvrRtxMutexDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreError) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreNew) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreCreated) refers to rtx_evr.o(.text.EvrRtxSemaphoreCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetName) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreAcquire) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquire) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquirePending) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquireTimeout) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreAcquired) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquired) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNotAcquired) refers to rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreRelease) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreRelease) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreReleased) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreReleased) refers to rtx_evr.o(.text.EvrRtxSemaphoreReleased) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreGetCount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetCount) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetCount) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDestroyed) refers to rtx_evr.o(.text.EvrRtxSemaphoreDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolError) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolNew) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolCreated) refers to rtx_evr.o(.text.EvrRtxMemoryPoolCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetName) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolAlloc) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocPending) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocTimeout) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocated) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocFailed) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolFree) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDeallocated) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFreeFailed) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCapacity) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetBlockSize) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolGetCount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCount) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetSpace) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDestroyed) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueError) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueNew) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueCreated) refers to rtx_evr.o(.text.EvrRtxMessageQueueCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetName) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueuePut) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueuePutPending) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutPending) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutTimeout) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueInsertPending) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInsertPending) refers to rtx_evr.o(.text.EvrRtxMessageQueueInsertPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueInserted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInserted) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotInserted) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGet) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetPending) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetPending) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetTimeout) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueRetrieved) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotRetrieved) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCapacity) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetMsgSize) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetCount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCount) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetSpace) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetSpace) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueReset) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueResetDone) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueResetDone) refers to rtx_evr.o(.text.EvrRtxMessageQueueResetDone) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDestroyed) refers to rtx_evr.o(.text.EvrRtxMessageQueueDestroyed) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for osRtxKernelPreInit
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelInitialize) for EvrRtxKernelInitialize
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_evr.o(.text.EvrRtxKernelGetInfo) for EvrRtxKernelGetInfo
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) for EvrRtxKernelInfoRetrieved
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_evr.o(.text.EvrRtxKernelGetState) for EvrRtxKernelGetState
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelStart) for EvrRtxKernelStart
    rtx_kernel.o(.text.osKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelLock) for EvrRtxKernelLock
    rtx_kernel.o(.text.osKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelUnlock) for EvrRtxKernelUnlock
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelRestoreLock) for EvrRtxKernelRestoreLock
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelSuspend) for EvrRtxKernelSuspend
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelResume) for EvrRtxKernelResume
    rtx_kernel.o(.text.osKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_evr.o(.text.EvrRtxKernelGetTickCount) for EvrRtxKernelGetTickCount
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetTickFreq) for EvrRtxKernelGetTickFreq
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerCount) for EvrRtxKernelGetSysTimerCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerFreq) for EvrRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelInitialized) for EvrRtxKernelInitialized
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelStarted) for EvrRtxKernelStarted
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_cm4f.o(.text) for SysTick_Handler
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelLocked) for EvrRtxKernelLocked
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelUnlocked) for EvrRtxKernelUnlocked
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelLockRestored) for EvrRtxKernelLockRestored
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelSuspended) for EvrRtxKernelSuspended
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelResumed) for EvrRtxKernelResumed
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_lib.o(.text._platform_post_stackheap_init) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    rtx_lib.o(.ARM.exidx.text._platform_post_stackheap_init) refers to rtx_lib.o(.text._platform_post_stackheap_init) for [Anonymous Symbol]
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_lib.o(.text.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_config.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_lib.o(.bss.os.libspace) for [Anonymous Symbol]
    rtx_lib.o(.ARM.exidx.text.__user_perthread_libspace) refers to rtx_lib.o(.text.__user_perthread_libspace) for [Anonymous Symbol]
    rtx_lib.o(.text.os_kernel_is_active) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(.text.os_kernel_is_active) refers to rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active) for [Anonymous Symbol]
    rtx_lib.o(.ARM.exidx.text.os_kernel_is_active) refers to rtx_lib.o(.text.os_kernel_is_active) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_initialize) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    rtx_lib.o(.text._mutex_initialize) refers to rtx_config.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(.ARM.exidx.text._mutex_initialize) refers to rtx_lib.o(.text._mutex_initialize) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_acquire) refers to rtx_lib.o(.text.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(.text._mutex_acquire) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    rtx_lib.o(.ARM.exidx.text._mutex_acquire) refers to rtx_lib.o(.text._mutex_acquire) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_release) refers to rtx_lib.o(.text.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(.text._mutex_release) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    rtx_lib.o(.ARM.exidx.text._mutex_release) refers to rtx_lib.o(.text._mutex_release) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_free) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    rtx_lib.o(.ARM.exidx.text._mutex_free) refers to rtx_lib.o(.text._mutex_free) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.mem) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_idle_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_mq_attr) for [Anonymous Symbol]
    rtx_lib.o(.data.irqRtxLibRef) refers to irq_cm4f.o(.constdata) for irqRtxLib
    rtx_memory.o(.text.osRtxMemoryInit) refers to rtx_evr.o(.text.EvrRtxMemoryInit) for EvrRtxMemoryInit
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.text.osRtxMemoryAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryAlloc) for EvrRtxMemoryAlloc
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.text.osRtxMemoryFree) refers to rtx_evr.o(.text.EvrRtxMemoryFree) for EvrRtxMemoryFree
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolInit) refers to rtx_evr.o(.text.EvrRtxMemoryBlockInit) for EvrRtxMemoryBlockInit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for EvrRtxMemoryBlockAlloc
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryBlockFree) for EvrRtxMemoryBlockFree
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolNew) for EvrRtxMemoryPoolNew
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetName) for EvrRtxMemoryPoolGetName
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAlloc) for EvrRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) for EvrRtxMemoryPoolAllocFailed
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFree) for EvrRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) for EvrRtxMemoryPoolFreeFailed
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) for EvrRtxMemoryPoolDeallocated
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity) for EvrRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize) for EvrRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCount) for EvrRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace) for EvrRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDelete) for EvrRtxMemoryPoolDelete
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolCreated) for EvrRtxMemoryPoolCreated
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetName) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetName) for EvrRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending) for EvrRtxMemoryPoolAllocPending
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) for EvrRtxMemoryPoolAllocFailed
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) for EvrRtxMemoryPoolAllocTimeout
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) for EvrRtxMemoryPoolFreeFailed
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) for EvrRtxMemoryPoolDeallocated
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed) for EvrRtxMemoryPoolDestroyed
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueNew) for EvrRtxMessageQueueNew
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetName) for EvrRtxMessageQueueGetName
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePut) for EvrRtxMessageQueuePut
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueInsertPending) for EvrRtxMessageQueueInsertPending
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) for EvrRtxMessageQueueNotInserted
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGet) for EvrRtxMessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) for EvrRtxMessageQueueNotRetrieved
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity) for EvrRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize) for EvrRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCount) for EvrRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetSpace) for EvrRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueReset) for EvrRtxMessageQueueReset
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueDelete) for EvrRtxMessageQueueDelete
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueCreated) for EvrRtxMessageQueueCreated
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetName) for EvrRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutPending) for EvrRtxMessageQueuePutPending
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) for EvrRtxMessageQueueNotInserted
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) for EvrRtxMessageQueuePutTimeout
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetPending) for EvrRtxMessageQueueGetPending
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) for EvrRtxMessageQueueNotRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) for EvrRtxMessageQueueGetTimeout
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueResetDone) for EvrRtxMessageQueueResetDone
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueDestroyed) for EvrRtxMessageQueueDestroyed
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_evr.o(.text.EvrRtxMutexReleased) for EvrRtxMutexReleased
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for EvrRtxMutexAcquired
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexNew) for EvrRtxMutexNew
    rtx_mutex.o(.text.osMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_evr.o(.text.EvrRtxMutexGetName) for EvrRtxMutexGetName
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquire) for EvrRtxMutexAcquire
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexRelease) for EvrRtxMutexRelease
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_evr.o(.text.EvrRtxMutexGetOwner) for EvrRtxMutexGetOwner
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexDelete) for EvrRtxMutexDelete
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexCreated) for EvrRtxMutexCreated
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexGetName) refers to rtx_evr.o(.text.EvrRtxMutexGetName) for EvrRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquirePending) for EvrRtxMutexAcquirePending
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for EvrRtxMutexAcquired
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexNotAcquired) for EvrRtxMutexNotAcquired
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) for EvrRtxMutexAcquireTimeout
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexReleased) for EvrRtxMutexReleased
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for EvrRtxMutexAcquired
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexGetOwner) refers to rtx_evr.o(.text.EvrRtxMutexGetOwner) for EvrRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexDestroyed) for EvrRtxMutexDestroyed
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreNew) for EvrRtxSemaphoreNew
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.svcRtxSemaphoreNew) for svcRtxSemaphoreNew
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.osSemaphoreNew) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetName) for EvrRtxSemaphoreGetName
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetName) for svcRtxSemaphoreGetName
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.osSemaphoreGetName) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquire) for EvrRtxSemaphoreAcquire
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) for EvrRtxSemaphoreNotAcquired
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) for svcRtxSemaphoreAcquire
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreRelease) for EvrRtxSemaphoreRelease
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreReleased) for EvrRtxSemaphoreReleased
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.svcRtxSemaphoreRelease) for svcRtxSemaphoreRelease
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) for svcRtxSemaphoreGetCount
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.osSemaphoreGetCount) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetCount) for EvrRtxSemaphoreGetCount
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetCount) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreDelete) for EvrRtxSemaphoreDelete
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.svcRtxSemaphoreDelete) for svcRtxSemaphoreDelete
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.osSemaphoreDelete) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreCreated) for EvrRtxSemaphoreCreated
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.osRtxSemaphorePostProcess) for osRtxSemaphorePostProcess
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.svcRtxSemaphoreNew) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphorePostProcess) refers to rtx_semaphore.o(.text.osRtxSemaphorePostProcess) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreGetName) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetName) for EvrRtxSemaphoreGetName
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetName) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetName) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending) for EvrRtxSemaphoreAcquirePending
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) for EvrRtxSemaphoreNotAcquired
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) for EvrRtxSemaphoreAcquireTimeout
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreReleased) for EvrRtxSemaphoreReleased
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.svcRtxSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreDestroyed) for EvrRtxSemaphoreDestroyed
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreDelete) refers to rtx_semaphore.o(.text.svcRtxSemaphoreDelete) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for EvrRtxThreadPreempted
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_config.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxDelayCompleted) for EvrRtxDelayCompleted
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) for EvrRtxThreadFlagsWaitTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRoot) for osRtxThreadListRoot
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) for EvrRtxEventFlagsWaitTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) for EvrRtxMutexAcquireTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) for EvrRtxSemaphoreAcquireTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) for EvrRtxMemoryPoolAllocTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) for EvrRtxMessageQueueGetTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) for EvrRtxMessageQueuePutTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxThreadUnblocked) for EvrRtxThreadUnblocked
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot) refers to rtx_thread.o(.text.osRtxThreadListRoot) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_config.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for EvrRtxThreadPreempted
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_evr.o(.text.EvrRtxThreadUnblocked) for EvrRtxThreadUnblocked
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_evr.o(.text.EvrRtxThreadBlocked) for EvrRtxThreadBlocked
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(.text.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadCreated) for EvrRtxThreadCreated
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadNew) for EvrRtxThreadNew
    rtx_thread.o(.text.osThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_evr.o(.text.EvrRtxThreadGetName) for EvrRtxThreadGetName
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_evr.o(.text.EvrRtxThreadGetId) for EvrRtxThreadGetId
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_evr.o(.text.EvrRtxThreadGetState) for EvrRtxThreadGetState
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSize) for EvrRtxThreadGetStackSize
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSpace) for EvrRtxThreadGetStackSpace
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadSetPriority) for EvrRtxThreadSetPriority
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_evr.o(.text.EvrRtxThreadGetPriority) for EvrRtxThreadGetPriority
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadYield) for EvrRtxThreadYield
    rtx_thread.o(.text.osThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadSuspend) for EvrRtxThreadSuspend
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadResume) for EvrRtxThreadResume
    rtx_thread.o(.text.osThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadDetach) for EvrRtxThreadDetach
    rtx_thread.o(.text.osThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoin) for EvrRtxThreadJoin
    rtx_thread.o(.text.osThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadExit) for EvrRtxThreadExit
    rtx_thread.o(.text.osThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadTerminate) for EvrRtxThreadTerminate
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_evr.o(.text.EvrRtxThreadGetCount) for EvrRtxThreadGetCount
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_evr.o(.text.EvrRtxThreadEnumerate) for EvrRtxThreadEnumerate
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSet) for EvrRtxThreadFlagsSet
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) for EvrRtxThreadFlagsSetDone
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClear) for EvrRtxThreadFlagsClear
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsGet) for EvrRtxThreadFlagsGet
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWait) for EvrRtxThreadFlagsWait
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for EvrRtxThreadFlagsWaitCompleted
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetName) refers to rtx_evr.o(.text.EvrRtxThreadGetName) for EvrRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetState) refers to rtx_evr.o(.text.EvrRtxThreadGetState) for EvrRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSize) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSize) for EvrRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSpace) for EvrRtxThreadGetStackSpace
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadPriorityUpdated) for EvrRtxThreadPriorityUpdated
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetPriority) refers to rtx_evr.o(.text.EvrRtxThreadGetPriority) for EvrRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for EvrRtxThreadPreempted
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadSuspended) for EvrRtxThreadSuspended
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadResumed) for EvrRtxThreadResumed
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadDetached) for EvrRtxThreadDetached
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoinPending) for EvrRtxThreadJoinPending
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for EvrRtxThreadJoined
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for EvrRtxThreadJoined
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadDestroyed) for EvrRtxThreadDestroyed
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for EvrRtxThreadJoined
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadDestroyed) for EvrRtxThreadDestroyed
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_evr.o(.text.EvrRtxThreadGetCount) for EvrRtxThreadGetCount
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_evr.o(.text.EvrRtxThreadEnumerate) for EvrRtxThreadEnumerate
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for EvrRtxThreadFlagsWaitCompleted
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) for EvrRtxThreadFlagsSetDone
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClearDone) for EvrRtxThreadFlagsClearDone
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsGet) for EvrRtxThreadFlagsGet
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for EvrRtxThreadFlagsWaitCompleted
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending) for EvrRtxThreadFlagsWaitPending
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) for EvrRtxThreadFlagsWaitTimeout
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted) for EvrRtxThreadFlagsWaitNotCompleted
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_evr.o(.text.EvrRtxTimerCallback) for EvrRtxTimerCallback
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_config.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerNew) for EvrRtxTimerNew
    rtx_timer.o(.text.osTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_evr.o(.text.EvrRtxTimerGetName) for EvrRtxTimerGetName
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerStart) for EvrRtxTimerStart
    rtx_timer.o(.text.osTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerStop) for EvrRtxTimerStop
    rtx_timer.o(.text.osTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_evr.o(.text.EvrRtxTimerIsRunning) for EvrRtxTimerIsRunning
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerDelete) for EvrRtxTimerDelete
    rtx_timer.o(.text.osTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerInsert) refers to rtx_timer.o(.text.TimerInsert) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerCreated) for EvrRtxTimerCreated
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerGetName) refers to rtx_evr.o(.text.EvrRtxTimerGetName) for EvrRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerStarted) for EvrRtxTimerStarted
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerRemove) refers to rtx_timer.o(.text.TimerRemove) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerStopped) for EvrRtxTimerStopped
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerIsRunning) refers to rtx_evr.o(.text.EvrRtxTimerIsRunning) for EvrRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerDestroyed) for EvrRtxTimerDestroyed
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxIdleThread) refers to rtx_config.o(.text.osRtxIdleThread) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderTimerSetup) refers to eventrecorder.o(.text.EventRecorderTimerSetup) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderTimerGetFreq) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetFreq) refers to eventrecorder.o(.text.EventRecorderTimerGetFreq) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetCount) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderInitialize) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderTimerSetup) for EventRecorderTimerSetup
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderTimerGetFreq) for EventRecorderTimerGetFreq
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderStart) for EventRecorderStart
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.rodata.EventRecorderInfo) for EventRecorderInfo
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderEnable) for EventRecorderEnable
    eventrecorder.o(.ARM.exidx.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderInitialize) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderEnable) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderEnable) refers to eventrecorder.o(.text.EventRecorderEnable) for [Anonymous Symbol]
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for EventRecorderTimerGetCount
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventGetTS) refers to eventrecorder.o(.text.EventGetTS) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecordItem) refers to eventrecorder.o(.text.EventRecordItem) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderStart) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecorderStart) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.text.EventRecorderStart) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderStart) refers to eventrecorder.o(.text.EventRecorderStart) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderDisable) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderDisable) refers to eventrecorder.o(.text.EventRecorderDisable) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderStop) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecorderStop) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.text.EventRecorderStop) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderStop) refers to eventrecorder.o(.text.EventRecorderStop) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventRecorderTimerGetFreq) for EventRecorderTimerGetFreq
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventRecorderClockUpdate) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.EventCheckFilter) for EventCheckFilter
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecordData) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecordData) refers to eventrecorder.o(.text.EventRecordData) for [Anonymous Symbol]
    eventrecorder.o(.text.EventCheckFilter) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventCheckFilter) refers to eventrecorder.o(.text.EventCheckFilter) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecord2) refers to eventrecorder.o(.text.EventCheckFilter) for EventCheckFilter
    eventrecorder.o(.text.EventRecord2) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecord2) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecord2) refers to eventrecorder.o(.text.EventRecord2) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.EventCheckFilter) for EventCheckFilter
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecord4) refers to eventrecorder.o(.text.EventRecord4) for [Anonymous Symbol]
    eventrecorder.o(.rodata.EventRecorderInfo) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    retarget_io.o(.text._sys_open) refers to strcmpv7em.o(.text) for strcmp
    retarget_io.o(.text._sys_open) refers to fs_sys.o(i.__sys_open) for __sys_open
    retarget_io.o(.text._sys_open) refers to retarget_io.o(.rodata.__stdin_name) for __stdin_name
    retarget_io.o(.text._sys_open) refers to retarget_io.o(.rodata.__stdout_name) for __stdout_name
    retarget_io.o(.text._sys_open) refers to retarget_io.o(.rodata.__stderr_name) for __stderr_name
    retarget_io.o(.ARM.exidx.text._sys_open) refers to retarget_io.o(.text._sys_open) for [Anonymous Symbol]
    retarget_io.o(.text._sys_close) refers to fs_sys.o(i.__sys_close) for __sys_close
    retarget_io.o(.ARM.exidx.text._sys_close) refers to retarget_io.o(.text._sys_close) for [Anonymous Symbol]
    retarget_io.o(.text._sys_write) refers to fs_sys.o(i.__sys_write) for __sys_write
    retarget_io.o(.ARM.exidx.text._sys_write) refers to retarget_io.o(.text._sys_write) for [Anonymous Symbol]
    retarget_io.o(.text._sys_read) refers to fs_sys.o(i.__sys_read) for __sys_read
    retarget_io.o(.ARM.exidx.text._sys_read) refers to retarget_io.o(.text._sys_read) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text._sys_istty) refers to retarget_io.o(.text._sys_istty) for [Anonymous Symbol]
    retarget_io.o(.text._sys_seek) refers to fs_sys.o(i.__sys_seek) for __sys_seek
    retarget_io.o(.ARM.exidx.text._sys_seek) refers to retarget_io.o(.text._sys_seek) for [Anonymous Symbol]
    retarget_io.o(.text._sys_flen) refers to fs_sys.o(i.__sys_flen) for __sys_flen
    retarget_io.o(.ARM.exidx.text._sys_flen) refers to retarget_io.o(.text._sys_flen) for [Anonymous Symbol]
    fs_config.o(.text.fs_mutex_new) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    fs_config.o(.ARM.exidx.text.fs_mutex_new) refers to fs_config.o(.text.fs_mutex_new) for [Anonymous Symbol]
    fs_config.o(.text.fs_mutex_acquire) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    fs_config.o(.ARM.exidx.text.fs_mutex_acquire) refers to fs_config.o(.text.fs_mutex_acquire) for [Anonymous Symbol]
    fs_config.o(.text.fs_mutex_release) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    fs_config.o(.ARM.exidx.text.fs_mutex_release) refers to fs_config.o(.text.fs_mutex_release) for [Anonymous Symbol]
    fs_config.o(.text.fs_mutex_delete) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    fs_config.o(.ARM.exidx.text.fs_mutex_delete) refers to fs_config.o(.text.fs_mutex_delete) for [Anonymous Symbol]
    fs_config.o(.text.fs_get_rtos_tick_freq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for osKernelGetTickFreq
    fs_config.o(.ARM.exidx.text.fs_get_rtos_tick_freq) refers to fs_config.o(.text.fs_get_rtos_tick_freq) for [Anonymous Symbol]
    fs_config.o(.text.fs_set_rtos_delay) refers to rtx_delay.o(.text.osDelay) for osDelay
    fs_config.o(.text.fs_set_rtos_delay) refers to fs_config.o(.bss.fs_ms_rtos_tick) for fs_ms_rtos_tick
    fs_config.o(.ARM.exidx.text.fs_set_rtos_delay) refers to fs_config.o(.text.fs_set_rtos_delay) for [Anonymous Symbol]
    fs_config.o(.text.fs_get_sys_tick) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for osKernelGetSysTimerCount
    fs_config.o(.ARM.exidx.text.fs_get_sys_tick) refers to fs_config.o(.text.fs_get_sys_tick) for [Anonymous Symbol]
    fs_config.o(.text.fs_get_sys_tick_us) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for osKernelGetSysTimerFreq
    fs_config.o(.text.fs_get_sys_tick_us) refers to lludivv7m.o(.text) for __aeabi_uldivmod
    fs_config.o(.ARM.exidx.text.fs_get_sys_tick_us) refers to fs_config.o(.text.fs_get_sys_tick_us) for [Anonymous Symbol]
    fs_config.o(.text.fs_config) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    fs_config.o(.text.fs_config) refers to fs_config.o(.rodata.fs_nor0_mtx_at) for [Anonymous Symbol]
    fs_config.o(.text.fs_config) refers to fs_config.o(.bss.fs_nor0_vol) for [Anonymous Symbol]
    fs_config.o(.text.fs_config) refers to fs_config.o(.text.NOR0_DriverEvent) for NOR0_DriverEvent
    fs_config.o(.text.fs_config) refers to driver_flash.o(.rodata.Driver_Flash0) for Driver_Flash0
    fs_config.o(.text.fs_config) refers to fs_config.o(.rodata.fs_nor0_flash_tout) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.fs_config) refers to fs_config.o(.text.fs_config) for [Anonymous Symbol]
    fs_config.o(.text.fdelete) refers to fs_mapi.o(i._fdelete) for _fdelete
    fs_config.o(.ARM.exidx.text.fdelete) refers to fs_config.o(.text.fdelete) for [Anonymous Symbol]
    fs_config.o(.text.$Sub$$fflush) refers to fflush_locked.o(.text) for $Super$$fflush
    fs_config.o(.text.$Sub$$fflush) refers to fs_sys.o(i.__sys_ensure) for __sys_ensure
    fs_config.o(.ARM.exidx.text.$Sub$$fflush) refers to fs_config.o(.text.$Sub$$fflush) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.fat_handle_get) refers to fs_config.o(.text.fat_handle_get) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.fat_init) refers to fs_config.o(.text.fat_init) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.fat_uninit) refers to fs_config.o(.text.fat_uninit) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.fat_mount) refers to fs_config.o(.text.fat_mount) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.fat_unmount) refers to fs_config.o(.text.fat_unmount) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.fat_open) refers to fs_config.o(.text.fat_open) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.fat_close) refers to fs_config.o(.text.fat_close) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.fat_read) refers to fs_config.o(.text.fat_read) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.fat_write) refers to fs_config.o(.text.fat_write) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.fat_flush) refers to fs_config.o(.text.fat_flush) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.fat_flen) refers to fs_config.o(.text.fat_flen) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.fat_seek) refers to fs_config.o(.text.fat_seek) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.fat_ffind) refers to fs_config.o(.text.fat_ffind) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.fat_delete_l) refers to fs_config.o(.text.fat_delete_l) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.fat_delete) refers to fs_config.o(.text.fat_delete) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.fat_rename) refers to fs_config.o(.text.fat_rename) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.fat_format) refers to fs_config.o(.text.fat_format) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.fat_free) refers to fs_config.o(.text.fat_free) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.fat_attrib) refers to fs_config.o(.text.fat_attrib) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.fat_vol) refers to fs_config.o(.text.fat_vol) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.fat_pwd) refers to fs_config.o(.text.fat_pwd) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.fat_media) refers to fs_config.o(.text.fat_media) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.fat_info) refers to fs_config.o(.text.fat_info) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.fat_chdir) refers to fs_config.o(.text.fat_chdir) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.fat_mkdir) refers to fs_config.o(.text.fat_mkdir) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.fat_rmdir) refers to fs_config.o(.text.fat_rmdir) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.fat_jour_init) refers to fs_config.o(.text.fat_jour_init) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.elink_init) refers to fs_config.o(.text.elink_init) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.elink_dir) refers to fs_config.o(.text.elink_dir) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.elink_cmd) refers to fs_config.o(.text.elink_cmd) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.elink_insert) refers to fs_config.o(.text.elink_insert) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.elink_delete) refers to fs_config.o(.text.elink_delete) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.elink_scan) refers to fs_config.o(.text.elink_scan) for [Anonymous Symbol]
    fs_config.o(.text.NOR0_DriverEvent) refers to fs_efs.o(i.efs_DrvEvent) for efs_DrvEvent
    fs_config.o(.text.NOR0_DriverEvent) refers to fs_config.o(.bss.fs_nor0_vol) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.NOR0_DriverEvent) refers to fs_config.o(.text.NOR0_DriverEvent) for [Anonymous Symbol]
    fs_config.o(.rodata.fs_DevPool) refers to fs_config.o(.bss.fs_nor0_vol) for [Anonymous Symbol]
    fs_config.o(.rodata.fs_nor0_mtx_at) refers to fs_config.o(.bss.os.mutex.cb) for [Anonymous Symbol]
    fs_debug.o(.text.fs_config_evr) refers to eventrecorder.o(.text.EventRecorderDisable) for EventRecorderDisable
    fs_debug.o(.text.fs_config_evr) refers to eventrecorder.o(.text.EventRecorderEnable) for EventRecorderEnable
    fs_debug.o(.ARM.exidx.text.fs_config_evr) refers to fs_debug.o(.text.fs_config_evr) for [Anonymous Symbol]
    fs_efs.o(i.EvrFsEFS_FileHandleInvalid) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_efs.o(i.EvrFsEFS_FileName) refers to eventrecorder.o(.text.EventRecordData) for EventRecordData
    fs_efs.o(i.EvrFsEFS_FileNotOpened) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_efs.o(i.EvrFsEFS_FlashReadFailed) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    fs_efs.o(i.EvrFsEFS_FlashReadTimeout) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    fs_efs.o(i.block_erase) refers to fs_efs.o(i.addr_of_block) for addr_of_block
    fs_efs.o(i.block_erase) refers to fs_config.o(.text.fs_set_rtos_delay) for fs_set_rtos_delay
    fs_efs.o(i.block_erase) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    fs_efs.o(i.block_read) refers to fs_config.o(.text.fs_set_rtos_delay) for fs_set_rtos_delay
    fs_efs.o(i.block_read) refers to fs_efs.o(i.EvrFsEFS_FlashReadFailed) for EvrFsEFS_FlashReadFailed
    fs_efs.o(i.block_read) refers to fs_efs.o(i.EvrFsEFS_FlashReadTimeout) for EvrFsEFS_FlashReadTimeout
    fs_efs.o(i.block_write) refers to fs_config.o(.text.fs_set_rtos_delay) for fs_set_rtos_delay
    fs_efs.o(i.block_write) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    fs_efs.o(i.chip_erase) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_efs.o(i.chip_erase) refers to fs_config.o(.text.fs_set_rtos_delay) for fs_set_rtos_delay
    fs_efs.o(i.ed_alloc_block) refers to fs_efs.o(i.sign_read) for sign_read
    fs_efs.o(i.ed_alloc_block) refers to fs_efs.o(i.sign_write) for sign_write
    fs_efs.o(i.ed_alloc_block) refers to fs_efs.o(i.addr_of_sign) for addr_of_sign
    fs_efs.o(i.ed_alloc_block) refers to fs_efs.o(i.addr_of_block) for addr_of_block
    fs_efs.o(i.ed_copy) refers to fs_efs.o(i.ed_alloc_block) for ed_alloc_block
    fs_efs.o(i.ed_copy) refers to fs_efs.o(i.addr_of_block) for addr_of_block
    fs_efs.o(i.ed_copy) refers to fs_efs.o(i.block_read) for block_read
    fs_efs.o(i.ed_copy) refers to fs_efs.o(i.block_write) for block_write
    fs_efs.o(i.ed_copy) refers to fs_efs.o(i.falloc_write) for falloc_write
    fs_efs.o(i.ed_copy) refers to fs_efs.o(i.file_size_get) for file_size_get
    fs_efs.o(i.ed_copy) refers to fs_efs.o(i.efs_rd) for efs_rd
    fs_efs.o(i.ed_copy) refers to fs_efs.o(i.ed_write) for ed_write
    fs_efs.o(i.ed_copy) refers to fs_efs.o(.bss) for .bss
    fs_efs.o(i.ed_delete) refers to fs_efs.o(i.sign_read) for sign_read
    fs_efs.o(i.ed_delete) refers to fs_efs.o(i.falloc_read) for falloc_read
    fs_efs.o(i.ed_delete) refers to fs_efs.o(i.block_write) for block_write
    fs_efs.o(i.ed_delete) refers to fs_efs.o(i.efs_BlockInvalid) for efs_BlockInvalid
    fs_efs.o(i.ed_delete) refers to fs_efs.o(i.block_erase) for block_erase
    fs_efs.o(i.ed_get_next) refers to fs_efs.o(i.sign_read) for sign_read
    fs_efs.o(i.ed_get_next) refers to fs_efs.o(i.falloc_read) for falloc_read
    fs_efs.o(i.ed_write) refers to fs_efs.o(i.addr_of_block) for addr_of_block
    fs_efs.o(i.ed_write) refers to fs_efs.o(i.block_write) for block_write
    fs_efs.o(i.ed_write) refers to fs_efs.o(i.falloc_write) for falloc_write
    fs_efs.o(i.ed_write) refers to fs_efs.o(i.ed_alloc_block) for ed_alloc_block
    fs_efs.o(i.efs_AllocBlock) refers to fs_efs.o(i.sign_read) for sign_read
    fs_efs.o(i.efs_AllocBlock) refers to fs_efs.o(i.sign_write) for sign_write
    fs_efs.o(i.efs_AllocBlock) refers to fs_efs.o(i.addr_of_block) for addr_of_block
    fs_efs.o(i.efs_AllocBlock) refers to fs_efs.o(i.efs_is_busy) for efs_is_busy
    fs_efs.o(i.efs_AllocBlock) refers to fs_efs.o(i.efs_get_freeMem) for efs_get_freeMem
    fs_efs.o(i.efs_AllocBlock) refers to fs_efs.o(i.efs_mark_freeMem) for efs_mark_freeMem
    fs_efs.o(i.efs_AllocBlock) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_efs.o(i.efs_BlockInvalid) refers to fs_efs.o(i.addr_of_sign) for addr_of_sign
    fs_efs.o(i.efs_BlockInvalid) refers to fs_efs.o(i.falloc_read) for falloc_read
    fs_efs.o(i.efs_analyse) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_efs.o(i.efs_analyse) refers to fs_efs.o(i.efs_vol_chk) for efs_vol_chk
    fs_efs.o(i.efs_analyse) refers to fs_efs.o(i.sign_read) for sign_read
    fs_efs.o(i.efs_analyse) refers to fs_efs.o(i.falloc_read) for falloc_read
    fs_efs.o(i.efs_check) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_efs.o(i.efs_check) refers to fs_efs.o(i.efs_vol_chk) for efs_vol_chk
    fs_efs.o(i.efs_check) refers to fs_efs.o(i.sign_read) for sign_read
    fs_efs.o(i.efs_check) refers to fs_efs.o(i.addr_of_block) for addr_of_block
    fs_efs.o(i.efs_check) refers to fs_efs.o(i.falloc_read) for falloc_read
    fs_efs.o(i.efs_close) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_efs.o(i.efs_close) refers to fs_efs.o(i.EvrFsEFS_FileHandleInvalid) for EvrFsEFS_FileHandleInvalid
    fs_efs.o(i.efs_close) refers to fs_efs.o(i.efs_vol_chk) for efs_vol_chk
    fs_efs.o(i.efs_close) refers to fs_efs.o(i.EvrFsEFS_FileNotOpened) for EvrFsEFS_FileNotOpened
    fs_efs.o(i.efs_close) refers to fs_efs.o(i.falloc_write) for falloc_write
    fs_efs.o(i.efs_close) refers to fs_config.o(.rodata.fs_efs_fh_cnt) for fs_efs_fh_cnt
    fs_efs.o(i.efs_close) refers to fs_config.o(.bss.fs_efs_fh) for fs_efs_fh
    fs_efs.o(i.efs_defrag) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_efs.o(i.efs_defrag) refers to fs_efs.o(i.efs_vol_chk) for efs_vol_chk
    fs_efs.o(i.efs_defrag) refers to fs_efs.o(i.efs_handle_get) for efs_handle_get
    fs_efs.o(i.efs_defrag) refers to fs_efs.o(i.sign_read) for sign_read
    fs_efs.o(i.efs_defrag) refers to fs_efs.o(i.efs_BlockInvalid) for efs_BlockInvalid
    fs_efs.o(i.efs_defrag) refers to fs_efs.o(i.block_erase) for block_erase
    fs_efs.o(i.efs_defrag) refers to fs_efs.o(i.ed_copy) for ed_copy
    fs_efs.o(i.efs_defrag) refers to fs_efs.o(i.ed_delete) for ed_delete
    fs_efs.o(i.efs_defrag) refers to fs_efs.o(i.ed_get_next) for ed_get_next
    fs_efs.o(i.efs_defrag) refers to fs_efs.o(i.efs_get_freeMem) for efs_get_freeMem
    fs_efs.o(i.efs_defrag) refers to fs_efs.o(i.sign_write) for sign_write
    fs_efs.o(i.efs_defrag) refers to fs_config.o(.bss.fs_efs_fh) for fs_efs_fh
    fs_efs.o(i.efs_defrag) refers to fs_config.o(.rodata.fs_efs_fh_cnt) for fs_efs_fh_cnt
    fs_efs.o(i.efs_delete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_efs.o(i.efs_delete) refers to strlen.o(.text) for strlen
    fs_efs.o(i.efs_delete) refers to fs_efs.o(i.EvrFsEFS_FileName) for EvrFsEFS_FileName
    fs_efs.o(i.efs_delete) refers to fs_efs.o(i.file_name_validate) for file_name_validate
    fs_efs.o(i.efs_delete) refers to fs_efs.o(i.efs_vol_chk) for efs_vol_chk
    fs_efs.o(i.efs_delete) refers to fs_efs.o(i.file_find) for file_find
    fs_efs.o(i.efs_delete) refers to fs_efs.o(i.file_delete) for file_delete
    fs_efs.o(i.efs_ffind) refers to fs_efs.o(i.efs_vol_chk) for efs_vol_chk
    fs_efs.o(i.efs_ffind) refers to fs_efs.o(i.sign_read) for sign_read
    fs_efs.o(i.efs_ffind) refers to fs_efs.o(i.falloc_read) for falloc_read
    fs_efs.o(i.efs_ffind) refers to fs_efs.o(i.addr_of_block) for addr_of_block
    fs_efs.o(i.efs_ffind) refers to fs_efs.o(i.block_read) for block_read
    fs_efs.o(i.efs_ffind) refers to fs_efs.o(i.file_size_get) for file_size_get
    fs_efs.o(i.efs_ffind) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_efs.o(i.efs_flen) refers to fs_efs.o(i.efs_vol_chk) for efs_vol_chk
    fs_efs.o(i.efs_flen) refers to fs_efs.o(i.EvrFsEFS_FileNotOpened) for EvrFsEFS_FileNotOpened
    fs_efs.o(i.efs_flen) refers to fs_efs.o(i.file_size_get) for file_size_get
    fs_efs.o(i.efs_flen) refers to fs_config.o(.bss.fs_efs_fh) for fs_efs_fh
    fs_efs.o(i.efs_flush) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_efs.o(i.efs_flush) refers to fs_efs.o(i.EvrFsEFS_FileNotOpened) for EvrFsEFS_FileNotOpened
    fs_efs.o(i.efs_flush) refers to fs_efs.o(i.efs_vol_chk) for efs_vol_chk
    fs_efs.o(i.efs_flush) refers to fs_efs.o(i.falloc_write) for falloc_write
    fs_efs.o(i.efs_flush) refers to fs_config.o(.bss.fs_efs_fh) for fs_efs_fh
    fs_efs.o(i.efs_format) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_efs.o(i.efs_format) refers to fs_efs.o(i.efs_vol_chk) for efs_vol_chk
    fs_efs.o(i.efs_format) refers to fs_efs.o(i.chip_erase) for chip_erase
    fs_efs.o(i.efs_format) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    fs_efs.o(i.efs_format) refers to fs_efs.o(i.block_erase) for block_erase
    fs_efs.o(i.efs_format) refers to fs_config.o(.bss.fs_efs_fh) for fs_efs_fh
    fs_efs.o(i.efs_format) refers to fs_config.o(.rodata.fs_efs_fh_cnt) for fs_efs_fh_cnt
    fs_efs.o(i.efs_free) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_efs.o(i.efs_free) refers to fs_efs.o(i.efs_vol_chk) for efs_vol_chk
    fs_efs.o(i.efs_free) refers to fs_efs.o(i.efs_get_freeMem) for efs_get_freeMem
    fs_efs.o(i.efs_get_freeMem) refers to fs_efs.o(i.addr_of_sign) for addr_of_sign
    fs_efs.o(i.efs_get_freeMem) refers to fs_efs.o(i.falloc_read) for falloc_read
    fs_efs.o(i.efs_get_freeMem) refers to fs_efs.o(i.addr_of_block) for addr_of_block
    fs_efs.o(i.efs_handle_get) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_efs.o(i.efs_handle_get) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    fs_efs.o(i.efs_handle_get) refers to fs_config.o(.bss.fs_efs_fh) for fs_efs_fh
    fs_efs.o(i.efs_handle_get) refers to fs_config.o(.rodata.fs_efs_fh_cnt) for fs_efs_fh_cnt
    fs_efs.o(i.efs_info) refers to fs_efs.o(i.efs_vol_chk) for efs_vol_chk
    fs_efs.o(i.efs_init) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_efs.o(i.efs_init) refers to fs_config.o(.text.fs_config) for fs_config
    fs_efs.o(i.efs_is_busy) refers to fs_config.o(.bss.fs_efs_fh) for fs_efs_fh
    fs_efs.o(i.efs_is_busy) refers to fs_config.o(.rodata.fs_efs_fh_cnt) for fs_efs_fh_cnt
    fs_efs.o(i.efs_mark_fileMem) refers to fs_efs.o(i.sign_read) for sign_read
    fs_efs.o(i.efs_mark_fileMem) refers to fs_efs.o(i.falloc_read) for falloc_read
    fs_efs.o(i.efs_mark_freeMem) refers to fs_efs.o(i.addr_of_sign) for addr_of_sign
    fs_efs.o(i.efs_mark_freeMem) refers to fs_efs.o(i.falloc_read) for falloc_read
    fs_efs.o(i.efs_mark_freeMem) refers to fs_efs.o(i.addr_of_block) for addr_of_block
    fs_efs.o(i.efs_mount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_efs.o(i.efs_mount) refers to fs_efs.o(i.efs_vol_chk) for efs_vol_chk
    fs_efs.o(i.efs_mount) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    fs_efs.o(i.efs_open) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    fs_efs.o(i.efs_open) refers to strlen.o(.text) for strlen
    fs_efs.o(i.efs_open) refers to fs_efs.o(i.EvrFsEFS_FileName) for EvrFsEFS_FileName
    fs_efs.o(i.efs_open) refers to fs_efs.o(i.EvrFsEFS_FileHandleInvalid) for EvrFsEFS_FileHandleInvalid
    fs_efs.o(i.efs_open) refers to fs_efs.o(i.file_name_validate) for file_name_validate
    fs_efs.o(i.efs_open) refers to fs_efs.o(i.efs_vol_chk) for efs_vol_chk
    fs_efs.o(i.efs_open) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_efs.o(i.efs_open) refers to fs_efs.o(i.file_find) for file_find
    fs_efs.o(i.efs_open) refers to fs_efs.o(i.file_size_get) for file_size_get
    fs_efs.o(i.efs_open) refers to fs_efs.o(i.file_delete) for file_delete
    fs_efs.o(i.efs_open) refers to fs_efs.o(i.file_create) for file_create
    fs_efs.o(i.efs_open) refers to fs_config.o(.rodata.fs_efs_fh_cnt) for fs_efs_fh_cnt
    fs_efs.o(i.efs_open) refers to fs_config.o(.bss.fs_efs_fh) for fs_efs_fh
    fs_efs.o(i.efs_rd) refers to fs_efs.o(i.addr_of_block) for addr_of_block
    fs_efs.o(i.efs_rd) refers to fs_efs.o(i.efs_mark_fileMem) for efs_mark_fileMem
    fs_efs.o(i.efs_rd) refers to fs_efs.o(i.block_read) for block_read
    fs_efs.o(i.efs_read) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    fs_efs.o(i.efs_read) refers to fs_efs.o(i.EvrFsEFS_FileHandleInvalid) for EvrFsEFS_FileHandleInvalid
    fs_efs.o(i.efs_read) refers to fs_efs.o(i.efs_vol_chk) for efs_vol_chk
    fs_efs.o(i.efs_read) refers to fs_efs.o(i.EvrFsEFS_FileNotOpened) for EvrFsEFS_FileNotOpened
    fs_efs.o(i.efs_read) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_efs.o(i.efs_read) refers to fs_efs.o(i.efs_rd) for efs_rd
    fs_efs.o(i.efs_read) refers to fs_config.o(.rodata.fs_efs_fh_cnt) for fs_efs_fh_cnt
    fs_efs.o(i.efs_read) refers to fs_config.o(.bss.fs_efs_fh) for fs_efs_fh
    fs_efs.o(i.efs_rename) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    fs_efs.o(i.efs_rename) refers to strlen.o(.text) for strlen
    fs_efs.o(i.efs_rename) refers to fs_efs.o(i.EvrFsEFS_FileName) for EvrFsEFS_FileName
    fs_efs.o(i.efs_rename) refers to fs_efs.o(i.efs_vol_chk) for efs_vol_chk
    fs_efs.o(i.efs_rename) refers to fs_efs.o(i.file_name_validate) for file_name_validate
    fs_efs.o(i.efs_rename) refers to fs_efs.o(i.file_find) for file_find
    fs_efs.o(i.efs_rename) refers to fs_efs.o(i.addr_of_sign) for addr_of_sign
    fs_efs.o(i.efs_rename) refers to fs_efs.o(i.falloc_read) for falloc_read
    fs_efs.o(i.efs_rename) refers to fs_efs.o(i.block_write) for block_write
    fs_efs.o(i.efs_rename) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_efs.o(i.efs_rename) refers to fs_efs.o(i.file_create) for file_create
    fs_efs.o(i.efs_seek) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_efs.o(i.efs_seek) refers to fs_efs.o(i.efs_vol_chk) for efs_vol_chk
    fs_efs.o(i.efs_seek) refers to fs_efs.o(i.EvrFsEFS_FileNotOpened) for EvrFsEFS_FileNotOpened
    fs_efs.o(i.efs_seek) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    fs_efs.o(i.efs_seek) refers to fs_efs.o(i.sign_read) for sign_read
    fs_efs.o(i.efs_seek) refers to fs_efs.o(i.falloc_read) for falloc_read
    fs_efs.o(i.efs_seek) refers to fs_config.o(.bss.fs_efs_fh) for fs_efs_fh
    fs_efs.o(i.efs_uninit) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_efs.o(i.efs_uninit) refers to fs_config.o(.text.fs_mutex_delete) for fs_mutex_delete
    fs_efs.o(i.efs_uninit) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    fs_efs.o(i.efs_unmount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_efs.o(i.efs_unmount) refers to fs_efs.o(i.efs_close) for efs_close
    fs_efs.o(i.efs_unmount) refers to fs_config.o(.bss.fs_efs_fh) for fs_efs_fh
    fs_efs.o(i.efs_unmount) refers to fs_config.o(.rodata.fs_efs_fh_cnt) for fs_efs_fh_cnt
    fs_efs.o(i.efs_vol_chk) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_efs.o(i.efs_wr) refers to fs_efs.o(i.addr_of_block) for addr_of_block
    fs_efs.o(i.efs_wr) refers to fs_efs.o(i.efs_mark_freeMem) for efs_mark_freeMem
    fs_efs.o(i.efs_wr) refers to fs_efs.o(i.efs_AllocBlock) for efs_AllocBlock
    fs_efs.o(i.efs_wr) refers to fs_efs.o(i.falloc_write) for falloc_write
    fs_efs.o(i.efs_wr) refers to fs_efs.o(i.sign_write) for sign_write
    fs_efs.o(i.efs_wr) refers to fs_efs.o(i.block_write) for block_write
    fs_efs.o(i.efs_write) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    fs_efs.o(i.efs_write) refers to fs_efs.o(i.EvrFsEFS_FileHandleInvalid) for EvrFsEFS_FileHandleInvalid
    fs_efs.o(i.efs_write) refers to fs_efs.o(i.efs_vol_chk) for efs_vol_chk
    fs_efs.o(i.efs_write) refers to fs_efs.o(i.EvrFsEFS_FileNotOpened) for EvrFsEFS_FileNotOpened
    fs_efs.o(i.efs_write) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_efs.o(i.efs_write) refers to fs_efs.o(i.efs_wr) for efs_wr
    fs_efs.o(i.efs_write) refers to fs_config.o(.rodata.fs_efs_fh_cnt) for fs_efs_fh_cnt
    fs_efs.o(i.efs_write) refers to fs_config.o(.bss.fs_efs_fh) for fs_efs_fh
    fs_efs.o(i.falloc_read) refers to fs_config.o(.text.fs_set_rtos_delay) for fs_set_rtos_delay
    fs_efs.o(i.falloc_read) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    fs_efs.o(i.falloc_write) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    fs_efs.o(i.falloc_write) refers to fs_efs.o(i.block_write) for block_write
    fs_efs.o(i.file_create) refers to fs_efs.o(i.file_id_alloc) for file_id_alloc
    fs_efs.o(i.file_create) refers to fs_efs.o(i.sign_read) for sign_read
    fs_efs.o(i.file_create) refers to fs_efs.o(i.efs_is_busy) for efs_is_busy
    fs_efs.o(i.file_create) refers to fs_efs.o(i.efs_get_freeMem) for efs_get_freeMem
    fs_efs.o(i.file_create) refers to fs_efs.o(i.sign_write) for sign_write
    fs_efs.o(i.file_create) refers to fs_efs.o(i.efs_mark_freeMem) for efs_mark_freeMem
    fs_efs.o(i.file_create) refers to fs_efs.o(i.addr_of_block) for addr_of_block
    fs_efs.o(i.file_create) refers to fs_efs.o(i.block_write) for block_write
    fs_efs.o(i.file_create) refers to fs_efs.o(i.falloc_write) for falloc_write
    fs_efs.o(i.file_delete) refers to fs_efs.o(i.sign_read) for sign_read
    fs_efs.o(i.file_delete) refers to fs_efs.o(i.falloc_read) for falloc_read
    fs_efs.o(i.file_delete) refers to fs_efs.o(i.block_write) for block_write
    fs_efs.o(i.file_delete) refers to fs_efs.o(i.efs_is_busy) for efs_is_busy
    fs_efs.o(i.file_delete) refers to fs_efs.o(i.efs_BlockInvalid) for efs_BlockInvalid
    fs_efs.o(i.file_delete) refers to fs_efs.o(i.block_erase) for block_erase
    fs_efs.o(i.file_find) refers to fs_efs.o(i.sign_read) for sign_read
    fs_efs.o(i.file_find) refers to fs_efs.o(i.falloc_read) for falloc_read
    fs_efs.o(i.file_find) refers to fs_efs.o(i.addr_of_block) for addr_of_block
    fs_efs.o(i.file_find) refers to fs_efs.o(i.block_read) for block_read
    fs_efs.o(i.file_find) refers to strcmpv7em.o(.text) for strcmp
    fs_efs.o(i.file_id_alloc) refers to fs_efs.o(i.addr_of_sign) for addr_of_sign
    fs_efs.o(i.file_id_alloc) refers to fs_efs.o(i.falloc_read) for falloc_read
    fs_efs.o(i.file_name_validate) refers to strlen.o(.text) for strlen
    fs_efs.o(i.file_name_validate) refers to eventrecorder.o(.text.EventRecordData) for EventRecordData
    fs_efs.o(i.file_size_get) refers to fs_efs.o(i.sign_read) for sign_read
    fs_efs.o(i.file_size_get) refers to fs_efs.o(i.falloc_read) for falloc_read
    fs_efs.o(i.sign_read) refers to fs_config.o(.text.fs_set_rtos_delay) for fs_set_rtos_delay
    fs_efs.o(i.sign_write) refers to fs_efs.o(i.block_write) for block_write
    fs_mapi.o(i._fdelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_mapi.o(i._fdelete) refers to fs_common.o(i.fs_drive_id) for fs_drive_id
    fs_mapi.o(i._fdelete) refers to fs_config.o(.text.fs_mutex_acquire) for fs_mutex_acquire
    fs_mapi.o(i._fdelete) refers to fs_config.o(.text.fat_delete) for fat_delete
    fs_mapi.o(i._fdelete) refers to fs_efs.o(i.efs_delete) for efs_delete
    fs_mapi.o(i._fdelete) refers to fs_config.o(.text.fs_mutex_release) for fs_mutex_release
    fs_mapi.o(i._fdelete) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(i._fdelete_legacy) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_mapi.o(i._fdelete_legacy) refers to fs_common.o(i.fs_drive_id) for fs_drive_id
    fs_mapi.o(i._fdelete_legacy) refers to fs_config.o(.text.fs_mutex_acquire) for fs_mutex_acquire
    fs_mapi.o(i._fdelete_legacy) refers to fs_config.o(.text.fat_delete_l) for fat_delete_l
    fs_mapi.o(i._fdelete_legacy) refers to fs_efs.o(i.efs_delete) for efs_delete
    fs_mapi.o(i._fdelete_legacy) refers to fs_config.o(.text.fs_mutex_release) for fs_mutex_release
    fs_mapi.o(i._fdelete_legacy) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(i.fanalyse) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_mapi.o(i.fanalyse) refers to fs_common.o(i.fs_drive_id) for fs_drive_id
    fs_mapi.o(i.fanalyse) refers to fs_config.o(.text.fs_mutex_acquire) for fs_mutex_acquire
    fs_mapi.o(i.fanalyse) refers to fs_efs.o(i.efs_analyse) for efs_analyse
    fs_mapi.o(i.fanalyse) refers to fs_config.o(.text.fs_mutex_release) for fs_mutex_release
    fs_mapi.o(i.fanalyse) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(i.fattrib) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_mapi.o(i.fattrib) refers to fs_common.o(i.fs_drive_id) for fs_drive_id
    fs_mapi.o(i.fattrib) refers to fs_config.o(.text.fs_mutex_acquire) for fs_mutex_acquire
    fs_mapi.o(i.fattrib) refers to fs_config.o(.text.fat_attrib) for fat_attrib
    fs_mapi.o(i.fattrib) refers to fs_config.o(.text.fs_mutex_release) for fs_mutex_release
    fs_mapi.o(i.fattrib) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(i.fchdir) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_mapi.o(i.fchdir) refers to fs_common.o(i.fs_drive_id) for fs_drive_id
    fs_mapi.o(i.fchdir) refers to fs_config.o(.text.fs_mutex_acquire) for fs_mutex_acquire
    fs_mapi.o(i.fchdir) refers to fs_config.o(.text.fat_chdir) for fat_chdir
    fs_mapi.o(i.fchdir) refers to fs_config.o(.text.fs_mutex_release) for fs_mutex_release
    fs_mapi.o(i.fchdir) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(i.fchdrive) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_mapi.o(i.fchdrive) refers to fs_common.o(i.fs_drive_id) for fs_drive_id
    fs_mapi.o(i.fchdrive) refers to fs_common.o(i.fs_set_cdrive) for fs_set_cdrive
    fs_mapi.o(i.fcheck) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_mapi.o(i.fcheck) refers to fs_common.o(i.fs_drive_id) for fs_drive_id
    fs_mapi.o(i.fcheck) refers to fs_config.o(.text.fs_mutex_acquire) for fs_mutex_acquire
    fs_mapi.o(i.fcheck) refers to fs_efs.o(i.efs_check) for efs_check
    fs_mapi.o(i.fcheck) refers to fs_config.o(.text.fs_mutex_release) for fs_mutex_release
    fs_mapi.o(i.fcheck) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(i.fdefrag) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_mapi.o(i.fdefrag) refers to fs_common.o(i.fs_drive_id) for fs_drive_id
    fs_mapi.o(i.fdefrag) refers to fs_config.o(.text.fs_mutex_acquire) for fs_mutex_acquire
    fs_mapi.o(i.fdefrag) refers to fs_efs.o(i.efs_defrag) for efs_defrag
    fs_mapi.o(i.fdefrag) refers to fs_config.o(.text.fs_mutex_release) for fs_mutex_release
    fs_mapi.o(i.fdefrag) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(i.ffind) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_mapi.o(i.ffind) refers to fs_common.o(i.fs_drive_id) for fs_drive_id
    fs_mapi.o(i.ffind) refers to fs_common.o(i.fs_strpos) for fs_strpos
    fs_mapi.o(i.ffind) refers to strcmpv7em.o(.text) for strcmp
    fs_mapi.o(i.ffind) refers to strlen.o(.text) for strlen
    fs_mapi.o(i.ffind) refers to fs_config.o(.text.fs_mutex_acquire) for fs_mutex_acquire
    fs_mapi.o(i.ffind) refers to fs_config.o(.text.fat_ffind) for fat_ffind
    fs_mapi.o(i.ffind) refers to fs_efs.o(i.efs_ffind) for efs_ffind
    fs_mapi.o(i.ffind) refers to fs_common.o(i.fs_strmatch) for fs_strmatch
    fs_mapi.o(i.ffind) refers to fs_common.o(i.fs_strncasecmp) for fs_strncasecmp
    fs_mapi.o(i.ffind) refers to fs_config.o(.text.fs_mutex_release) for fs_mutex_release
    fs_mapi.o(i.ffind) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(i.fformat) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_mapi.o(i.fformat) refers to fs_common.o(i.fs_drive_id) for fs_drive_id
    fs_mapi.o(i.fformat) refers to fs_config.o(.text.fs_mutex_acquire) for fs_mutex_acquire
    fs_mapi.o(i.fformat) refers to fs_config.o(.text.fat_format) for fat_format
    fs_mapi.o(i.fformat) refers to fs_efs.o(i.efs_format) for efs_format
    fs_mapi.o(i.fformat) refers to fs_config.o(.text.fs_mutex_release) for fs_mutex_release
    fs_mapi.o(i.fformat) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(i.ffree) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_mapi.o(i.ffree) refers to fs_common.o(i.fs_drive_id) for fs_drive_id
    fs_mapi.o(i.ffree) refers to fs_config.o(.text.fs_mutex_acquire) for fs_mutex_acquire
    fs_mapi.o(i.ffree) refers to fs_config.o(.text.fat_free) for fat_free
    fs_mapi.o(i.ffree) refers to fs_efs.o(i.efs_free) for efs_free
    fs_mapi.o(i.ffree) refers to fs_config.o(.text.fs_mutex_release) for fs_mutex_release
    fs_mapi.o(i.ffree) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(i.finfo) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_mapi.o(i.finfo) refers to fs_common.o(i.fs_drive_id) for fs_drive_id
    fs_mapi.o(i.finfo) refers to fs_config.o(.text.fs_mutex_acquire) for fs_mutex_acquire
    fs_mapi.o(i.finfo) refers to fs_config.o(.text.fat_info) for fat_info
    fs_mapi.o(i.finfo) refers to fs_efs.o(i.efs_info) for efs_info
    fs_mapi.o(i.finfo) refers to fs_config.o(.text.fs_mutex_release) for fs_mutex_release
    fs_mapi.o(i.finfo) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(i.finit) refers to fs_mapi.o(i.fs_component_init) for fs_component_init
    fs_mapi.o(i.finit) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_mapi.o(i.finit) refers to fs_common.o(i.fs_drive_id) for fs_drive_id
    fs_mapi.o(i.finit) refers to fs_common.o(i.get_u32) for get_u32
    fs_mapi.o(i.finit) refers to fs_config.o(.text.fat_init) for fat_init
    fs_mapi.o(i.finit) refers to fs_efs.o(i.efs_init) for efs_init
    fs_mapi.o(i.finit) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(i.fmedia) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_mapi.o(i.fmedia) refers to fs_common.o(i.fs_drive_id) for fs_drive_id
    fs_mapi.o(i.fmedia) refers to fs_config.o(.text.fs_mutex_acquire) for fs_mutex_acquire
    fs_mapi.o(i.fmedia) refers to fs_config.o(.text.fat_media) for fat_media
    fs_mapi.o(i.fmedia) refers to fs_config.o(.text.fs_mutex_release) for fs_mutex_release
    fs_mapi.o(i.fmedia) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(i.fmkdir) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_mapi.o(i.fmkdir) refers to fs_common.o(i.fs_drive_id) for fs_drive_id
    fs_mapi.o(i.fmkdir) refers to fs_config.o(.text.fs_mutex_acquire) for fs_mutex_acquire
    fs_mapi.o(i.fmkdir) refers to fs_config.o(.text.fat_mkdir) for fat_mkdir
    fs_mapi.o(i.fmkdir) refers to fs_config.o(.text.fs_mutex_release) for fs_mutex_release
    fs_mapi.o(i.fmkdir) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(i.fmount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_mapi.o(i.fmount) refers to fs_common.o(i.fs_drive_id) for fs_drive_id
    fs_mapi.o(i.fmount) refers to fs_config.o(.text.fs_mutex_acquire) for fs_mutex_acquire
    fs_mapi.o(i.fmount) refers to fs_config.o(.text.fat_mount) for fat_mount
    fs_mapi.o(i.fmount) refers to fs_efs.o(i.efs_mount) for efs_mount
    fs_mapi.o(i.fmount) refers to fs_config.o(.text.fs_mutex_release) for fs_mutex_release
    fs_mapi.o(i.fmount) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(i.fpwd) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    fs_mapi.o(i.fpwd) refers to fs_common.o(i.fs_drive_id) for fs_drive_id
    fs_mapi.o(i.fpwd) refers to fs_config.o(.text.fs_mutex_acquire) for fs_mutex_acquire
    fs_mapi.o(i.fpwd) refers to fs_config.o(.text.fat_pwd) for fat_pwd
    fs_mapi.o(i.fpwd) refers to fs_config.o(.text.fs_mutex_release) for fs_mutex_release
    fs_mapi.o(i.fpwd) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(i.frename) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_mapi.o(i.frename) refers to fs_common.o(i.fs_drive_id) for fs_drive_id
    fs_mapi.o(i.frename) refers to fs_config.o(.text.fs_mutex_acquire) for fs_mutex_acquire
    fs_mapi.o(i.frename) refers to fs_config.o(.text.fat_rename) for fat_rename
    fs_mapi.o(i.frename) refers to fs_efs.o(i.efs_rename) for efs_rename
    fs_mapi.o(i.frename) refers to fs_config.o(.text.fs_mutex_release) for fs_mutex_release
    fs_mapi.o(i.frename) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(i.frmdir) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_mapi.o(i.frmdir) refers to fs_common.o(i.fs_drive_id) for fs_drive_id
    fs_mapi.o(i.frmdir) refers to fs_config.o(.text.fs_mutex_acquire) for fs_mutex_acquire
    fs_mapi.o(i.frmdir) refers to fs_config.o(.text.fat_rmdir) for fat_rmdir
    fs_mapi.o(i.frmdir) refers to fs_config.o(.text.fs_mutex_release) for fs_mutex_release
    fs_mapi.o(i.frmdir) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(i.fs_component_init) refers to fs_debug.o(.text.fs_config_evr) for fs_config_evr
    fs_mapi.o(i.fs_component_init) refers to fs_config.o(.text.fs_get_rtos_tick_freq) for fs_get_rtos_tick_freq
    fs_mapi.o(i.fs_component_init) refers to fs_common.o(i.fs_set_cdrive) for fs_set_cdrive
    fs_mapi.o(i.fs_component_init) refers to fs_mapi.o(.data) for .data
    fs_mapi.o(i.fs_component_init) refers to fs_config.o(.bss.fs_ms_rtos_tick) for fs_ms_rtos_tick
    fs_mapi.o(i.fs_component_init) refers to fs_config.o(.bss.fs_fat_fh) for fs_fat_fh
    fs_mapi.o(i.fs_component_init) refers to fs_config.o(.rodata.fs_fat_fh_cnt) for fs_fat_fh_cnt
    fs_mapi.o(i.fs_component_init) refers to fs_config.o(.bss.fs_efs_fh) for fs_efs_fh
    fs_mapi.o(i.fs_component_init) refers to fs_config.o(.rodata.fs_efs_fh_cnt) for fs_efs_fh_cnt
    fs_mapi.o(i.fs_component_init) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(i.fs_component_init) refers to fs_config.o(.rodata.fs_ndrv) for fs_ndrv
    fs_mapi.o(i.funinit) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_mapi.o(i.funinit) refers to fs_common.o(i.fs_drive_id) for fs_drive_id
    fs_mapi.o(i.funinit) refers to fs_config.o(.text.fat_uninit) for fat_uninit
    fs_mapi.o(i.funinit) refers to fs_efs.o(i.efs_uninit) for efs_uninit
    fs_mapi.o(i.funinit) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(i.funmount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_mapi.o(i.funmount) refers to fs_common.o(i.fs_drive_id) for fs_drive_id
    fs_mapi.o(i.funmount) refers to fs_config.o(.text.fs_mutex_acquire) for fs_mutex_acquire
    fs_mapi.o(i.funmount) refers to fs_config.o(.text.fat_unmount) for fat_unmount
    fs_mapi.o(i.funmount) refers to fs_efs.o(i.efs_unmount) for efs_unmount
    fs_mapi.o(i.funmount) refers to fs_config.o(.text.fs_mutex_release) for fs_mutex_release
    fs_mapi.o(i.funmount) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(i.fvol) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    fs_mapi.o(i.fvol) refers to fs_common.o(i.fs_drive_id) for fs_drive_id
    fs_mapi.o(i.fvol) refers to fs_config.o(.text.fs_mutex_acquire) for fs_mutex_acquire
    fs_mapi.o(i.fvol) refers to fs_config.o(.text.fat_vol) for fat_vol
    fs_mapi.o(i.fvol) refers to fs_config.o(.text.fs_mutex_release) for fs_mutex_release
    fs_mapi.o(i.fvol) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_sys.o(i.__sys_close) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_sys.o(i.__sys_close) refers to fs_config.o(.text.fs_mutex_acquire) for fs_mutex_acquire
    fs_sys.o(i.__sys_close) refers to fs_config.o(.text.fat_close) for fat_close
    fs_sys.o(i.__sys_close) refers to fs_efs.o(i.efs_close) for efs_close
    fs_sys.o(i.__sys_close) refers to fs_config.o(.text.fs_mutex_release) for fs_mutex_release
    fs_sys.o(i.__sys_close) refers to fs_config.o(.bss.fs_fat_fh) for fs_fat_fh
    fs_sys.o(i.__sys_close) refers to fs_config.o(.bss.fs_efs_fh) for fs_efs_fh
    fs_sys.o(i.__sys_ensure) refers to fs_config.o(.text.fs_mutex_acquire) for fs_mutex_acquire
    fs_sys.o(i.__sys_ensure) refers to fs_config.o(.text.fat_flush) for fat_flush
    fs_sys.o(i.__sys_ensure) refers to fs_efs.o(i.efs_flush) for efs_flush
    fs_sys.o(i.__sys_ensure) refers to fs_config.o(.text.fs_mutex_release) for fs_mutex_release
    fs_sys.o(i.__sys_ensure) refers to fs_config.o(.bss.fs_fat_fh) for fs_fat_fh
    fs_sys.o(i.__sys_ensure) refers to fs_config.o(.bss.fs_efs_fh) for fs_efs_fh
    fs_sys.o(i.__sys_flen) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_sys.o(i.__sys_flen) refers to fs_config.o(.text.fs_mutex_acquire) for fs_mutex_acquire
    fs_sys.o(i.__sys_flen) refers to fs_config.o(.text.fat_flen) for fat_flen
    fs_sys.o(i.__sys_flen) refers to fs_efs.o(i.efs_flen) for efs_flen
    fs_sys.o(i.__sys_flen) refers to fs_config.o(.text.fs_mutex_release) for fs_mutex_release
    fs_sys.o(i.__sys_flen) refers to fs_config.o(.bss.fs_fat_fh) for fs_fat_fh
    fs_sys.o(i.__sys_flen) refers to fs_config.o(.bss.fs_efs_fh) for fs_efs_fh
    fs_sys.o(i.__sys_open) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_sys.o(i.__sys_open) refers to fs_common.o(i.fs_drive_id) for fs_drive_id
    fs_sys.o(i.__sys_open) refers to fs_config.o(.text.fs_mutex_acquire) for fs_mutex_acquire
    fs_sys.o(i.__sys_open) refers to fs_config.o(.text.fat_handle_get) for fat_handle_get
    fs_sys.o(i.__sys_open) refers to fs_config.o(.text.fat_open) for fat_open
    fs_sys.o(i.__sys_open) refers to fs_efs.o(i.efs_handle_get) for efs_handle_get
    fs_sys.o(i.__sys_open) refers to fs_efs.o(i.efs_open) for efs_open
    fs_sys.o(i.__sys_open) refers to fs_config.o(.text.fs_mutex_release) for fs_mutex_release
    fs_sys.o(i.__sys_open) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_sys.o(i.__sys_open) refers to fs_config.o(.bss.fs_efs_fh) for fs_efs_fh
    fs_sys.o(i.__sys_read) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    fs_sys.o(i.__sys_read) refers to fs_config.o(.text.fs_mutex_acquire) for fs_mutex_acquire
    fs_sys.o(i.__sys_read) refers to fs_config.o(.text.fat_read) for fat_read
    fs_sys.o(i.__sys_read) refers to fs_efs.o(i.efs_read) for efs_read
    fs_sys.o(i.__sys_read) refers to fs_config.o(.text.fs_mutex_release) for fs_mutex_release
    fs_sys.o(i.__sys_read) refers to fs_config.o(.bss.fs_fat_fh) for fs_fat_fh
    fs_sys.o(i.__sys_read) refers to fs_config.o(.bss.fs_efs_fh) for fs_efs_fh
    fs_sys.o(i.__sys_seek) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_sys.o(i.__sys_seek) refers to fs_config.o(.text.fs_mutex_acquire) for fs_mutex_acquire
    fs_sys.o(i.__sys_seek) refers to fs_config.o(.text.fat_seek) for fat_seek
    fs_sys.o(i.__sys_seek) refers to fs_efs.o(i.efs_seek) for efs_seek
    fs_sys.o(i.__sys_seek) refers to fs_config.o(.text.fs_mutex_release) for fs_mutex_release
    fs_sys.o(i.__sys_seek) refers to fs_config.o(.bss.fs_fat_fh) for fs_fat_fh
    fs_sys.o(i.__sys_seek) refers to fs_config.o(.bss.fs_efs_fh) for fs_efs_fh
    fs_sys.o(i.__sys_write) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    fs_sys.o(i.__sys_write) refers to fs_config.o(.text.fs_mutex_acquire) for fs_mutex_acquire
    fs_sys.o(i.__sys_write) refers to fs_config.o(.text.fat_write) for fat_write
    fs_sys.o(i.__sys_write) refers to fs_efs.o(i.efs_write) for efs_write
    fs_sys.o(i.__sys_write) refers to fs_config.o(.text.fs_mutex_release) for fs_mutex_release
    fs_sys.o(i.__sys_write) refers to fs_config.o(.bss.fs_fat_fh) for fs_fat_fh
    fs_sys.o(i.__sys_write) refers to fs_config.o(.bss.fs_efs_fh) for fs_efs_fh
    fs_common.o(i.fs_drive_id) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    fs_common.o(i.fs_drive_id) refers to fs_common.o(i.get_u32) for get_u32
    fs_common.o(i.fs_drive_id) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_common.o(i.fs_drive_id) refers to fs_config.o(.rodata.fs_ndrv) for fs_ndrv
    fs_common.o(i.fs_drive_id) refers to fs_common.o(.data) for .data
    fs_common.o(i.fs_set_cdrive) refers to fs_config.o(.rodata.fs_ndrv) for fs_ndrv
    fs_common.o(i.fs_set_cdrive) refers to fs_common.o(.data) for .data
    fs_common.o(i.fs_strmatch) refers to fs_common.o(i.fs_strncasecmp) for fs_strncasecmp
    fs_common.o(i.fs_strmatch) refers to strlen.o(.text) for strlen
    malloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    malloc.o(.text) refers (Special) to init_alloc.o(.text) for _init_alloc
    malloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    malloc.o(.text) refers to heapstubs.o(.text) for __Heap_Alloc
    h1_alloc.o(.text) refers (Special) to h1_init_threads.o(.text) for __Heap_Initialize
    h1_alloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    h1_alloc.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_alloc_threads.o(.text) refers (Special) to h1_init_threads.o(.text) for __Heap_Initialize
    h1_alloc_threads.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    h1_alloc_threads.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    h1_alloc_threads.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_alloc_threads.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    h1_alloc_threads.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._FDIterate) refers to heap2.o(.conststring) for .conststring
    heap2.o(i.__Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.__Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.__Heap_Stats$realtime) refers to heap2.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2.o(i.__Heap_Valid$realtime) refers to heap2.o(i._FDIterate) for _FDIterate
    heap2.o(i.__Heap_Valid$realtime) refers to heap2.o(.conststring) for .conststring
    heap2.o(i.free$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.free$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.free$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.malloc$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i.malloc$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.posix_memalign$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i.posix_memalign$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.realloc$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.realloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.realloc$realtime) refers to h1_free_threads.o(.text) for free
    heap2.o(i.realloc$realtime) refers to h1_alloc_threads.o(.text) for malloc
    heap2.o(i.realloc$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.realloc$realtime) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    heap2_threads.o(i._FDIterate) refers to heap2_threads.o(.conststring) for .conststring
    heap2_threads.o(i.__Heap_Finalize$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_free) for _mutex_free
    heap2_threads.o(i.__Heap_Initialize$realtime$concurrent) refers to rtx_lib.o(.text._mutex_initialize) for _mutex_initialize
    heap2_threads.o(i.__Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.__Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.__Heap_Stats$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.__Heap_Stats$realtime$concurrent) refers to heap2_threads.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2_threads.o(i.__Heap_Stats$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers to heap2_threads.o(i._FDIterate) for _FDIterate
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers to heap2_threads.o(.conststring) for .conststring
    heap2_threads.o(i.free$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.free$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.free$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.free$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.free$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.malloc$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.malloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2_threads.o(i.malloc$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.malloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.malloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.realloc$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.realloc$realtime$concurrent) refers to h1_free_threads.o(.text) for free
    heap2_threads.o(i.realloc$realtime$concurrent) refers to h1_alloc_threads.o(.text) for malloc
    heap2_threads.o(i.realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.realloc$realtime$concurrent) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    heap2_threads.o(i.realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    vsnprintf.o(.text) refers (Special) to _printf_a.o(.ARM.Collect$$_printf_percent$$00000006) for _printf_a
    vsnprintf.o(.text) refers (Special) to _printf_c.o(.ARM.Collect$$_printf_percent$$00000013) for _printf_c
    vsnprintf.o(.text) refers (Special) to _printf_charcount.o(.text) for _printf_charcount
    vsnprintf.o(.text) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    vsnprintf.o(.text) refers (Special) to _printf_e.o(.ARM.Collect$$_printf_percent$$00000004) for _printf_e
    vsnprintf.o(.text) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    vsnprintf.o(.text) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    vsnprintf.o(.text) refers (Special) to printf2.o(x$fpl$printf2) for _printf_fp_hex
    vsnprintf.o(.text) refers (Special) to _printf_g.o(.ARM.Collect$$_printf_percent$$00000005) for _printf_g
    vsnprintf.o(.text) refers (Special) to _printf_i.o(.ARM.Collect$$_printf_percent$$00000008) for _printf_i
    vsnprintf.o(.text) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    vsnprintf.o(.text) refers (Special) to _printf_l.o(.ARM.Collect$$_printf_percent$$00000012) for _printf_l
    vsnprintf.o(.text) refers (Special) to _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015) for _printf_lc
    vsnprintf.o(.text) refers (Special) to _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007) for _printf_ll
    vsnprintf.o(.text) refers (Special) to _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E) for _printf_lld
    vsnprintf.o(.text) refers (Special) to _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D) for _printf_lli
    vsnprintf.o(.text) refers (Special) to _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010) for _printf_llo
    vsnprintf.o(.text) refers (Special) to _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F) for _printf_llu
    vsnprintf.o(.text) refers (Special) to _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011) for _printf_llx
    vsnprintf.o(.text) refers (Special) to _printf_longlong_dec.o(.text) for _printf_longlong_dec
    vsnprintf.o(.text) refers (Special) to _printf_hex_int_ll_ptr.o(.text) for _printf_longlong_hex
    vsnprintf.o(.text) refers (Special) to _printf_oct_int_ll.o(.text) for _printf_longlong_oct
    vsnprintf.o(.text) refers (Special) to _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016) for _printf_ls
    vsnprintf.o(.text) refers (Special) to _printf_n.o(.ARM.Collect$$_printf_percent$$00000001) for _printf_n
    vsnprintf.o(.text) refers (Special) to _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B) for _printf_o
    vsnprintf.o(.text) refers (Special) to _printf_p.o(.ARM.Collect$$_printf_percent$$00000002) for _printf_p
    vsnprintf.o(.text) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    vsnprintf.o(.text) refers (Special) to _printf_pad.o(.text) for _printf_post_padding
    vsnprintf.o(.text) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    vsnprintf.o(.text) refers (Special) to _printf_str.o(.text) for _printf_str
    vsnprintf.o(.text) refers (Special) to _printf_truncate.o(.text) for _printf_truncate_signed
    vsnprintf.o(.text) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    vsnprintf.o(.text) refers (Special) to _printf_wctomb.o(.text) for _printf_wctomb
    vsnprintf.o(.text) refers (Special) to _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C) for _printf_x
    vsnprintf.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    vsnprintf.o(.text) refers to _sputc.o(.text) for _sputc
    vsnprintf.o(.text) refers to _snputc.o(.text) for _snputc
    __0fscanf.o(.text) refers to scanf_char_file_locked.o(.text) for __vfscanf_char_file
    __0sscanf.o(.text) refers to scanf_char.o(.text) for __vfscanf_char
    __0sscanf.o(.text) refers to _sgetc.o(.text) for _sgetc
    fflush.o(.text) refers to stdio.o(.text) for _fflush
    fflush.o(.text) refers to fseek.o(.text) for _fseek
    fflush.o(.text) refers to stdio_streams.o(.bss) for __stdin
    fwrite.o(.text) refers to fputc_locked.o(.text) for fputc
    fopen.o(.text) refers to fclose.o(.text) for _fclose_internal
    fopen.o(.text) refers to retarget_io.o(.text._sys_open) for _sys_open
    fopen.o(.text) refers to fseek.o(.text) for _fseek
    fopen.o(.text) refers to h1_alloc_threads.o(.text) for malloc
    fopen.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    fopen.o(.text) refers to stdio_streams.o(.bss) for __stdin
    fclose.o(.text) refers to stdio.o(.text) for _fflush
    fclose.o(.text) refers to retarget_io.o(.text._sys_close) for _sys_close
    fclose.o(.text) refers to h1_free_threads.o(.text) for free
    fclose.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    fclose_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    fclose_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    fclose_locked.o(.text) refers to fclose.o(.text) for _fclose_internal
    fclose_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    fclose_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    fclose_locked.o(.text) refers to streamlock.o(.data) for _stream_list_lock
    fflush_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    fflush_locked.o(.text) refers to stdio.o(.text) for _fflush
    fflush_locked.o(.text) refers to fseek.o(.text) for _fseek
    fflush_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    fflush_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    fflush_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    fflush_locked.o(.text) refers to streamlock.o(.data) for _stream_list_lock
    fflush_locked.o(.text) refers to stdio_streams.o(.bss) for __stdin
    fopen_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    fopen_locked.o(.text) refers to fclose.o(.text) for _fclose_internal
    fopen_locked.o(.text) refers to retarget_io.o(.text._sys_open) for _sys_open
    fopen_locked.o(.text) refers to fseek.o(.text) for _fseek
    fopen_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    fopen_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    fopen_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    fopen_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    fopen_locked.o(.text) refers to h1_alloc_threads.o(.text) for malloc
    fopen_locked.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    fopen_locked.o(.text) refers to rtx_lib.o(.text._mutex_initialize) for _mutex_initialize
    fopen_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    fopen_locked.o(.text) refers to streamlock.o(.data) for _stream_list_lock
    fopen_locked.o(.text) refers to stdio_streams.o(.bss) for __stdin
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_ldiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    rt_heap_descriptor.o(.text) refers to rt_heap_descriptor.o(.bss) for __rt_heap_descriptor_data
    rt_heap_descriptor_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_heap_descriptor_twolibspace.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    init_alloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    init_alloc.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000005) for __rt_lib_init_heap_2
    init_alloc.o(.text) refers (Special) to maybetermalloc2.o(.text) for _maybe_terminate_alloc
    init_alloc.o(.text) refers to h1_extend_threads.o(.text) for __Heap_ProvideMemory
    init_alloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    init_alloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    init_alloc.o(.text) refers to h1_init_threads.o(.text) for __Heap_Initialize
    free.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    free.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    free.o(.text) refers to heapstubs.o(.text) for __Heap_Free
    h1_free.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    h1_init_threads.o(.text) refers to rtx_lib.o(.text._mutex_initialize) for _mutex_initialize
    h1_free_threads.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    h1_free_threads.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    h1_free_threads.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    __printf.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    _printf_str.o(.text) refers (Special) to _printf_char.o(.text) for _printf_cs_common
    _printf_str.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_str.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_dec.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_signed
    _printf_dec.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_unsigned
    _printf_dec.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_char_common.o(.text) refers to __printf_flags_ss_wp.o(.text) for __printf
    _printf_wctomb.o(.text) refers (Special) to _printf_wchar.o(.text) for _printf_lcs_common
    _printf_wctomb.o(.text) refers to _c16rtomb.o(.text) for _wcrtomb
    _printf_wctomb.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_wctomb.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_wctomb.o(.text) refers to _printf_wctomb.o(.constdata) for .constdata
    _printf_wctomb.o(.constdata) refers (Special) to _printf_wchar.o(.text) for _printf_lcs_common
    _printf_longlong_dec.o(.text) refers to lludiv10.o(.text) for _ll_udiv10
    _printf_longlong_dec.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_oct_ll.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_oct_int.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_unsigned
    _printf_oct_int.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_oct_int_ll.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_oct_int_ll.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_unsigned
    _printf_hex_ll.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_ll.o(.text) refers to _printf_hex_ll.o(.constdata) for .constdata
    _printf_hex_int.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_unsigned
    _printf_hex_int.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_int.o(.text) refers to _printf_hex_int.o(.constdata) for .constdata
    _printf_hex_int_ll.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_int_ll.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_unsigned
    _printf_hex_int_ll.o(.text) refers to _printf_hex_int_ll.o(.constdata) for .constdata
    _printf_hex_ptr.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_ptr.o(.text) refers to _printf_hex_ptr.o(.constdata) for .constdata
    _printf_hex_int_ptr.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_int_ptr.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_unsigned
    _printf_hex_int_ptr.o(.text) refers to _printf_hex_int_ptr.o(.constdata) for .constdata
    _printf_hex_ll_ptr.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_ll_ptr.o(.text) refers to _printf_hex_ll_ptr.o(.constdata) for .constdata
    _printf_hex_int_ll_ptr.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_int_ll_ptr.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_unsigned
    _printf_hex_int_ll_ptr.o(.text) refers to _printf_hex_int_ll_ptr.o(.constdata) for .constdata
    __printf_flags.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags.o(.text) refers to __printf_flags.o(.constdata) for .constdata
    __printf_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to __printf_flags_ss.o(.constdata) for .constdata
    __printf_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_flags_wp.o(.constdata) for .constdata
    __printf_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_flags_ss_wp.o(.constdata) for .constdata
    _printf_c.o(.ARM.Collect$$_printf_percent$$00000013) refers (Weak) to _printf_char.o(.text) for _printf_char
    _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) refers (Weak) to _printf_char.o(.text) for _printf_string
    _printf_n.o(.ARM.Collect$$_printf_percent$$00000001) refers (Weak) to _printf_charcount.o(.text) for _printf_charcount
    _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C) refers (Weak) to _printf_hex_int_ll_ptr.o(.text) for _printf_int_hex
    _printf_p.o(.ARM.Collect$$_printf_percent$$00000002) refers (Weak) to _printf_hex_int_ll_ptr.o(.text) for _printf_hex_ptr
    _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B) refers (Weak) to _printf_oct_int_ll.o(.text) for _printf_int_oct
    _printf_i.o(.ARM.Collect$$_printf_percent$$00000008) refers (Weak) to _printf_dec.o(.text) for _printf_int_dec
    _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) refers (Weak) to _printf_dec.o(.text) for _printf_int_dec
    _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) refers (Weak) to _printf_dec.o(.text) for _printf_int_dec
    _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) refers (Weak) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    _printf_e.o(.ARM.Collect$$_printf_percent$$00000004) refers (Weak) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    _printf_g.o(.ARM.Collect$$_printf_percent$$00000005) refers (Weak) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    _printf_a.o(.ARM.Collect$$_printf_percent$$00000006) refers (Weak) to printf2.o(x$fpl$printf2) for _printf_fp_hex
    _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) refers (Special) to _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017) for _printf_percent_end
    _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D) refers (Special) to _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007) for _printf_ll
    _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D) refers (Weak) to _printf_longlong_dec.o(.text) for _printf_longlong_dec
    _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E) refers (Special) to _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007) for _printf_ll
    _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E) refers (Weak) to _printf_longlong_dec.o(.text) for _printf_longlong_dec
    _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F) refers (Special) to _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007) for _printf_ll
    _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F) refers (Weak) to _printf_longlong_dec.o(.text) for _printf_longlong_dec
    _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015) refers (Special) to _printf_l.o(.ARM.Collect$$_printf_percent$$00000012) for _printf_l
    _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015) refers (Weak) to _printf_wchar.o(.text) for _printf_wchar
    _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016) refers (Special) to _printf_l.o(.ARM.Collect$$_printf_percent$$00000012) for _printf_l
    _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016) refers (Weak) to _printf_wchar.o(.text) for _printf_wstring
    _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010) refers (Special) to _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007) for _printf_ll
    _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010) refers (Weak) to _printf_oct_int_ll.o(.text) for _printf_ll_oct
    _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011) refers (Special) to _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007) for _printf_ll
    _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011) refers (Weak) to _printf_hex_int_ll_ptr.o(.text) for _printf_ll_hex
    scanf_char.o(.text) refers to _scanf.o(.text) for __vfscanf
    scanf_char.o(.text) refers to isspace.o(.text) for isspace
    scanf_char_file.o(.text) refers to scanf_char.o(.text) for __vfscanf_char
    scanf_char_file.o(.text) refers to fgetc_locked.o(.text) for fgetc
    scanf_char_file.o(.text) refers to backspace_locked.o(.text) for __backspace
    fputc.o(i.fputc) refers to flsbuf.o(.text) for __flsbuf_byte
    fseek.o(.text) refers to retarget_io.o(.text._sys_istty) for _sys_istty
    fseek.o(.text) refers to ftell.o(.text) for _ftell_internal
    fseek.o(.text) refers to retarget_io.o(.text._sys_flen) for _sys_flen
    fseek.o(.text) refers to stdio.o(.text) for _seterr
    stdio.o(.text) refers to retarget_io.o(.text._sys_seek) for _sys_seek
    stdio.o(.text) refers to retarget_io.o(.text._sys_write) for _sys_write
    streamlock.o(.data) refers (Special) to initio_locked.o(.text) for _initio
    stdio_streams.o(.bss) refers (Special) to initio_locked.o(.text) for _initio
    stdio_streams.o(.bss) refers (Special) to initio_locked.o(.text) for _initio
    stdio_streams.o(.bss) refers (Special) to initio_locked.o(.text) for _initio
    stdio_streams.o(.data) refers (Special) to initio_locked.o(.text) for _initio
    stdio_streams.o(.data) refers (Special) to initio_locked.o(.text) for _initio
    stdio_streams.o(.data) refers (Special) to initio_locked.o(.text) for _initio
    fputc_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    fputc_locked.o(.text) refers to fputc.o(i.fputc) for _fputc$unlocked
    fputc_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    _get_argv.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv.o(.text) refers to h1_alloc_threads.o(.text) for malloc
    _get_argv.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000005) refers (Weak) to init_alloc.o(.text) for _init_alloc
    libinit2.o(.ARM.Collect$$libinit$$0000000F) refers (Weak) to rt_locale_twolibspace.o(.text) for __rt_locale
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers (Weak) to lc_ctype_c.o(locale$$code) for _get_lc_ctype
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers (Weak) to lc_numeric_c.o(locale$$code) for _get_lc_numeric
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000024) refers (Weak) to initio_locked.o(.text) for _initio
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    printf1.o(x$fpl$printf1) refers to _printf_fp_dec.o(.text) for _printf_fp_dec_real
    printf2.o(x$fpl$printf2) refers to _printf_fp_hex.o(.text) for _printf_fp_hex_real
    printf2b.o(x$fpl$printf2) refers to _printf_fp_hex.o(.text) for _printf_fp_hex_real
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to rtx_lib.o(.text._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    maybetermalloc2.o(.text) refers (Special) to term_alloc.o(.text) for _terminate_alloc
    h1_extend.o(.text) refers to h1_free_threads.o(.text) for free
    h1_extend_threads.o(.text) refers to h1_free_threads.o(.text) for free_internal$concurrent
    isspace.o(.text) refers to rt_ctype_table.o(.text) for __rt_ctype_table
    _printf_intcommon.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_intcommon.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_intcommon.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_fp_dec.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    _printf_fp_dec.o(.text) refers (Special) to lc_numeric_c.o(locale$$code) for _get_lc_numeric
    _printf_fp_dec.o(.text) refers to bigflt0.o(.text) for _btod_etento
    _printf_fp_dec.o(.text) refers to btod.o(CL$$btod_d2e) for _btod_d2e
    _printf_fp_dec.o(.text) refers to btod.o(CL$$btod_ediv) for _btod_ediv
    _printf_fp_dec.o(.text) refers to btod.o(CL$$btod_emul) for _btod_emul
    _printf_fp_dec.o(.text) refers to lludiv10.o(.text) for _ll_udiv10
    _printf_fp_dec.o(.text) refers to fpclassify.o(i.__ARM_fpclassify) for __ARM_fpclassify
    _printf_fp_dec.o(.text) refers to _printf_fp_infnan.o(.text) for _printf_fp_infnan
    _printf_fp_dec.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_dec.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_dec.o(.text) refers to rt_locale_twolibspace.o(.text) for __rt_locale
    _printf_fp_dec.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_fp_dec_accurate.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    _printf_fp_dec_accurate.o(.text) refers (Special) to lc_numeric_c.o(locale$$code) for _get_lc_numeric
    _printf_fp_dec_accurate.o(.text) refers to btod_accurate.o(.text) for _btod_main
    _printf_fp_dec_accurate.o(.text) refers to fpclassify.o(i.__ARM_fpclassify) for __ARM_fpclassify
    _printf_fp_dec_accurate.o(.text) refers to _printf_fp_infnan.o(.text) for _printf_fp_infnan
    _printf_fp_dec_accurate.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_dec_accurate.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_dec_accurate.o(.text) refers to rt_locale_twolibspace.o(.text) for __rt_locale
    _printf_fp_dec_accurate.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_fp_hex.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    _printf_fp_hex.o(.text) refers to fpclassify.o(i.__ARM_fpclassify) for __ARM_fpclassify
    _printf_fp_hex.o(.text) refers to _printf_fp_infnan.o(.text) for _printf_fp_infnan
    _printf_fp_hex.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_hex.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_hex.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_fp_hex.o(.text) refers to _printf_fp_hex.o(.constdata) for .constdata
    _printf_fp_hex.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    _printf_char.o(.text) refers (Weak) to _printf_str.o(.text) for _printf_str
    _printf_wchar.o(.text) refers (Weak) to _printf_wctomb.o(.text) for _printf_wctomb
    _scanf.o(.text) refers (Weak) to _scanf_str.o(.text) for _scanf_string
    backspace.o(.text) refers to ungetc.o(.text) for _ungetc_internal
    fgetc.o(i.fgetc) refers to filbuf.o(.text) for __filbuf_byte
    flsbuf.o(.text) refers to stdio.o(.text) for _deferredlazyseek
    flsbuf.o(.text) refers to retarget_io.o(.text._sys_flen) for _sys_flen
    flsbuf.o(.text) refers to retarget_io.o(.text._sys_istty) for _sys_istty
    flsbuf.o(.text) refers to h1_alloc_threads.o(.text) for malloc
    ftell.o(.text) refers to rt_errno_addr_twolibspace.o(.text) for __aeabi_errno_addr
    initio.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000024) for __rt_lib_init_stdio_2
    initio.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000003) for __rt_lib_shutdown_stdio_2
    initio.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    initio.o(.text) refers to fopen_locked.o(.text) for freopen
    initio.o(.text) refers to defsig_rtred_outer.o(.text) for __rt_SIGRTRED
    initio.o(.text) refers to setvbuf_locked.o(.text) for setvbuf
    initio.o(.text) refers to fclose.o(.text) for _fclose_internal
    initio.o(.text) refers to h1_free_threads.o(.text) for free
    initio.o(.text) refers to stdio_streams.o(.bss) for __stdin
    initio.o(.text) refers to stdio_streams.o(.bss) for __stdout
    initio.o(.text) refers to stdio_streams.o(.bss) for __stderr
    initio.o(.text) refers to stdio_streams.o(.data) for __aeabi_stdin
    initio.o(.text) refers to stdio_streams.o(.data) for __aeabi_stdout
    initio.o(.text) refers to stdio_streams.o(.data) for __aeabi_stderr
    initio.o(.text) refers to retarget_io.o(.rodata.__stdin_name) for __stdin_name
    initio.o(.text) refers to retarget_io.o(.rodata.__stdout_name) for __stdout_name
    initio.o(.text) refers to retarget_io.o(.rodata.__stderr_name) for __stderr_name
    fgetc_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    fgetc_locked.o(.text) refers to fgetc.o(i.fgetc) for _fgetc$unlocked
    fgetc_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    backspace_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    backspace_locked.o(.text) refers to backspace.o(.text) for ___backspace$unlocked
    backspace_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    initio_locked.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000024) for __rt_lib_init_stdio_2
    initio_locked.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000003) for __rt_lib_shutdown_stdio_2
    initio_locked.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    initio_locked.o(.text) refers to rtx_lib.o(.text._mutex_initialize) for _mutex_initialize
    initio_locked.o(.text) refers to fopen_locked.o(.text) for freopen
    initio_locked.o(.text) refers to defsig_rtred_outer.o(.text) for __rt_SIGRTRED
    initio_locked.o(.text) refers to setvbuf_locked.o(.text) for setvbuf
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    initio_locked.o(.text) refers to fclose.o(.text) for _fclose_internal
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_free) for _mutex_free
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_free) for _mutex_free
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_free) for _mutex_free
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_free) for _mutex_free
    initio_locked.o(.text) refers to h1_free_threads.o(.text) for free
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_free) for _mutex_free
    initio_locked.o(.text) refers to stdio_streams.o(.bss) for __stdin
    initio_locked.o(.text) refers to stdio_streams.o(.bss) for __stdout
    initio_locked.o(.text) refers to stdio_streams.o(.bss) for __stderr
    initio_locked.o(.text) refers to stdio_streams.o(.data) for __aeabi_stdin
    initio_locked.o(.text) refers to stdio_streams.o(.data) for __aeabi_stdout
    initio_locked.o(.text) refers to stdio_streams.o(.data) for __aeabi_stderr
    initio_locked.o(.text) refers to streamlock.o(.data) for _stream_list_lock
    initio_locked.o(.text) refers to retarget_io.o(.rodata.__stdin_name) for __stdin_name
    initio_locked.o(.text) refers to retarget_io.o(.rodata.__stdout_name) for __stdout_name
    initio_locked.o(.text) refers to retarget_io.o(.rodata.__stderr_name) for __stderr_name
    _c16rtomb.o(.text) refers to rt_ctype_table.o(.text) for __rt_ctype_table
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    heapauxa.o(.text) refers to heapauxa.o(.data) for .data
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    flsbuf_fwide.o(.text) refers to flsbuf.o(.text) for __flsbuf
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f411xe.o(.text) for __user_initial_stackheap
    rt_ctype_table.o(.text) refers to rt_locale_twolibspace.o(.text) for __rt_locale
    rt_ctype_table.o(.text) refers to lc_ctype_c.o(locale$$code) for _get_lc_ctype
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    rt_locale.o(.text) refers to rt_locale.o(.bss) for __rt_locale_data
    rt_locale_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_locale_twolibspace.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    rt_errno_addr.o(.text) refers to rt_errno_addr.o(.bss) for __aeabi_errno_addr_data
    rt_errno_addr_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_errno_addr_twolibspace.o(.text) refers to rtx_lib.o(.text.__user_perthread_libspace) for __user_perthread_libspace
    term_alloc.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D) for __rt_lib_shutdown_heap_2
    term_alloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    term_alloc.o(.text) refers to h1_final_threads.o(.text) for __Heap_Finalize
    _printf_fp_infnan.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_infnan.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    bigflt0.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    bigflt0.o(.text) refers to btod.o(CL$$btod_emul) for _btod_emul
    bigflt0.o(.text) refers to btod.o(CL$$btod_ediv) for _btod_ediv
    bigflt0.o(.text) refers to bigflt0.o(.constdata) for .constdata
    bigflt0.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_d2e) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_d2e) refers to btod.o(CL$$btod_d2e_norm_op1) for _d2e_norm_op1
    btod.o(CL$$btod_d2e_norm_op1) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_d2e_norm_op1) refers to btod.o(CL$$btod_d2e_denorm_low) for _d2e_denorm_low
    btod.o(CL$$btod_d2e_denorm_low) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_emul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_emul) refers to btod.o(CL$$btod_mult_common) for __btod_mult_common
    btod.o(CL$$btod_emul) refers to btod.o(CL$$btod_e2e) for _e2e
    btod.o(CL$$btod_ediv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_ediv) refers to btod.o(CL$$btod_div_common) for __btod_div_common
    btod.o(CL$$btod_ediv) refers to btod.o(CL$$btod_e2e) for _e2e
    btod.o(CL$$btod_emuld) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_emuld) refers to btod.o(CL$$btod_mult_common) for __btod_mult_common
    btod.o(CL$$btod_emuld) refers to btod.o(CL$$btod_e2d) for _e2d
    btod.o(CL$$btod_edivd) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_edivd) refers to btod.o(CL$$btod_div_common) for __btod_div_common
    btod.o(CL$$btod_edivd) refers to btod.o(CL$$btod_e2d) for _e2d
    btod.o(CL$$btod_e2e) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_e2d) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_e2d) refers to btod.o(CL$$btod_e2e) for _e2e
    btod.o(CL$$btod_mult_common) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_div_common) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod_accurate.o(.text) refers to btod_accurate_common.o(.text) for _btod_common
    filbuf.o(.text) refers to retarget_io.o(.text._sys_read) for _sys_read
    filbuf.o(.text) refers to stdio.o(.text) for _seterr
    filbuf.o(.text) refers to h1_alloc_threads.o(.text) for malloc
    filbuf.o(.text) refers to retarget_io.o(.text._sys_seek) for _sys_seek
    filbuf.o(.text) refers to flushlinebuffered_locked.o(.text) for _flushlinebuffered
    fwritefast.o(.text) refers to stdio.o(.text) for _writebuf
    fwritefast.o(.text) refers to flsbuf.o(.text) for __flsbuf_byte
    fwritefast.o(.text) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    setvbuf_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    setvbuf_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    fwritefast_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    fwritefast_locked.o(.text) refers to stdio.o(.text) for _writebuf
    fwritefast_locked.o(.text) refers to flsbuf.o(.text) for __flsbuf_byte
    fwritefast_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    fwritefast_locked.o(.text) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    lc_numeric_c.o(locale$$data) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000016) for __rt_lib_init_lc_numeric_2
    lc_numeric_c.o(locale$$code) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000016) for __rt_lib_init_lc_numeric_2
    lc_numeric_c.o(locale$$code) refers to strcmpv7em.o(.text) for strcmp
    lc_numeric_c.o(locale$$code) refers to lc_numeric_c.o(locale$$data) for __lcnum_c_name
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_rtred_outer.o(.text) refers to defsig_rtred_inner.o(.text) for __rt_SIGRTRED_inner
    defsig_rtred_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtred_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    assert_stdio.o(.text) refers to fputs_locked.o(.text) for fputs
    assert_stdio.o(.text) refers to fs_config.o(.text.$Sub$$fflush) for fflush
    assert_stdio.o(.text) refers to stdio_streams.o(.bss) for __stderr
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libshutdown2.o(.ARM.Collect$$libshutdown$$00000003) refers (Weak) to initio_locked.o(.text) for _terminateio
    libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D) refers (Weak) to term_alloc.o(.text) for _terminate_alloc
    filbuf_fwide.o(.text) refers to filbuf.o(.text) for __filbuf
    istatus.o(x$fpl$ieeestatus) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fpclassify.o(i.__ARM_fpclassify) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    h1_final_threads.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_free) for _mutex_free
    scanf_char_file_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    scanf_char_file_locked.o(.text) refers to scanf_char.o(.text) for __vfscanf_char
    scanf_char_file_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    scanf_char_file_locked.o(.text) refers to fgetc.o(i.fgetc) for _fgetc$unlocked
    scanf_char_file_locked.o(.text) refers to backspace.o(.text) for ___backspace$unlocked
    btod_accurate_common.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    fputs.o(.text) refers to fputc_locked.o(.text) for fputc
    freadfast.o(.text) refers to filbuf.o(.text) for _readbuf
    freadfast.o(.text) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    fread_bytes_avail.o(.text) refers to filbuf.o(.text) for __filbuf_byte
    fread_bytes_avail.o(.text) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    flushlinebuffered.o(.text) refers to fflush_locked.o(.text) for _do_fflush
    flushlinebuffered.o(.text) refers to stdio_streams.o(.bss) for __stdin
    fputs_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    fputs_locked.o(.text) refers to fputc.o(i.fputc) for _fputc$unlocked
    fputs_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    freadfast_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    freadfast_locked.o(.text) refers to filbuf.o(.text) for _readbuf
    freadfast_locked.o(.text) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    freadfast_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    fread_bytes_avail_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    fread_bytes_avail_locked.o(.text) refers to filbuf.o(.text) for __filbuf_byte
    fread_bytes_avail_locked.o(.text) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    fread_bytes_avail_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    flushlinebuffered_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    flushlinebuffered_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    flushlinebuffered_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    flushlinebuffered_locked.o(.text) refers to fflush_locked.o(.text) for _do_fflush
    flushlinebuffered_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    flushlinebuffered_locked.o(.text) refers to streamlock.o(.data) for _stream_list_lock
    flushlinebuffered_locked.o(.text) refers to stdio_streams.o(.bss) for __stdin
    lc_ctype_c.o(locale$$data) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000012) for __rt_lib_init_lc_ctype_2
    lc_ctype_c.o(locale$$code) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000012) for __rt_lib_init_lc_ctype_2
    lc_ctype_c.o(locale$$code) refers to strcmpv7em.o(.text) for strcmp
    lc_ctype_c.o(locale$$code) refers to lc_ctype_c.o(locale$$data) for __lcctype_c_name
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtred_inner.o(.text) for __rt_SIGRTRED_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    fs_version.o(.ARM.RL_ARM1) refers to fs_version.o(.ARM.RL_ARM2) for .ARM.RL_ARM2
    fs_version.o(.ARM.RL_ARM2) refers to fs_version.o(.ARM.RL_ARM3) for .ARM.RL_ARM3
    fs_version.o(.ARM.RL_ARM3) refers to fs_version.o(.ARM.RL_ARM4) for .ARM.RL_ARM4
    fs_version.o(.ARM.RL_ARM4) refers to fs_version.o(.ARM.RL_ARM5) for .ARM.RL_ARM5
    fs_version.o(.ARM.RL_ARM5) refers to fs_version.o(.ARM.RL_ARM6) for .ARM.RL_ARM6
    fs_version.o(.ARM.RL_ARM6) refers to fs_version.o(.ARM.RL_ARM1) for .ARM.RL_ARM1


==============================================================================

Removing Unused input sections from the image.

    Removing osmain.o(.text), (0 bytes).
    Removing osmain.o(.ARM.exidx.text.app_main), (8 bytes).
    Removing osmain.o(.ARM.exidx.text.app_pwm), (8 bytes).
    Removing osmain.o(.ARM.exidx.text.osMain), (8 bytes).
    Removing osmain.o(.data.str), (28 bytes).
    Removing osmain.o(.bss.buf), (28 bytes).
    Removing serial.o(.text), (0 bytes).
    Removing serial.o(.ARM.exidx.text.emHAL_UART_Transmit_DMA), (8 bytes).
    Removing serial.o(.ARM.exidx.text.em_printf), (8 bytes).
    Removing serial.o(.ARM.exidx.text.initSerial), (8 bytes).
    Removing serial.o(.ARM.exidx.text.restartDMA), (8 bytes).
    Removing serial.o(.ARM.exidx.text.USART1_IRQHandler), (8 bytes).
    Removing serial.o(.ARM.exidx.text.registerSerial), (8 bytes).
    Removing w25qxx.o(.text), (0 bytes).
    Removing w25qxx.o(.ARM.exidx.text.mmdelay), (8 bytes).
    Removing w25qxx.o(.ARM.exidx.text.W25qxx_Spi), (8 bytes).
    Removing w25qxx.o(.ARM.exidx.text.W25qxx_ReadID), (8 bytes).
    Removing w25qxx.o(.ARM.exidx.text.W25qxx_ReadUniqID), (8 bytes).
    Removing w25qxx.o(.ARM.exidx.text.W25qxx_WriteEnable), (8 bytes).
    Removing w25qxx.o(.text.W25qxx_WriteDisable), (48 bytes).
    Removing w25qxx.o(.ARM.exidx.text.W25qxx_WriteDisable), (8 bytes).
    Removing w25qxx.o(.ARM.exidx.text.W25qxx_ReadStatusRegister), (8 bytes).
    Removing w25qxx.o(.text.W25qxx_WriteStatusRegister), (100 bytes).
    Removing w25qxx.o(.ARM.exidx.text.W25qxx_WriteStatusRegister), (8 bytes).
    Removing w25qxx.o(.ARM.exidx.text.W25qxx_WaitForWriteEnd), (8 bytes).
    Removing w25qxx.o(.ARM.exidx.text.W25qxx_Init), (8 bytes).
    Removing w25qxx.o(.ARM.exidx.text.W25qxx_EraseChip), (8 bytes).
    Removing w25qxx.o(.ARM.exidx.text.W25qxx_EraseSector), (8 bytes).
    Removing w25qxx.o(.text.W25qxx_EraseBlock), (140 bytes).
    Removing w25qxx.o(.ARM.exidx.text.W25qxx_EraseBlock), (8 bytes).
    Removing w25qxx.o(.text.W25qxx_PageToSector), (20 bytes).
    Removing w25qxx.o(.ARM.exidx.text.W25qxx_PageToSector), (8 bytes).
    Removing w25qxx.o(.text.W25qxx_PageToBlock), (20 bytes).
    Removing w25qxx.o(.ARM.exidx.text.W25qxx_PageToBlock), (8 bytes).
    Removing w25qxx.o(.text.W25qxx_SectorToBlock), (20 bytes).
    Removing w25qxx.o(.ARM.exidx.text.W25qxx_SectorToBlock), (8 bytes).
    Removing w25qxx.o(.text.W25qxx_SectorToPage), (20 bytes).
    Removing w25qxx.o(.ARM.exidx.text.W25qxx_SectorToPage), (8 bytes).
    Removing w25qxx.o(.text.W25qxx_BlockToPage), (20 bytes).
    Removing w25qxx.o(.ARM.exidx.text.W25qxx_BlockToPage), (8 bytes).
    Removing w25qxx.o(.text.W25qxx_IsEmptyPage), (312 bytes).
    Removing w25qxx.o(.ARM.exidx.text.W25qxx_IsEmptyPage), (8 bytes).
    Removing w25qxx.o(.text.W25qxx_IsEmptySector), (308 bytes).
    Removing w25qxx.o(.ARM.exidx.text.W25qxx_IsEmptySector), (8 bytes).
    Removing w25qxx.o(.text.W25qxx_IsEmptyBlock), (308 bytes).
    Removing w25qxx.o(.ARM.exidx.text.W25qxx_IsEmptyBlock), (8 bytes).
    Removing w25qxx.o(.ARM.exidx.text.W25qxx_WriteByte), (8 bytes).
    Removing w25qxx.o(.text.W25qxx_WritePage), (188 bytes).
    Removing w25qxx.o(.ARM.exidx.text.W25qxx_WritePage), (8 bytes).
    Removing w25qxx.o(.text.W25qxx_WriteSector), (100 bytes).
    Removing w25qxx.o(.ARM.exidx.text.W25qxx_WriteSector), (8 bytes).
    Removing w25qxx.o(.text.W25qxx_WriteBlock), (100 bytes).
    Removing w25qxx.o(.ARM.exidx.text.W25qxx_WriteBlock), (8 bytes).
    Removing w25qxx.o(.text.W25qxx_ReadByte), (128 bytes).
    Removing w25qxx.o(.ARM.exidx.text.W25qxx_ReadByte), (8 bytes).
    Removing w25qxx.o(.ARM.exidx.text.W25qxx_ReadBytes), (8 bytes).
    Removing w25qxx.o(.text.W25qxx_ReadPage), (168 bytes).
    Removing w25qxx.o(.ARM.exidx.text.W25qxx_ReadPage), (8 bytes).
    Removing w25qxx.o(.text.W25qxx_ReadSector), (100 bytes).
    Removing w25qxx.o(.ARM.exidx.text.W25qxx_ReadSector), (8 bytes).
    Removing w25qxx.o(.text.W25qxx_ReadBlock), (100 bytes).
    Removing w25qxx.o(.ARM.exidx.text.W25qxx_ReadBlock), (8 bytes).
    Removing driver_flash.o(.text), (0 bytes).
    Removing driver_flash.o(.ARM.exidx.text.ARM_Flash_GetVersion), (8 bytes).
    Removing driver_flash.o(.ARM.exidx.text.ARM_Flash_GetCapabilities), (8 bytes).
    Removing driver_flash.o(.ARM.exidx.text.ARM_Flash_Initialize), (8 bytes).
    Removing driver_flash.o(.ARM.exidx.text.ARM_Flash_Uninitialize), (8 bytes).
    Removing driver_flash.o(.ARM.exidx.text.ARM_Flash_PowerControl), (8 bytes).
    Removing driver_flash.o(.ARM.exidx.text.ARM_Flash_ReadData), (8 bytes).
    Removing driver_flash.o(.ARM.exidx.text.ARM_Flash_ProgramData), (8 bytes).
    Removing driver_flash.o(.ARM.exidx.text.ARM_Flash_EraseSector), (8 bytes).
    Removing driver_flash.o(.ARM.exidx.text.ARM_Flash_EraseChip), (8 bytes).
    Removing driver_flash.o(.ARM.exidx.text.ARM_Flash_GetStatus), (8 bytes).
    Removing driver_flash.o(.ARM.exidx.text.ARM_Flash_GetInfo), (8 bytes).
    Removing driver_flash.o(.text.ARM_Flash_SignalEvent), (2 bytes).
    Removing driver_flash.o(.ARM.exidx.text.ARM_Flash_SignalEvent), (8 bytes).
    Removing shell.o(.text), (0 bytes).
    Removing shell.o(.ARM.exidx.text.hInitialise), (8 bytes).
    Removing shell.o(.ARM.exidx.text.hAppend), (8 bytes).
    Removing shell.o(.ARM.exidx.text.hPrevious), (8 bytes).
    Removing shell.o(.ARM.exidx.text.hNext), (8 bytes).
    Removing shell.o(.ARM.exidx.text.consoleStringSetString), (8 bytes).
    Removing shell.o(.ARM.exidx.text.consoleStringReset), (8 bytes).
    Removing shell.o(.ARM.exidx.text.consoleStringInsert), (8 bytes).
    Removing shell.o(.ARM.exidx.text.consoleStringRemove), (8 bytes).
    Removing shell.o(.ARM.exidx.text.consoleStringGetString), (8 bytes).
    Removing shell.o(.ARM.exidx.text.consoleStringStringSplit), (8 bytes).
    Removing shell.o(.ARM.exidx.text.consoleCmdManageAppend), (8 bytes).
    Removing shell.o(.ARM.exidx.text.consoleCmdManageFind), (8 bytes).
    Removing shell.o(.ARM.exidx.text.console_line_handle), (8 bytes).
    Removing shell.o(.ARM.exidx.text.m_cmd_fun_help), (8 bytes).
    Removing shell.o(.ARM.exidx.text.console_cmd_init), (8 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.SystemClock_Config), (8 bytes).
    Removing main.o(.ARM.exidx.text.Error_Handler), (8 bytes).
    Removing main.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedCallback), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing gpio.o(.text), (0 bytes).
    Removing gpio.o(.ARM.exidx.text.MX_GPIO_Init), (8 bytes).
    Removing dma.o(.text), (0 bytes).
    Removing dma.o(.ARM.exidx.text.MX_DMA_Init), (8 bytes).
    Removing spi.o(.text), (0 bytes).
    Removing spi.o(.ARM.exidx.text.MX_SPI2_Init), (8 bytes).
    Removing spi.o(.ARM.exidx.text.HAL_SPI_MspInit), (8 bytes).
    Removing spi.o(.text.HAL_SPI_MspDeInit), (40 bytes).
    Removing spi.o(.ARM.exidx.text.HAL_SPI_MspDeInit), (8 bytes).
    Removing usart.o(.text), (0 bytes).
    Removing usart.o(.ARM.exidx.text.MX_USART1_UART_Init), (8 bytes).
    Removing usart.o(.ARM.exidx.text.HAL_UART_MspInit), (8 bytes).
    Removing usart.o(.text.HAL_UART_MspDeInit), (64 bytes).
    Removing usart.o(.ARM.exidx.text.HAL_UART_MspDeInit), (8 bytes).
    Removing stm32f4xx_it.o(.text), (0 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.NMI_Handler), (8 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.MemManage_Handler), (8 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.BusFault_Handler), (8 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.UsageFault_Handler), (8 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.DebugMon_Handler), (8 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.TIM1_TRG_COM_TIM11_IRQHandler), (8 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.DMA2_Stream2_IRQHandler), (8 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.DMA2_Stream7_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_msp.o(.text), (0 bytes).
    Removing stm32f4xx_hal_msp.o(.ARM.exidx.text.HAL_MspInit), (8 bytes).
    Removing stm32f4xx_hal_timebase_tim.o(.text), (0 bytes).
    Removing stm32f4xx_hal_timebase_tim.o(.ARM.exidx.text.HAL_InitTick), (8 bytes).
    Removing stm32f4xx_hal_timebase_tim.o(.text.HAL_SuspendTick), (20 bytes).
    Removing stm32f4xx_hal_timebase_tim.o(.ARM.exidx.text.HAL_SuspendTick), (8 bytes).
    Removing stm32f4xx_hal_timebase_tim.o(.text.HAL_ResumeTick), (20 bytes).
    Removing stm32f4xx_hal_timebase_tim.o(.ARM.exidx.text.HAL_ResumeTick), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text), (0 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Init), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_MspInit), (2 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_MspInit), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_DeInit), (46 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_DeInit), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_MspDeInit), (2 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit), (354 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Transmit), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_EndRxTxTransaction), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Receive), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TransmitReceive), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_EndRxTransaction), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit_IT), (144 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Transmit_IT), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_TxISR_16BIT), (30 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_TxISR_16BIT), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_TxISR_8BIT), (32 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_TxISR_8BIT), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive_IT), (180 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Receive_IT), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_IT), (216 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TransmitReceive_IT), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_RxISR_16BIT), (30 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_RxISR_16BIT), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_RxISR_8BIT), (32 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_RxISR_8BIT), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_2linesRxISR_16BIT), (40 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_2linesRxISR_16BIT), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_2linesTxISR_16BIT), (40 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_2linesTxISR_16BIT), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_2linesRxISR_8BIT), (44 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_2linesRxISR_8BIT), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_2linesTxISR_8BIT), (44 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_2linesTxISR_8BIT), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit_DMA), (188 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Transmit_DMA), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_DMAHalfTransmitCplt), (6 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMAHalfTransmitCplt), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_DMATransmitCplt), (110 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMATransmitCplt), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_DMAError), (30 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMAError), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive_DMA), (228 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Receive_DMA), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_DMA), (264 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TransmitReceive_DMA), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_DMAHalfReceiveCplt), (6 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMAHalfReceiveCplt), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_DMAReceiveCplt), (86 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMAReceiveCplt), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_DMAHalfTransmitReceiveCplt), (6 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMAHalfTransmitReceiveCplt), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_DMATransmitReceiveCplt), (94 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMATransmitReceiveCplt), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort), (288 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Abort), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_AbortTx_ISR), (26 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_AbortTx_ISR), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_AbortRx_ISR), (84 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_AbortRx_ISR), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort_IT), (296 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Abort_IT), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_DMATxAbortCallback), (128 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMATxAbortCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_DMARxAbortCallback), (116 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMARxAbortCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_AbortCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_AbortCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_DMAPause), (32 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_DMAPause), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_DMAResume), (32 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_DMAResume), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_DMAStop), (68 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_DMAStop), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_IRQHandler), (264 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_DMAAbortOnError), (12 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMAAbortOnError), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_ErrorCallback), (2 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_ErrorCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_TxCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TxCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_RxCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_RxCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_TxRxCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TxRxCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_TxHalfCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TxHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_RxHalfCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_RxHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_TxRxHalfCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TxRxHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_GetState), (6 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_GetState), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_GetError), (4 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_GetError), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_CloseRxTx_ISR), (156 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_CloseRxTx_ISR), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_CloseRx_ISR), (88 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_CloseRx_ISR), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_CloseTx_ISR), (136 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_CloseTx_ISR), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_WaitFlagStateUntilTimeout), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text), (0 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Init), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_MspInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_Base_SetConfig), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_DeInit), (60 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_DeInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_MspDeInit), (2 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Start), (36 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Stop), (46 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start_IT), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Stop_IT), (42 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop_IT), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA), (116 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start_DMA), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt), (12 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_DMAPeriodElapsedCplt), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt), (12 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_DMAPeriodElapsedHalfCplt), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_DMAError), (12 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_DMAError), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Stop_DMA), (60 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop_DMA), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Init), (52 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Init), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_MspInit), (2 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_MspInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_DeInit), (60 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_DeInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_MspDeInit), (2 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Start), (56 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd), (30 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_CCxChannelCmd), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Stop), (84 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Start_IT), (112 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start_IT), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Stop_IT), (144 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop_IT), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA), (312 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start_DMA), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_DMADelayPulseCplt), (58 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_DMADelayPulseCplt), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt), (58 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_DMADelayPulseHalfCplt), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Stop_DMA), (168 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop_DMA), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Init), (52 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Init), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_MspInit), (2 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_DeInit), (60 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_DeInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_MspDeInit), (2 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Start), (56 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Stop), (92 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Start_IT), (112 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start_IT), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_IT), (144 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_IT), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA), (312 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start_DMA), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_DMA), (168 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_DMA), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Init), (52 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Init), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_MspInit), (2 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_MspInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_DeInit), (60 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_DeInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_MspDeInit), (2 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Start), (36 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Stop), (46 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Start_IT), (94 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start_IT), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Stop_IT), (104 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop_IT), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA), (268 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start_DMA), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_DMACaptureCplt), (58 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_DMACaptureCplt), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt), (58 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_DMACaptureHalfCplt), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Stop_DMA), (130 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop_DMA), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Init), (70 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Init), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspInit), (2 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_DeInit), (60 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_DeInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspDeInit), (2 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start), (48 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop), (96 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start_IT), (64 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start_IT), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop_IT), (112 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop_IT), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Init), (154 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Init), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_MspInit), (2 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_MspInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_DeInit), (60 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_DeInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_MspDeInit), (2 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Start), (50 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop), (70 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_IT), (92 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_IT), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_IT), (118 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_IT), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA), (344 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_DMA), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_DMA), (144 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_DMA), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_CaptureCallback), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_DelayElapsedCallback), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedCallback), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedCallback), (2 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedCallback), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_TriggerCallback), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel), (84 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_ConfigChannel), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_OC1_SetConfig), (92 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_OC1_SetConfig), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_OC2_SetConfig), (100 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_OC2_SetConfig), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_OC3_SetConfig), (100 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_OC3_SetConfig), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_OC4_SetConfig), (76 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_OC4_SetConfig), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel), (224 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_ConfigChannel), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_TI1_SetConfig), (112 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_TI1_SetConfig), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_TI2_SetConfig), (56 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_TI2_SetConfig), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel), (158 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_ConfigChannel), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel), (174 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_ConfigChannel), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStart), (380 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStart), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_DMATriggerCplt), (12 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_DMATriggerCplt), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt), (12 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_DMATriggerHalfCplt), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStop), (110 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStop), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStart), (380 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStart), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStop), (110 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStop), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_GenerateEvent), (34 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GenerateEvent), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_ConfigOCrefClear), (212 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigOCrefClear), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_ETR_SetConfig), (18 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_ETR_SetConfig), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource), (272 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigClockSource), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_TI1_ConfigInputStage), (34 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_TI1_ConfigInputStage), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_TI2_ConfigInputStage), (34 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_TI2_ConfigInputStage), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_ConfigTI1Input), (16 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigTI1Input), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro), (72 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig), (136 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_SlaveTimer_SetConfig), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro_IT), (72 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro_IT), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_ReadCapturedValue), (46 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ReadCapturedValue), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedHalfCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_CaptureHalfCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_CaptureHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_TriggerHalfCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_TriggerHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_ErrorCallback), (2 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ErrorCallback), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_GetState), (6 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_GetState), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_GetState), (6 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_GetState), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_GetState), (6 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_GetState), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_GetState), (6 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_GetState), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_GetState), (6 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_GetState), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_GetState), (6 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_GetState), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text), (0 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init), (174 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Init), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspInit), (2 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_MspInit), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_DeInit), (60 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_DeInit), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspDeInit), (2 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start), (38 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop), (48 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_IT), (46 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start_IT), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_IT), (56 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop_IT), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA), (136 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start_DMA), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_DMA), (64 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop_DMA), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start), (44 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd), (30 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.TIM_CCxNChannelCmd), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop), (70 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_IT), (94 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start_IT), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_IT), (130 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop_IT), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA), (248 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start_DMA), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_DMA), (134 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop_DMA), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start), (44 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop), (70 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_IT), (94 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start_IT), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_IT), (130 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop_IT), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA), (248 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start_DMA), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_DMA), (134 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop_DMA), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start), (26 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Start), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop), (70 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Stop), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start_IT), (42 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Start_IT), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop_IT), (86 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Stop_IT), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent), (120 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_IT), (120 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent_IT), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA), (152 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent_DMA), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt), (12 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.TIMEx_DMACommutationCplt), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt), (12 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.TIMEx_DMACommutationHalfCplt), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_MasterConfigSynchronization), (66 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_MasterConfigSynchronization), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigBreakDeadTime), (80 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigBreakDeadTime), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_RemapConfig), (26 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_RemapConfig), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_CommutCallback), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutHalfCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_CommutHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_BreakCallback), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_GetState), (6 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_GetState), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text), (0 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Init), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_MspInit), (2 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_MspInit), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_SetConfig), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_HalfDuplex_Init), (100 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_Init), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_LIN_Init), (116 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_LIN_Init), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_MultiProcessor_Init), (124 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_Init), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_DeInit), (50 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DeInit), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_MspDeInit), (2 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_Transmit), (174 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout), (88 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_WaitOnFlagUntilTimeout), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_Receive), (172 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_Transmit_IT), (60 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit_IT), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_Receive_IT), (76 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive_IT), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_Transmit_DMA), (120 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit_DMA), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.UART_DMATransmitCplt), (38 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMATransmitCplt), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.UART_DMATxHalfCplt), (6 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMATxHalfCplt), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.UART_DMAError), (84 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMAError), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_Receive_DMA), (144 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive_DMA), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.UART_DMAReceiveCplt), (54 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMAReceiveCplt), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.UART_DMARxHalfCplt), (6 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMARxHalfCplt), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_DMAPause), (94 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAPause), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_DMAResume), (98 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAResume), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_DMAStop), (96 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAStop), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.UART_EndRxTransfer), (26 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_EndRxTransfer), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_Abort), (128 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Abort), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_AbortTransmit), (72 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmit), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_AbortReceive), (80 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceive), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_Abort_IT), (160 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Abort_IT), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.UART_DMATxAbortCallback), (38 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMATxAbortCallback), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.UART_DMARxAbortCallback), (38 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMARxAbortCallback), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_AbortCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_AbortTransmit_IT), (76 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmit_IT), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.UART_DMATxOnlyAbortCallback), (16 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMATxOnlyAbortCallback), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_AbortTransmitCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmitCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_AbortReceive_IT), (84 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceive_IT), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.UART_DMARxOnlyAbortCallback), (16 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMARxOnlyAbortCallback), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_AbortReceiveCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceiveCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_IRQHandler), (360 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.UART_Receive_IT), (120 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_Receive_IT), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.UART_DMAAbortOnError), (12 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMAAbortOnError), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_ErrorCallback), (2 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_ErrorCallback), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_TxCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_TxCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_TxHalfCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_TxHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_RxCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_RxCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_RxHalfCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_RxHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_LIN_SendBreak), (44 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_LIN_SendBreak), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_MultiProcessor_EnterMuteMode), (44 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_EnterMuteMode), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_MultiProcessor_ExitMuteMode), (44 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_ExitMuteMode), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_HalfDuplex_EnableTransmitter), (44 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_EnableTransmitter), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_HalfDuplex_EnableReceiver), (46 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_EnableReceiver), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_GetState), (14 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_GetState), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_GetError), (4 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_GetError), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text), (0 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_DeInit), (4 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DeInit), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_MCOConfig), (148 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_EnableCSS), (12 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableCSS), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_DisableCSS), (12 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DisableCSS), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq), (12 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK2Freq), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetOscConfig), (148 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetOscConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetClockConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler), (28 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_CSSCallback), (2 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_CSSCallback), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text), (0 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig), (304 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKConfig), (64 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq), (76 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKFreq), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_SelectLSEMode), (24 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_SelectLSEMode), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLI2S), (96 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLI2S), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLI2S), (52 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLI2S), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_DeInit), (272 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCC_DeInit), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.text), (0 bytes).
    Removing stm32f4xx_hal_flash.o(.text.HAL_FLASH_Program), (132 bytes).
    Removing stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Program), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.text.FLASH_WaitForLastOperation), (88 bytes).
    Removing stm32f4xx_hal_flash.o(.ARM.exidx.text.FLASH_WaitForLastOperation), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.text.FLASH_Program_Byte), (32 bytes).
    Removing stm32f4xx_hal_flash.o(.ARM.exidx.text.FLASH_Program_Byte), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.text.FLASH_Program_HalfWord), (36 bytes).
    Removing stm32f4xx_hal_flash.o(.ARM.exidx.text.FLASH_Program_HalfWord), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.text.FLASH_Program_Word), (36 bytes).
    Removing stm32f4xx_hal_flash.o(.ARM.exidx.text.FLASH_Program_Word), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.text.FLASH_Program_DoubleWord), (40 bytes).
    Removing stm32f4xx_hal_flash.o(.ARM.exidx.text.FLASH_Program_DoubleWord), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.text.HAL_FLASH_Program_IT), (120 bytes).
    Removing stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Program_IT), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.text.HAL_FLASH_IRQHandler), (200 bytes).
    Removing stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.text.FLASH_SetErrorCode), (136 bytes).
    Removing stm32f4xx_hal_flash.o(.ARM.exidx.text.FLASH_SetErrorCode), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.text.HAL_FLASH_OperationErrorCallback), (2 bytes).
    Removing stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OperationErrorCallback), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.text.HAL_FLASH_EndOfOperationCallback), (2 bytes).
    Removing stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_EndOfOperationCallback), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.text.HAL_FLASH_Unlock), (40 bytes).
    Removing stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Unlock), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.text.HAL_FLASH_Lock), (20 bytes).
    Removing stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Lock), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.text.HAL_FLASH_OB_Unlock), (36 bytes).
    Removing stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Unlock), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.text.HAL_FLASH_OB_Lock), (20 bytes).
    Removing stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Lock), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.text.HAL_FLASH_OB_Launch), (24 bytes).
    Removing stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Launch), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.text.HAL_FLASH_GetError), (12 bytes).
    Removing stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_GetError), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.bss.pFlash), (32 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.text), (0 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase), (168 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_Erase), (8 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.text.FLASH_MassErase), (36 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_MassErase), (8 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.text.FLASH_Erase_Sector), (60 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_Erase_Sector), (8 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.text.FLASH_FlushCaches), (88 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_FlushCaches), (8 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase_IT), (104 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_Erase_IT), (8 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram), (168 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OBProgram), (8 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBGetConfig), (52 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OBGetConfig), (8 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_AdvOBProgram), (60 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_AdvOBProgram), (8 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_AdvOBGetConfig), (12 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_AdvOBGetConfig), (8 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_OB_SelectPCROP), (20 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OB_SelectPCROP), (8 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_OB_DeSelectPCROP), (20 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OB_DeSelectPCROP), (8 bytes).
    Removing stm32f4xx_hal_flash_ramfunc.o(.text), (0 bytes).
    Removing stm32f4xx_hal_flash_ramfunc.o(.RamFunc), (208 bytes).
    Removing stm32f4xx_hal_flash_ramfunc.o(.ARM.exidx.RamFunc), (32 bytes).
    Removing stm32f4xx_hal_gpio.o(.text), (0 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.text.HAL_GPIO_DeInit), (232 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.text.HAL_GPIO_ReadPin), (10 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.text.HAL_GPIO_TogglePin), (14 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.text.HAL_GPIO_LockPin), (40 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler), (20 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback), (2 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback), (8 bytes).
    Removing stm32f4xx_hal_dma_ex.o(.text), (0 bytes).
    Removing stm32f4xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart), (114 bytes).
    Removing stm32f4xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MultiBufferStart), (8 bytes).
    Removing stm32f4xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart_IT), (744 bytes).
    Removing stm32f4xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MultiBufferStart_IT), (8 bytes).
    Removing stm32f4xx_hal_dma_ex.o(.text.HAL_DMAEx_ChangeMemory), (16 bytes).
    Removing stm32f4xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_ChangeMemory), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text), (0 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Init), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.DMA_CalcBaseAndBitshift), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_DeInit), (90 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_DeInit), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_Start), (66 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.DMA_SetConfig), (46 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.DMA_SetConfig), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT), (106 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start_IT), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort), (138 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT), (36 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort_IT), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_PollForTransfer), (314 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_PollForTransfer), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_RegisterCallback), (80 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_RegisterCallback), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_UnRegisterCallback), (106 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_UnRegisterCallback), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_GetState), (6 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetState), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_GetError), (4 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetError), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text), (0 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_DeInit), (24 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DeInit), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess), (12 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess), (12 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_ConfigPVD), (108 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_ConfigPVD), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnablePVD), (12 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnablePVD), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisablePVD), (12 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisablePVD), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableWakeUpPin), (16 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableWakeUpPin), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableWakeUpPin), (16 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableWakeUpPin), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode), (28 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode), (56 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnterSTANDBYMode), (32 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTANDBYMode), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler), (28 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVD_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_PVDCallback), (2 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVDCallback), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableSleepOnExit), (16 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableSleepOnExit), (16 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableSEVOnPend), (16 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableSEVOnPend), (16 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text), (0 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBkUpReg), (52 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableBkUpReg), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBkUpReg), (52 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableBkUpReg), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableFlashPowerDown), (12 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableFlashPowerDown), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableFlashPowerDown), (12 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableFlashPowerDown), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVoltageRange), (16 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetVoltageRange), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling), (176 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ControlVoltageScaling), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableMainRegulatorLowVoltage), (12 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableMainRegulatorLowVoltage), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableMainRegulatorLowVoltage), (12 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableMainRegulatorLowVoltage), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableLowRegulatorLowVoltage), (12 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableLowRegulatorLowVoltage), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableLowRegulatorLowVoltage), (12 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableLowRegulatorLowVoltage), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text), (0 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriorityGrouping), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ), (36 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SystemReset), (4 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_SystemReset), (36 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SystemReset), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Config), (40 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_MPU_Disable), (24 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Disable), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_MPU_Enable), (32 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Enable), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion), (80 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigRegion), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping), (16 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriority), (84 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ), (28 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ), (40 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ), (28 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetActive), (40 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetActive), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig), (24 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler), (4 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Callback), (2 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback), (8 bytes).
    Removing stm32f4xx_hal.o(.text), (0 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_Init), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_InitTick), (64 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_InitTick), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_MspInit), (2 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_MspInit), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DeInit), (44 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DeInit), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_MspDeInit), (2 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_IncTick), (8 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetTick), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetTickPrio), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetTickPrio), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_SetTickFreq), (24 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_SetTickFreq), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetTickFreq), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetTickFreq), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_Delay), (36 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_Delay), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_SuspendTick), (16 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_SuspendTick), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_ResumeTick), (16 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_ResumeTick), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetHalVersion), (8 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetHalVersion), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetREVID), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetREVID), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetDEVID), (16 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetDEVID), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DBGMCU_EnableDBGSleepMode), (16 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGSleepMode), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DBGMCU_DisableDBGSleepMode), (16 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGSleepMode), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DBGMCU_EnableDBGStopMode), (16 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DBGMCU_DisableDBGStopMode), (16 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DBGMCU_EnableDBGStandbyMode), (16 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DBGMCU_DisableDBGStandbyMode), (16 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_EnableCompensationCell), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_EnableCompensationCell), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DisableCompensationCell), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DisableCompensationCell), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetUIDw0), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw0), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetUIDw1), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw1), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetUIDw2), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw2), (8 bytes).
    Removing stm32f4xx_hal_exti.o(.text), (0 bytes).
    Removing stm32f4xx_hal_exti.o(.text.HAL_EXTI_SetConfigLine), (88 bytes).
    Removing stm32f4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_SetConfigLine), (8 bytes).
    Removing stm32f4xx_hal_exti.o(.text.HAL_EXTI_GetConfigLine), (96 bytes).
    Removing stm32f4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetConfigLine), (8 bytes).
    Removing stm32f4xx_hal_exti.o(.text.HAL_EXTI_ClearConfigLine), (44 bytes).
    Removing stm32f4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_ClearConfigLine), (8 bytes).
    Removing stm32f4xx_hal_exti.o(.text.HAL_EXTI_RegisterCallback), (12 bytes).
    Removing stm32f4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_RegisterCallback), (8 bytes).
    Removing stm32f4xx_hal_exti.o(.text.HAL_EXTI_GetHandle), (12 bytes).
    Removing stm32f4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetHandle), (8 bytes).
    Removing stm32f4xx_hal_exti.o(.text.HAL_EXTI_IRQHandler), (24 bytes).
    Removing stm32f4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_exti.o(.text.HAL_EXTI_GetPending), (28 bytes).
    Removing stm32f4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetPending), (8 bytes).
    Removing stm32f4xx_hal_exti.o(.text.HAL_EXTI_ClearPending), (12 bytes).
    Removing stm32f4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_ClearPending), (8 bytes).
    Removing stm32f4xx_hal_exti.o(.text.HAL_EXTI_GenerateSWI), (12 bytes).
    Removing stm32f4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GenerateSWI), (8 bytes).
    Removing system_stm32f4xx.o(.text), (0 bytes).
    Removing system_stm32f4xx.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32f4xx.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing irq_cm4f.o(.constdata), (1 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (56 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (60 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_evflags.o(.text), (0 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsNew), (60 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsNew), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsGetName), (48 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsGetName), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsSet), (112 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsClear), (56 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsClear), (58 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsGet), (36 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsGet), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsGet), (38 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGet), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsWait), (132 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsDelete), (56 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsDelete), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsNew), (128 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsNew), (8 bytes).
    Removing rtx_evflags.o(.text.osRtxEventFlagsPostProcess), (64 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsPostProcess), (8 bytes).
    Removing rtx_evflags.o(.text.EventFlagsCheck), (106 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.EventFlagsCheck), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsGetName), (38 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGetName), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsSet), (152 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsWait), (148 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsDelete), (112 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsDelete), (8 bytes).
    Removing rtx_evr.o(.text), (0 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryInit), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryAlloc), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryFree), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockInit), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockAlloc), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockFree), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialize), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialized), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetInfo), (24 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetInfo), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelInfoRetrieved), (44 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInfoRetrieved), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetState), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStart), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStarted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelLock), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLock), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelLocked), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLocked), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelUnlock), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlock), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelUnlocked), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlocked), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelRestoreLock), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelRestoreLock), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelLockRestored), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLockRestored), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelSuspend), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspend), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelSuspended), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspended), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelResume), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResume), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelResumed), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResumed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetTickCount), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickCount), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetSysTimerCount), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetSysTimerFreq), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadNew), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetName), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetName), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetId), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetState), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetState), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetStackSize), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSize), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetStackSpace), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadSetPriority), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSetPriority), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadPriorityUpdated), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPriorityUpdated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetPriority), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetPriority), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadYield), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadYield), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadSuspend), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspend), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadSuspended), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspended), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadResume), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResume), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadResumed), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResumed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadDetach), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetach), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadDetached), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetached), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadJoin), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoin), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadJoinPending), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoinPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoined), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadBlocked), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadUnblocked), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPreempted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSwitched), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadExit), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadTerminate), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadTerminate), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetCount), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadEnumerate), (24 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadEnumerate), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsError), (12 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsSet), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSet), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsSetDone), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSetDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsClear), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClear), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsClearDone), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClearDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsGet), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsGet), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsWait), (24 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWait), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending), (24 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitNotCompleted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelay), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxDelayUntil), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntil), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayStarted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxDelayUntilStarted), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntilStarted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerError), (12 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCallback), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerNew), (24 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerCreated), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerGetName), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStart), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStart), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStarted), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStarted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStop), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStop), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStopped), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStopped), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerIsRunning), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerIsRunning), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerDelete), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerDestroyed), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsError), (12 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsNew), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsCreated), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsGetName), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsSet), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSet), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsSetDone), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSetDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsClear), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClear), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsClearDone), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClearDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsGet), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGet), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWait), (24 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWait), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWaitPending), (24 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitTimeout), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted), (24 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted), (24 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitNotCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsDelete), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsDestroyed), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDestroyed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNew), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexGetName), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetName), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquire), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquirePending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquireTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquired), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNotAcquired), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexRelease), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexReleased), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexGetOwner), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetOwner), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDelete), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDestroyed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNew), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreGetName), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetName), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquire), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquirePending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquireTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquired), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNotAcquired), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreRelease), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreReleased), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreGetCount), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreDelete), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreDestroyed), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolError), (12 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolNew), (24 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolCreated), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetName), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAlloc), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocTimeout), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAllocated), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocFailed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolFree), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFree), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDeallocated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFreeFailed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetCount), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolDelete), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDestroyed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNew), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetName), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetName), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePut), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInsertPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInserted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotInserted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGet), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueRetrieved), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotRetrieved), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetCount), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetSpace), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueReset), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueReset), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueResetDone), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueResetDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueDelete), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueDestroyed), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDestroyed), (8 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (72 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (64 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (52 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (52 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (56 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (52 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickCount), (20 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (16 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (56 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (56 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (64 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (96 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (144 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_lib.o(.text), (0 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._platform_post_stackheap_init), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.__user_perthread_libspace), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.os_kernel_is_active), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_initialize), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_acquire), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_release), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_free), (8 bytes).
    Removing rtx_lib.o(.data.irqRtxLibRef), (4 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (68 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (104 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (112 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (38 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (38 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (38 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (46 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (56 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (296 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (38 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (104 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (106 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (128 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (38 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (38 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (38 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (46 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (56 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (56 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (38 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (198 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (128 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (48 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (48 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (38 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (42 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_semaphore.o(.text), (0 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreNew), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreGetName), (48 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetName), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreGetCount), (36 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetCount), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreGetCount), (38 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetCount), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreDelete), (56 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreDelete), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreNew), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphorePostProcess), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreGetName), (38 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetName), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreDelete), (112 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (48 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (48 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (44 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (44 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (60 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (48 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadYield), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (44 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (44 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsSet), (128 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (44 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsWait), (64 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (38 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (38 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (76 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (98 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadYield), (60 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (156 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (80 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (88 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (136 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (216 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (68 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (96 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsSet), (144 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (80 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsWait), (148 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (72 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (48 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (60 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (56 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (44 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (56 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerInsert), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (160 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (38 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (96 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.TimerRemove), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerRemove), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (68 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (34 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (92 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (48 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing rtx_config.o(.text), (0 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxIdleThread), (8 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxErrorNotify), (8 bytes).
    Removing eventrecorder.o(.text), (0 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderTimerSetup), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetFreq), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetCount), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderInitialize), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderEnable), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventGetTS), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecordItem), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderStart), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderDisable), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderStop), (44 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderStop), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderClockUpdate), (40 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderClockUpdate), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecordData), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventCheckFilter), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecord2), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecord4), (8 bytes).
    Removing retarget_io.o(.text), (0 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_open), (8 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_close), (8 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_write), (8 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_read), (8 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_istty), (8 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_seek), (8 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_flen), (8 bytes).
    Removing fs_config.o(.text), (0 bytes).
    Removing fs_config.o(.text.fs_mutex_new), (4 bytes).
    Removing fs_config.o(.ARM.exidx.text.fs_mutex_new), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.fs_mutex_acquire), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.fs_mutex_release), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.fs_mutex_delete), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.fs_get_rtos_tick_freq), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.fs_set_rtos_delay), (8 bytes).
    Removing fs_config.o(.text.fs_get_sys_tick), (4 bytes).
    Removing fs_config.o(.ARM.exidx.text.fs_get_sys_tick), (8 bytes).
    Removing fs_config.o(.text.fs_get_sys_tick_us), (28 bytes).
    Removing fs_config.o(.ARM.exidx.text.fs_get_sys_tick_us), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.fs_config), (8 bytes).
    Removing fs_config.o(.text.fdelete), (4 bytes).
    Removing fs_config.o(.ARM.exidx.text.fdelete), (8 bytes).
    Removing fs_config.o(.text.$Sub$$fflush), (24 bytes).
    Removing fs_config.o(.ARM.exidx.text.$Sub$$fflush), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.fat_handle_get), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.fat_init), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.fat_uninit), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.fat_mount), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.fat_unmount), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.fat_open), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.fat_close), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.fat_read), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.fat_write), (8 bytes).
    Removing fs_config.o(.text.fat_flush), (6 bytes).
    Removing fs_config.o(.ARM.exidx.text.fat_flush), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.fat_flen), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.fat_seek), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.fat_ffind), (8 bytes).
    Removing fs_config.o(.text.fat_delete_l), (4 bytes).
    Removing fs_config.o(.ARM.exidx.text.fat_delete_l), (8 bytes).
    Removing fs_config.o(.text.fat_delete), (4 bytes).
    Removing fs_config.o(.ARM.exidx.text.fat_delete), (8 bytes).
    Removing fs_config.o(.text.fat_rename), (4 bytes).
    Removing fs_config.o(.ARM.exidx.text.fat_rename), (8 bytes).
    Removing fs_config.o(.text.fat_format), (4 bytes).
    Removing fs_config.o(.ARM.exidx.text.fat_format), (8 bytes).
    Removing fs_config.o(.text.fat_free), (10 bytes).
    Removing fs_config.o(.ARM.exidx.text.fat_free), (8 bytes).
    Removing fs_config.o(.text.fat_attrib), (4 bytes).
    Removing fs_config.o(.ARM.exidx.text.fat_attrib), (8 bytes).
    Removing fs_config.o(.text.fat_vol), (4 bytes).
    Removing fs_config.o(.ARM.exidx.text.fat_vol), (8 bytes).
    Removing fs_config.o(.text.fat_pwd), (4 bytes).
    Removing fs_config.o(.ARM.exidx.text.fat_pwd), (8 bytes).
    Removing fs_config.o(.text.fat_media), (4 bytes).
    Removing fs_config.o(.ARM.exidx.text.fat_media), (8 bytes).
    Removing fs_config.o(.text.fat_info), (4 bytes).
    Removing fs_config.o(.ARM.exidx.text.fat_info), (8 bytes).
    Removing fs_config.o(.text.fat_chdir), (4 bytes).
    Removing fs_config.o(.ARM.exidx.text.fat_chdir), (8 bytes).
    Removing fs_config.o(.text.fat_mkdir), (4 bytes).
    Removing fs_config.o(.ARM.exidx.text.fat_mkdir), (8 bytes).
    Removing fs_config.o(.text.fat_rmdir), (4 bytes).
    Removing fs_config.o(.ARM.exidx.text.fat_rmdir), (8 bytes).
    Removing fs_config.o(.text.fat_jour_init), (4 bytes).
    Removing fs_config.o(.ARM.exidx.text.fat_jour_init), (8 bytes).
    Removing fs_config.o(.text.elink_init), (4 bytes).
    Removing fs_config.o(.ARM.exidx.text.elink_init), (8 bytes).
    Removing fs_config.o(.text.elink_dir), (4 bytes).
    Removing fs_config.o(.ARM.exidx.text.elink_dir), (8 bytes).
    Removing fs_config.o(.text.elink_cmd), (4 bytes).
    Removing fs_config.o(.ARM.exidx.text.elink_cmd), (8 bytes).
    Removing fs_config.o(.text.elink_insert), (4 bytes).
    Removing fs_config.o(.ARM.exidx.text.elink_insert), (8 bytes).
    Removing fs_config.o(.text.elink_delete), (4 bytes).
    Removing fs_config.o(.ARM.exidx.text.elink_delete), (8 bytes).
    Removing fs_config.o(.text.elink_scan), (4 bytes).
    Removing fs_config.o(.ARM.exidx.text.elink_scan), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.NOR0_DriverEvent), (8 bytes).
    Removing fs_debug.o(.text), (0 bytes).
    Removing fs_debug.o(.ARM.exidx.text.fs_config_evr), (8 bytes).
    Removing fs_efs.o(.rev16_text), (4 bytes).
    Removing fs_efs.o(.revsh_text), (4 bytes).
    Removing fs_efs.o(.rrx_text), (6 bytes).
    Removing fs_efs.o(i.chip_erase), (128 bytes).
    Removing fs_efs.o(i.ed_alloc_block), (88 bytes).
    Removing fs_efs.o(i.ed_copy), (272 bytes).
    Removing fs_efs.o(i.ed_delete), (152 bytes).
    Removing fs_efs.o(i.ed_get_next), (158 bytes).
    Removing fs_efs.o(i.ed_write), (140 bytes).
    Removing fs_efs.o(i.efs_analyse), (144 bytes).
    Removing fs_efs.o(i.efs_check), (200 bytes).
    Removing fs_efs.o(i.efs_defrag), (328 bytes).
    Removing fs_efs.o(i.efs_delete), (88 bytes).
    Removing fs_efs.o(i.efs_flush), (144 bytes).
    Removing fs_efs.o(i.efs_format), (152 bytes).
    Removing fs_efs.o(i.efs_free), (88 bytes).
    Removing fs_efs.o(i.efs_info), (36 bytes).
    Removing fs_efs.o(i.efs_rename), (228 bytes).
    Removing fs_efs.o(.bss), (256 bytes).
    Removing fs_mapi.o(.rev16_text), (4 bytes).
    Removing fs_mapi.o(.revsh_text), (4 bytes).
    Removing fs_mapi.o(.rrx_text), (6 bytes).
    Removing fs_mapi.o(i._fdelete), (108 bytes).
    Removing fs_mapi.o(i._fdelete_legacy), (104 bytes).
    Removing fs_mapi.o(i.fanalyse), (88 bytes).
    Removing fs_mapi.o(i.fattrib), (176 bytes).
    Removing fs_mapi.o(i.fchdir), (88 bytes).
    Removing fs_mapi.o(i.fchdrive), (52 bytes).
    Removing fs_mapi.o(i.fcheck), (88 bytes).
    Removing fs_mapi.o(i.fdefrag), (88 bytes).
    Removing fs_mapi.o(i.fformat), (104 bytes).
    Removing fs_mapi.o(i.ffree), (104 bytes).
    Removing fs_mapi.o(i.finfo), (108 bytes).
    Removing fs_mapi.o(i.fmedia), (88 bytes).
    Removing fs_mapi.o(i.fmkdir), (88 bytes).
    Removing fs_mapi.o(i.fpwd), (104 bytes).
    Removing fs_mapi.o(i.frename), (108 bytes).
    Removing fs_mapi.o(i.frmdir), (92 bytes).
    Removing fs_mapi.o(i.fs_config_evr), (2 bytes).
    Removing fs_mapi.o(i.fvol), (104 bytes).
    Removing fs_sys.o(.rev16_text), (4 bytes).
    Removing fs_sys.o(.revsh_text), (4 bytes).
    Removing fs_sys.o(.rrx_text), (6 bytes).
    Removing fs_sys.o(.emb_text), (0 bytes).
    Removing fs_sys.o(i.__sys_ensure), (104 bytes).
    Removing fs_common.o(.rev16_text), (4 bytes).
    Removing fs_common.o(.revsh_text), (4 bytes).
    Removing fs_common.o(.rrx_text), (6 bytes).
    Removing fs_common.o(i.get_u16), (16 bytes).
    Removing fs_common.o(i.set_u16), (8 bytes).
    Removing fs_common.o(i.set_u32), (16 bytes).
    Removing fs_version.o(.emb_text), (0 bytes).
    Removing fs_version.o(.ARM.RL_ARM1), (82 bytes).
    Removing fs_version.o(.ARM.RL_ARM2), (76 bytes).
    Removing fs_version.o(.ARM.RL_ARM3), (45 bytes).
    Removing fs_version.o(.ARM.RL_ARM4), (65 bytes).
    Removing fs_version.o(.ARM.RL_ARM5), (82 bytes).
    Removing fs_version.o(.ARM.RL_ARM6), (77 bytes).

1750 unused section(s) (total 51660 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/dczerorl.s                 0x00000000   Number         0  __dczerorl.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor_twolibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_ctype_table.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_locale.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_locale_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_locale_twolibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr_twolibspace.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/assert.c                         0x00000000   Number         0  assert_stdio.o ABSOLUTE
    ../clib/bigflt.c                         0x00000000   Number         0  bigflt0.o ABSOLUTE
    ../clib/btod.s                           0x00000000   Number         0  btod.o ABSOLUTE
    ../clib/btod_accurate.c                  0x00000000   Number         0  btod_accurate.o ABSOLUTE
    ../clib/btod_accurate.c                  0x00000000   Number         0  btod_accurate_common.o ABSOLUTE
    ../clib/ctype.c                          0x00000000   Number         0  isspace.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_alloc.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_alloc_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_init.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_free.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_init_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_free_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_extend.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_extend_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_final.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_final_threads.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  heap2.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  heap2_threads.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  fdtree.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  malloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hguard.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  init_alloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  free.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  heapstubs.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  term_alloc.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxa.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/locale.c                         0x00000000   Number         0  _c16rtomb.o ABSOLUTE
    ../clib/locale.s                         0x00000000   Number         0  lc_numeric_c.o ABSOLUTE
    ../clib/locale.s                         0x00000000   Number         0  lc_ctype_c.o ABSOLUTE
    ../clib/longlong.s                       0x00000000   Number         0  lludivv7m.o ABSOLUTE
    ../clib/longlong.s                       0x00000000   Number         0  lludiv10.o ABSOLUTE
    ../clib/longlong.s                       0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/maybe.s                          0x00000000   Number         0  maybetermalloc1.o ABSOLUTE
    ../clib/maybe.s                          0x00000000   Number         0  maybetermalloc2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  strcmpv7em.o ABSOLUTE
    ../clib/misc.s                           0x00000000   Number         0  printf_stubs.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  vsnprintf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_pad.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_truncate.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_str.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_dec.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_charcount.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char_common.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _sputc.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _snputc.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_wctomb.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_longlong_dec.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_oct_ll.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_oct_int.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_oct_int_ll.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_ll.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_int.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_int_ll.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_ptr.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_int_ptr.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_ll_ptr.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_int_ll_ptr.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_intcommon.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_fp_dec.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_fp_dec_accurate.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_fp_hex.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_nopercent.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_wchar.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_fp_infnan.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_c.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_s.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_n.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_x.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_p.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_o.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_i.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_d.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_u.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_f.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_e.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_g.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_a.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_lli.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_lld.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_llu.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_ll.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_l.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_lc.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_ls.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_llo.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_llx.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent_end.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  __0fscanf.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  __0sscanf.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  _scanf_str.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  scanf_char.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  _sgetc.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  scanf_char_file.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  _scanf.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  scanf_char_file_locked.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fflush.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fwrite.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fopen.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fclose.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fclose_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fflush_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fopen_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fputc.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fseek.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  stdio.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  streamlock.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  stdio_streams.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fputc_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  backspace.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fgetc.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  flsbuf.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  ftell.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  initio.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fgetc_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  backspace_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  initio_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  filbuf.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  setvbuf.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  ungetc.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fwritefast.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  setvbuf_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fwritefast_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fputs.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  freadfast.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fread_bytes_avail.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  flushlinebuffered.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fputs_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  freadfast_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fread_bytes_avail_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  flushlinebuffered_locked.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strlen.o ABSOLUTE
    ../clib/wchar.c                          0x00000000   Number         0  flsbuf_fwide.o ABSOLUTE
    ../clib/wchar.c                          0x00000000   Number         0  filbuf_fwide.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/istatus.s                       0x00000000   Number         0  istatus.o ABSOLUTE
    ../fplib/printf1.s                       0x00000000   Number         0  printf1.o ABSOLUTE
    ../fplib/printf2.s                       0x00000000   Number         0  printf2.o ABSOLUTE
    ../fplib/printf2a.s                      0x00000000   Number         0  printf2a.o ABSOLUTE
    ../fplib/printf2b.s                      0x00000000   Number         0  printf2b.o ABSOLUTE
    ../fplib/usenofp.s                       0x00000000   Number         0  usenofp.o ABSOLUTE
    ../mathlib/fpclassify.c                  0x00000000   Number         0  fpclassify.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.6.0\CMSIS\RTOS2\RTX\Source\ARM\irq_cm4f.s 0x00000000   Number         0  irq_cm4f.o ABSOLUTE
    Driver_Flash.c                           0x00000000   Number         0  driver_flash.o ABSOLUTE
    EventRecorder.c                          0x00000000   Number         0  eventrecorder.o ABSOLUTE
    FS_Config.c                              0x00000000   Number         0  fs_config.o ABSOLUTE
    FS_Debug.c                               0x00000000   Number         0  fs_debug.o ABSOLUTE
    RL_ARM.s                                 0x00000000   Number         0  fs_efs.o ABSOLUTE
    RL_ARM.s                                 0x00000000   Number         0  fs_mapi.o ABSOLUTE
    RL_ARM.s                                 0x00000000   Number         0  fs_sys.o ABSOLUTE
    RL_ARM.s                                 0x00000000   Number         0  fs_common.o ABSOLUTE
    RL_ARM.s                                 0x00000000   Number         0  fs_version.o ABSOLUTE
    RTX_Config.c                             0x00000000   Number         0  rtx_config.o ABSOLUTE
    SRC\\fs_common.c                         0x00000000   Number         0  fs_common.o ABSOLUTE
    SRC\\fs_efs.c                            0x00000000   Number         0  fs_efs.o ABSOLUTE
    SRC\\fs_mapi.c                           0x00000000   Number         0  fs_mapi.o ABSOLUTE
    SRC\\fs_sys.c                            0x00000000   Number         0  fs_sys.o ABSOLUTE
    SRC\\fs_version.c                        0x00000000   Number         0  fs_version.o ABSOLUTE
    SRC\fs_common.c                          0x00000000   Number         0  fs_common.o ABSOLUTE
    SRC\fs_efs.c                             0x00000000   Number         0  fs_efs.o ABSOLUTE
    SRC\fs_mapi.c                            0x00000000   Number         0  fs_mapi.o ABSOLUTE
    SRC\fs_sys.c                             0x00000000   Number         0  fs_sys.o ABSOLUTE
    SRC\fs_version.c                         0x00000000   Number         0  fs_version.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    dma.c                                    0x00000000   Number         0  dma.o ABSOLUTE
    gpio.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    osMain.c                                 0x00000000   Number         0  osmain.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    retarget_io.c                            0x00000000   Number         0  retarget_io.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_evflags.c                            0x00000000   Number         0  rtx_evflags.o ABSOLUTE
    rtx_evr.c                                0x00000000   Number         0  rtx_evr.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_lib.c                                0x00000000   Number         0  rtx_lib.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_semaphore.c                          0x00000000   Number         0  rtx_semaphore.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    serial.c                                 0x00000000   Number         0  serial.o ABSOLUTE
    shell.c                                  0x00000000   Number         0  shell.o ABSOLUTE
    spi.c                                    0x00000000   Number         0  spi.o ABSOLUTE
    startup_stm32f411xe.s                    0x00000000   Number         0  startup_stm32f411xe.o ABSOLUTE
    stm32f4xx_hal.c                          0x00000000   Number         0  stm32f4xx_hal.o ABSOLUTE
    stm32f4xx_hal_cortex.c                   0x00000000   Number         0  stm32f4xx_hal_cortex.o ABSOLUTE
    stm32f4xx_hal_dma.c                      0x00000000   Number         0  stm32f4xx_hal_dma.o ABSOLUTE
    stm32f4xx_hal_dma_ex.c                   0x00000000   Number         0  stm32f4xx_hal_dma_ex.o ABSOLUTE
    stm32f4xx_hal_exti.c                     0x00000000   Number         0  stm32f4xx_hal_exti.o ABSOLUTE
    stm32f4xx_hal_flash.c                    0x00000000   Number         0  stm32f4xx_hal_flash.o ABSOLUTE
    stm32f4xx_hal_flash_ex.c                 0x00000000   Number         0  stm32f4xx_hal_flash_ex.o ABSOLUTE
    stm32f4xx_hal_flash_ramfunc.c            0x00000000   Number         0  stm32f4xx_hal_flash_ramfunc.o ABSOLUTE
    stm32f4xx_hal_gpio.c                     0x00000000   Number         0  stm32f4xx_hal_gpio.o ABSOLUTE
    stm32f4xx_hal_msp.c                      0x00000000   Number         0  stm32f4xx_hal_msp.o ABSOLUTE
    stm32f4xx_hal_pwr.c                      0x00000000   Number         0  stm32f4xx_hal_pwr.o ABSOLUTE
    stm32f4xx_hal_pwr_ex.c                   0x00000000   Number         0  stm32f4xx_hal_pwr_ex.o ABSOLUTE
    stm32f4xx_hal_rcc.c                      0x00000000   Number         0  stm32f4xx_hal_rcc.o ABSOLUTE
    stm32f4xx_hal_rcc_ex.c                   0x00000000   Number         0  stm32f4xx_hal_rcc_ex.o ABSOLUTE
    stm32f4xx_hal_spi.c                      0x00000000   Number         0  stm32f4xx_hal_spi.o ABSOLUTE
    stm32f4xx_hal_tim.c                      0x00000000   Number         0  stm32f4xx_hal_tim.o ABSOLUTE
    stm32f4xx_hal_tim_ex.c                   0x00000000   Number         0  stm32f4xx_hal_tim_ex.o ABSOLUTE
    stm32f4xx_hal_timebase_tim.c             0x00000000   Number         0  stm32f4xx_hal_timebase_tim.o ABSOLUTE
    stm32f4xx_hal_uart.c                     0x00000000   Number         0  stm32f4xx_hal_uart.o ABSOLUTE
    stm32f4xx_it.c                           0x00000000   Number         0  stm32f4xx_it.o ABSOLUTE
    system_stm32f4xx.c                       0x00000000   Number         0  system_stm32f4xx.o ABSOLUTE
    usart.c                                  0x00000000   Number         0  usart.o ABSOLUTE
    w25qxx.c                                 0x00000000   Number         0  w25qxx.o ABSOLUTE
    RESET                                    0x08000000   Section      408  startup_stm32f411xe.o(RESET)
    !!!main                                  0x08000198   Section        8  __main.o(!!!main)
    !!!scatter                               0x080001a0   Section       52  __scatter.o(!!!scatter)
    !!dczerorl                               0x080001d4   Section       58  __dczerorl.o(!!dczerorl)
    !!handler_zi                             0x08000210   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$_printf_percent$$00000000  0x0800022c   Section        0  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    .ARM.Collect$$_printf_percent$$00000001  0x0800022c   Section        6  _printf_n.o(.ARM.Collect$$_printf_percent$$00000001)
    .ARM.Collect$$_printf_percent$$00000002  0x08000232   Section        6  _printf_p.o(.ARM.Collect$$_printf_percent$$00000002)
    .ARM.Collect$$_printf_percent$$00000003  0x08000238   Section        6  _printf_f.o(.ARM.Collect$$_printf_percent$$00000003)
    .ARM.Collect$$_printf_percent$$00000004  0x0800023e   Section        6  _printf_e.o(.ARM.Collect$$_printf_percent$$00000004)
    .ARM.Collect$$_printf_percent$$00000005  0x08000244   Section        6  _printf_g.o(.ARM.Collect$$_printf_percent$$00000005)
    .ARM.Collect$$_printf_percent$$00000006  0x0800024a   Section        6  _printf_a.o(.ARM.Collect$$_printf_percent$$00000006)
    .ARM.Collect$$_printf_percent$$00000007  0x08000250   Section       10  _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007)
    .ARM.Collect$$_printf_percent$$00000008  0x0800025a   Section        6  _printf_i.o(.ARM.Collect$$_printf_percent$$00000008)
    .ARM.Collect$$_printf_percent$$00000009  0x08000260   Section        6  _printf_d.o(.ARM.Collect$$_printf_percent$$00000009)
    .ARM.Collect$$_printf_percent$$0000000A  0x08000266   Section        6  _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A)
    .ARM.Collect$$_printf_percent$$0000000B  0x0800026c   Section        6  _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B)
    .ARM.Collect$$_printf_percent$$0000000C  0x08000272   Section        6  _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C)
    .ARM.Collect$$_printf_percent$$0000000D  0x08000278   Section        6  _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D)
    .ARM.Collect$$_printf_percent$$0000000E  0x0800027e   Section        6  _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E)
    .ARM.Collect$$_printf_percent$$0000000F  0x08000284   Section        6  _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F)
    .ARM.Collect$$_printf_percent$$00000010  0x0800028a   Section        6  _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010)
    .ARM.Collect$$_printf_percent$$00000011  0x08000290   Section        6  _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011)
    .ARM.Collect$$_printf_percent$$00000012  0x08000296   Section       10  _printf_l.o(.ARM.Collect$$_printf_percent$$00000012)
    .ARM.Collect$$_printf_percent$$00000013  0x080002a0   Section        6  _printf_c.o(.ARM.Collect$$_printf_percent$$00000013)
    .ARM.Collect$$_printf_percent$$00000014  0x080002a6   Section        6  _printf_s.o(.ARM.Collect$$_printf_percent$$00000014)
    .ARM.Collect$$_printf_percent$$00000015  0x080002ac   Section        6  _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015)
    .ARM.Collect$$_printf_percent$$00000016  0x080002b2   Section        6  _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016)
    .ARM.Collect$$_printf_percent$$00000017  0x080002b8   Section        4  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    .ARM.Collect$$libinit$$00000000          0x080002bc   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x080002be   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x080002c2   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000005          0x080002c2   Section        8  libinit2.o(.ARM.Collect$$libinit$$00000005)
    .ARM.Collect$$libinit$$0000000A          0x080002ca   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x080002ca   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x080002ca   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$0000000F          0x080002ca   Section        6  libinit2.o(.ARM.Collect$$libinit$$0000000F)
    .ARM.Collect$$libinit$$00000011          0x080002d0   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000012          0x080002d0   Section       12  libinit2.o(.ARM.Collect$$libinit$$00000012)
    .ARM.Collect$$libinit$$00000013          0x080002dc   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x080002dc   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000016          0x080002dc   Section       10  libinit2.o(.ARM.Collect$$libinit$$00000016)
    .ARM.Collect$$libinit$$00000017          0x080002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x080002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x080002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x080002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x080002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x080002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x080002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000024          0x080002e6   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000024)
    .ARM.Collect$$libinit$$00000025          0x080002ea   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x080002ea   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x080002ea   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x080002ea   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x080002ea   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x080002ea   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x080002ec   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x080002ee   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000003      0x080002ee   Section        4  libshutdown2.o(.ARM.Collect$$libshutdown$$00000003)
    .ARM.Collect$$libshutdown$$00000004      0x080002f2   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x080002f2   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x080002f2   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x080002f2   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000D      0x080002f2   Section        4  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D)
    .ARM.Collect$$libshutdown$$0000000F      0x080002f6   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x080002f6   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x080002f8   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x080002f8   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x080002f8   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x080002fe   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x08000306   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x0800030a   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x0800030a   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x08000312   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x08000314   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x08000314   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x08000318   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    $v0                                      0x08000320   Number         0  startup_stm32f411xe.o(.text)
    .text                                    0x08000320   Section       64  startup_stm32f411xe.o(.text)
    $v0                                      0x08000360   Number         0  irq_cm4f.o(.text)
    .text                                    0x08000360   Section      196  irq_cm4f.o(.text)
    AlignUp                                  0x08000425   Thumb Code    10  h1_alloc_threads.o(.text)
    .text                                    0x08000424   Section        0  h1_alloc_threads.o(.text)
    Heap1_SizeAdjust                         0x0800042f   Thumb Code     6  h1_alloc_threads.o(.text)
    .text                                    0x080004ca   Section      238  lludivv7m.o(.text)
    .text                                    0x080005b8   Section        0  vsnprintf.o(.text)
    .text                                    0x080005ec   Section        0  __0fscanf.o(.text)
    .text                                    0x08000604   Section        0  __0sscanf.o(.text)
    .text                                    0x08000640   Section        0  _scanf_str.o(.text)
    .text                                    0x08000720   Section        0  fclose.o(.text)
    .text                                    0x0800076c   Section        0  fclose_locked.o(.text)
    .text                                    0x080007a0   Section        0  fflush_locked.o(.text)
    _freopen_locked                          0x08000831   Thumb Code   174  fopen_locked.o(.text)
    .text                                    0x08000830   Section        0  fopen_locked.o(.text)
    .text                                    0x08000974   Section        0  strlen.o(.text)
    .text                                    0x080009b2   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x08000a3c   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x08000aa0   Section       68  rt_memclr.o(.text)
    .text                                    0x08000ae4   Section       78  rt_memclr_w.o(.text)
    .text                                    0x08000b38   Section      124  strcmpv7em.o(.text)
    .text                                    0x08000bb4   Section        0  heapauxi.o(.text)
    .text                                    0x08000bba   Section       10  rt_heap_descriptor_twolibspace.o(.text)
    .text                                    0x08000bc4   Section        0  hguard.o(.text)
    .text                                    0x08000bc8   Section        0  init_alloc.o(.text)
    .text                                    0x08000c52   Section        0  h1_init_threads.o(.text)
    .text                                    0x08000c64   Section        0  h1_free_threads.o(.text)
    .text                                    0x08000cda   Section        0  _printf_pad.o(.text)
    .text                                    0x08000d28   Section        0  _printf_truncate.o(.text)
    .text                                    0x08000d4c   Section        0  _printf_str.o(.text)
    .text                                    0x08000da0   Section        0  _printf_dec.o(.text)
    .text                                    0x08000e18   Section        0  _printf_charcount.o(.text)
    _printf_input_char                       0x08000e41   Thumb Code    10  _printf_char_common.o(.text)
    .text                                    0x08000e40   Section        0  _printf_char_common.o(.text)
    .text                                    0x08000e70   Section        0  _sputc.o(.text)
    .text                                    0x08000e7a   Section        0  _snputc.o(.text)
    .text                                    0x08000e8c   Section        0  _printf_wctomb.o(.text)
    .text                                    0x08000f48   Section        0  _printf_longlong_dec.o(.text)
    _printf_longlong_oct_internal            0x08000fc5   Thumb Code     0  _printf_oct_int_ll.o(.text)
    .text                                    0x08000fc4   Section        0  _printf_oct_int_ll.o(.text)
    _printf_hex_common                       0x08001035   Thumb Code     0  _printf_hex_int_ll_ptr.o(.text)
    .text                                    0x08001034   Section        0  _printf_hex_int_ll_ptr.o(.text)
    .text                                    0x080010c8   Section        0  __printf_flags_ss_wp.o(.text)
    _scanf_char_input                        0x08001251   Thumb Code    12  scanf_char.o(.text)
    .text                                    0x08001250   Section        0  scanf_char.o(.text)
    .text                                    0x0800127c   Section        0  _sgetc.o(.text)
    .text                                    0x080012bc   Section        0  fseek.o(.text)
    .text                                    0x080013b4   Section        0  stdio.o(.text)
    .text                                    0x080014a4   Section        8  libspace.o(.text)
    AlignUpOffset                            0x080014ad   Thumb Code    14  h1_extend_threads.o(.text)
    .text                                    0x080014ac   Section        0  maybetermalloc2.o(.text)
    .text                                    0x080014ac   Section        0  h1_extend_threads.o(.text)
    .text                                    0x080014fe   Section      138  lludiv10.o(.text)
    .text                                    0x08001588   Section        0  isspace.o(.text)
    .text                                    0x0800159a   Section        0  _printf_intcommon.o(.text)
    _fp_digits                               0x0800164d   Thumb Code   432  _printf_fp_dec.o(.text)
    .text                                    0x0800164c   Section        0  _printf_fp_dec.o(.text)
    .text                                    0x08001a68   Section        0  _printf_fp_hex.o(.text)
    .text                                    0x08001d64   Section        0  _printf_char.o(.text)
    .text                                    0x08001d90   Section        0  _printf_wchar.o(.text)
    .text                                    0x08001dbc   Section        0  _scanf.o(.text)
    .text                                    0x08002130   Section        0  backspace.o(.text)
    .text                                    0x08002178   Section        0  flsbuf.o(.text)
    .text                                    0x0800234e   Section        0  ftell.o(.text)
    .text                                    0x08002390   Section        0  initio_locked.o(.text)
    .text                                    0x08002558   Section        0  _c16rtomb.o(.text)
    .text                                    0x080025a0   Section        0  defsig_rtmem_outer.o(.text)
    .text                                    0x080025ae   Section        2  use_no_semi.o(.text)
    .text                                    0x080025b0   Section        0  indicate_semi.o(.text)
    .text                                    0x080025b0   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x080025fc   Section       16  rt_ctype_table.o(.text)
    .text                                    0x0800260c   Section       10  rt_locale_twolibspace.o(.text)
    .text                                    0x08002616   Section        4  rt_errno_addr_twolibspace.o(.text)
    .text                                    0x0800261a   Section        0  term_alloc.o(.text)
    .text                                    0x0800262c   Section        0  _printf_fp_infnan.o(.text)
    .text                                    0x080026ac   Section        0  bigflt0.o(.text)
    .text                                    0x08002790   Section        0  filbuf.o(.text)
    .text                                    0x080029cc   Section        0  ungetc.o(.text)
    .text                                    0x08002a14   Section        0  setvbuf_locked.o(.text)
    .text                                    0x08002a7c   Section        0  fwritefast_locked.o(.text)
    .text                                    0x08002b4c   Section        0  exit.o(.text)
    .text                                    0x08002b5e   Section        0  defsig_exit.o(.text)
    .text                                    0x08002b68   Section        0  defsig_rtred_outer.o(.text)
    .text                                    0x08002b78   Section        0  defsig_rtmem_inner.o(.text)
    .text                                    0x08002bc8   Section        0  sys_exit.o(.text)
    .text                                    0x08002bd4   Section        0  h1_final_threads.o(.text)
    .text                                    0x08002be0   Section        0  scanf_char_file_locked.o(.text)
    .text                                    0x08002c20   Section        0  flushlinebuffered_locked.o(.text)
    .text                                    0x08002c7c   Section        0  defsig_general.o(.text)
    .text                                    0x08002cb0   Section        0  defsig_rtred_inner.o(.text)
    .text                                    0x08002ce4   Section        0  sys_wrch.o(.text)
    [Anonymous Symbol]                       0x08002cf2   Section        0  driver_flash.o(.text.ARM_Flash_EraseChip)
    [Anonymous Symbol]                       0x08002cfc   Section        0  driver_flash.o(.text.ARM_Flash_EraseSector)
    __arm_cp.7_0                             0x08002d2c   Number         4  driver_flash.o(.text.ARM_Flash_EraseSector)
    [Anonymous Symbol]                       0x08002d34   Section        0  driver_flash.o(.text.ARM_Flash_GetCapabilities)
    [Anonymous Symbol]                       0x08002d38   Section        0  driver_flash.o(.text.ARM_Flash_GetInfo)
    __arm_cp.10_0                            0x08002d3c   Number         4  driver_flash.o(.text.ARM_Flash_GetInfo)
    [Anonymous Symbol]                       0x08002d40   Section        0  driver_flash.o(.text.ARM_Flash_GetStatus)
    [Anonymous Symbol]                       0x08002d4c   Section        0  driver_flash.o(.text.ARM_Flash_GetVersion)
    __arm_cp.0_0                             0x08002d50   Number         4  driver_flash.o(.text.ARM_Flash_GetVersion)
    [Anonymous Symbol]                       0x08002d54   Section        0  driver_flash.o(.text.ARM_Flash_Initialize)
    __arm_cp.2_0                             0x08002d74   Number         4  driver_flash.o(.text.ARM_Flash_Initialize)
    [Anonymous Symbol]                       0x08002d78   Section        0  driver_flash.o(.text.ARM_Flash_PowerControl)
    [Anonymous Symbol]                       0x08002d86   Section        0  driver_flash.o(.text.ARM_Flash_ProgramData)
    [Anonymous Symbol]                       0x08002da6   Section        0  driver_flash.o(.text.ARM_Flash_ReadData)
    [Anonymous Symbol]                       0x08002db6   Section        0  driver_flash.o(.text.ARM_Flash_Uninitialize)
    [Anonymous Symbol]                       0x08002dba   Section        0  stm32f4xx_it.o(.text.BusFault_Handler)
    [Anonymous Symbol]                       0x08002dbc   Section        0  stm32f4xx_it.o(.text.DMA2_Stream2_IRQHandler)
    __arm_cp.7_0                             0x08002dc4   Number         4  stm32f4xx_it.o(.text.DMA2_Stream2_IRQHandler)
    [Anonymous Symbol]                       0x08002dc8   Section        0  stm32f4xx_it.o(.text.DMA2_Stream7_IRQHandler)
    __arm_cp.8_0                             0x08002dd0   Number         4  stm32f4xx_it.o(.text.DMA2_Stream7_IRQHandler)
    DMA_CalcBaseAndBitshift                  0x08002dd5   Thumb Code    48  stm32f4xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift)
    [Anonymous Symbol]                       0x08002dd4   Section        0  stm32f4xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift)
    DMA_CalcBaseAndBitshift.flagBitshiftOffset 0x08002dfc   Number         0  stm32f4xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift)
    [Anonymous Symbol]                       0x08002e04   Section        0  stm32f4xx_it.o(.text.DebugMon_Handler)
    [Anonymous Symbol]                       0x08002e06   Section        0  main.o(.text.Error_Handler)
    EventCheckFilter                         0x08002e09   Thumb Code    40  eventrecorder.o(.text.EventCheckFilter)
    [Anonymous Symbol]                       0x08002e08   Section        0  eventrecorder.o(.text.EventCheckFilter)
    EventGetTS                               0x08002e29   Thumb Code    60  eventrecorder.o(.text.EventGetTS)
    [Anonymous Symbol]                       0x08002e28   Section        0  eventrecorder.o(.text.EventGetTS)
    [Anonymous Symbol]                       0x08002e60   Section        0  eventrecorder.o(.text.EventRecord2)
    [Anonymous Symbol]                       0x08002e9c   Section        0  eventrecorder.o(.text.EventRecord4)
    __arm_cp.14_1                            0x08002f14   Number         4  eventrecorder.o(.text.EventRecord4)
    [Anonymous Symbol]                       0x08002f18   Section        0  eventrecorder.o(.text.EventRecordData)
    __arm_cp.11_1                            0x0800301c   Number         4  eventrecorder.o(.text.EventRecordData)
    __arm_cp.11_2                            0x08003020   Number         4  eventrecorder.o(.text.EventRecordData)
    EventRecordItem                          0x08003025   Thumb Code   256  eventrecorder.o(.text.EventRecordItem)
    [Anonymous Symbol]                       0x08003024   Section        0  eventrecorder.o(.text.EventRecordItem)
    __arm_cp.6_0                             0x0800311c   Number         4  eventrecorder.o(.text.EventRecordItem)
    [Anonymous Symbol]                       0x08003120   Section        0  eventrecorder.o(.text.EventRecorderDisable)
    [Anonymous Symbol]                       0x08003180   Section        0  eventrecorder.o(.text.EventRecorderEnable)
    __arm_cp.4_0                             0x080031e0   Number         4  eventrecorder.o(.text.EventRecorderEnable)
    [Anonymous Symbol]                       0x080031e4   Section        0  eventrecorder.o(.text.EventRecorderInitialize)
    __arm_cp.3_1                             0x08003300   Number         4  eventrecorder.o(.text.EventRecorderInitialize)
    __arm_cp.3_2                             0x08003304   Number         4  eventrecorder.o(.text.EventRecorderInitialize)
    __arm_cp.3_3                             0x08003308   Number         4  eventrecorder.o(.text.EventRecorderInitialize)
    __arm_cp.3_4                             0x0800330c   Number         4  eventrecorder.o(.text.EventRecorderInitialize)
    __arm_cp.3_5                             0x08003310   Number         4  eventrecorder.o(.text.EventRecorderInitialize)
    __arm_cp.3_6                             0x08003314   Number         4  eventrecorder.o(.text.EventRecorderInitialize)
    [Anonymous Symbol]                       0x08003318   Section        0  eventrecorder.o(.text.EventRecorderStart)
    __arm_cp.7_0                             0x0800333c   Number         4  eventrecorder.o(.text.EventRecorderStart)
    __arm_cp.7_1                             0x08003340   Number         4  eventrecorder.o(.text.EventRecorderStart)
    [Anonymous Symbol]                       0x08003344   Section        0  eventrecorder.o(.text.EventRecorderTimerGetCount)
    __arm_cp.2_0                             0x0800334c   Number         4  eventrecorder.o(.text.EventRecorderTimerGetCount)
    [Anonymous Symbol]                       0x08003350   Section        0  eventrecorder.o(.text.EventRecorderTimerGetFreq)
    __arm_cp.1_0                             0x08003358   Number         4  eventrecorder.o(.text.EventRecorderTimerGetFreq)
    [Anonymous Symbol]                       0x0800335c   Section        0  eventrecorder.o(.text.EventRecorderTimerSetup)
    __arm_cp.0_0                             0x08003374   Number         4  eventrecorder.o(.text.EventRecorderTimerSetup)
    __arm_cp.0_1                             0x08003378   Number         4  eventrecorder.o(.text.EventRecorderTimerSetup)
    [Anonymous Symbol]                       0x0800337c   Section        0  rtx_evr.o(.text.EvrRtxDelay)
    __arm_cp.70_0                            0x08003388   Number         4  rtx_evr.o(.text.EvrRtxDelay)
    [Anonymous Symbol]                       0x0800338c   Section        0  rtx_evr.o(.text.EvrRtxDelayCompleted)
    __arm_cp.74_0                            0x08003398   Number         4  rtx_evr.o(.text.EvrRtxDelayCompleted)
    [Anonymous Symbol]                       0x0800339c   Section        0  rtx_evr.o(.text.EvrRtxDelayError)
    [Anonymous Symbol]                       0x080033a8   Section        0  rtx_evr.o(.text.EvrRtxDelayStarted)
    __arm_cp.72_0                            0x080033b4   Number         4  rtx_evr.o(.text.EvrRtxDelayStarted)
    [Anonymous Symbol]                       0x080033b8   Section        0  rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout)
    __arm_cp.98_0                            0x080033c4   Number         4  rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout)
    [Anonymous Symbol]                       0x080033c8   Section        0  rtx_evr.o(.text.EvrRtxKernelError)
    [Anonymous Symbol]                       0x080033d4   Section        0  rtx_evr.o(.text.EvrRtxKernelGetState)
    __arm_cp.11_0                            0x080033e0   Number         4  rtx_evr.o(.text.EvrRtxKernelGetState)
    [Anonymous Symbol]                       0x080033e4   Section        0  rtx_evr.o(.text.EvrRtxKernelGetTickFreq)
    __arm_cp.25_0                            0x080033f0   Number         4  rtx_evr.o(.text.EvrRtxKernelGetTickFreq)
    [Anonymous Symbol]                       0x080033f4   Section        0  rtx_evr.o(.text.EvrRtxKernelInitialize)
    __arm_cp.7_0                             0x08003400   Number         4  rtx_evr.o(.text.EvrRtxKernelInitialize)
    [Anonymous Symbol]                       0x08003404   Section        0  rtx_evr.o(.text.EvrRtxKernelInitialized)
    __arm_cp.8_0                             0x08003410   Number         4  rtx_evr.o(.text.EvrRtxKernelInitialized)
    [Anonymous Symbol]                       0x08003414   Section        0  rtx_evr.o(.text.EvrRtxKernelStart)
    __arm_cp.12_0                            0x08003420   Number         4  rtx_evr.o(.text.EvrRtxKernelStart)
    [Anonymous Symbol]                       0x08003424   Section        0  rtx_evr.o(.text.EvrRtxKernelStarted)
    __arm_cp.13_0                            0x08003430   Number         4  rtx_evr.o(.text.EvrRtxKernelStarted)
    [Anonymous Symbol]                       0x08003434   Section        0  rtx_evr.o(.text.EvrRtxMemoryAlloc)
    __arm_cp.1_0                             0x08003448   Number         4  rtx_evr.o(.text.EvrRtxMemoryAlloc)
    [Anonymous Symbol]                       0x0800344c   Section        0  rtx_evr.o(.text.EvrRtxMemoryBlockAlloc)
    __arm_cp.4_0                             0x08003458   Number         4  rtx_evr.o(.text.EvrRtxMemoryBlockAlloc)
    [Anonymous Symbol]                       0x0800345c   Section        0  rtx_evr.o(.text.EvrRtxMemoryBlockFree)
    __arm_cp.5_0                             0x08003470   Number         4  rtx_evr.o(.text.EvrRtxMemoryBlockFree)
    [Anonymous Symbol]                       0x08003474   Section        0  rtx_evr.o(.text.EvrRtxMemoryBlockInit)
    __arm_cp.3_0                             0x08003488   Number         4  rtx_evr.o(.text.EvrRtxMemoryBlockInit)
    [Anonymous Symbol]                       0x0800348c   Section        0  rtx_evr.o(.text.EvrRtxMemoryFree)
    __arm_cp.2_0                             0x080034a0   Number         4  rtx_evr.o(.text.EvrRtxMemoryFree)
    [Anonymous Symbol]                       0x080034a4   Section        0  rtx_evr.o(.text.EvrRtxMemoryInit)
    [Anonymous Symbol]                       0x080034bc   Section        0  rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout)
    __arm_cp.137_0                           0x080034c8   Number         4  rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout)
    [Anonymous Symbol]                       0x080034cc   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueCreated)
    __arm_cp.151_0                           0x080034d8   Number         4  rtx_evr.o(.text.EvrRtxMessageQueueCreated)
    [Anonymous Symbol]                       0x080034dc   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueError)
    [Anonymous Symbol]                       0x080034e8   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueGet)
    __arm_cp.159_0                           0x080034fc   Number         4  rtx_evr.o(.text.EvrRtxMessageQueueGet)
    [Anonymous Symbol]                       0x08003500   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueGetPending)
    __arm_cp.160_0                           0x08003514   Number         4  rtx_evr.o(.text.EvrRtxMessageQueueGetPending)
    [Anonymous Symbol]                       0x08003518   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout)
    __arm_cp.161_0                           0x08003524   Number         4  rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout)
    [Anonymous Symbol]                       0x08003528   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueInsertPending)
    __arm_cp.156_0                           0x08003534   Number         4  rtx_evr.o(.text.EvrRtxMessageQueueInsertPending)
    [Anonymous Symbol]                       0x08003538   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueInserted)
    __arm_cp.157_0                           0x08003544   Number         4  rtx_evr.o(.text.EvrRtxMessageQueueInserted)
    [Anonymous Symbol]                       0x08003548   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueNew)
    __arm_cp.150_0                           0x0800355c   Number         4  rtx_evr.o(.text.EvrRtxMessageQueueNew)
    [Anonymous Symbol]                       0x08003560   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueNotInserted)
    __arm_cp.158_0                           0x0800356c   Number         4  rtx_evr.o(.text.EvrRtxMessageQueueNotInserted)
    [Anonymous Symbol]                       0x08003570   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved)
    __arm_cp.163_0                           0x0800357c   Number         4  rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved)
    [Anonymous Symbol]                       0x08003580   Section        0  rtx_evr.o(.text.EvrRtxMessageQueuePut)
    __arm_cp.153_0                           0x08003594   Number         4  rtx_evr.o(.text.EvrRtxMessageQueuePut)
    [Anonymous Symbol]                       0x08003598   Section        0  rtx_evr.o(.text.EvrRtxMessageQueuePutPending)
    __arm_cp.154_0                           0x080035ac   Number         4  rtx_evr.o(.text.EvrRtxMessageQueuePutPending)
    [Anonymous Symbol]                       0x080035b0   Section        0  rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout)
    __arm_cp.155_0                           0x080035bc   Number         4  rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout)
    [Anonymous Symbol]                       0x080035c0   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueRetrieved)
    __arm_cp.162_0                           0x080035cc   Number         4  rtx_evr.o(.text.EvrRtxMessageQueueRetrieved)
    [Anonymous Symbol]                       0x080035d0   Section        0  rtx_evr.o(.text.EvrRtxMutexAcquire)
    __arm_cp.107_0                           0x080035dc   Number         4  rtx_evr.o(.text.EvrRtxMutexAcquire)
    [Anonymous Symbol]                       0x080035e0   Section        0  rtx_evr.o(.text.EvrRtxMutexAcquirePending)
    __arm_cp.108_0                           0x080035ec   Number         4  rtx_evr.o(.text.EvrRtxMutexAcquirePending)
    [Anonymous Symbol]                       0x080035f0   Section        0  rtx_evr.o(.text.EvrRtxMutexAcquireTimeout)
    __arm_cp.109_0                           0x080035fc   Number         4  rtx_evr.o(.text.EvrRtxMutexAcquireTimeout)
    [Anonymous Symbol]                       0x08003600   Section        0  rtx_evr.o(.text.EvrRtxMutexAcquired)
    __arm_cp.110_0                           0x0800360c   Number         4  rtx_evr.o(.text.EvrRtxMutexAcquired)
    [Anonymous Symbol]                       0x08003610   Section        0  rtx_evr.o(.text.EvrRtxMutexCreated)
    __arm_cp.105_0                           0x0800361c   Number         4  rtx_evr.o(.text.EvrRtxMutexCreated)
    [Anonymous Symbol]                       0x08003620   Section        0  rtx_evr.o(.text.EvrRtxMutexDelete)
    __arm_cp.115_0                           0x0800362c   Number         4  rtx_evr.o(.text.EvrRtxMutexDelete)
    [Anonymous Symbol]                       0x08003630   Section        0  rtx_evr.o(.text.EvrRtxMutexDestroyed)
    __arm_cp.116_0                           0x0800363c   Number         4  rtx_evr.o(.text.EvrRtxMutexDestroyed)
    [Anonymous Symbol]                       0x08003640   Section        0  rtx_evr.o(.text.EvrRtxMutexError)
    [Anonymous Symbol]                       0x0800364c   Section        0  rtx_evr.o(.text.EvrRtxMutexNew)
    __arm_cp.104_0                           0x08003658   Number         4  rtx_evr.o(.text.EvrRtxMutexNew)
    [Anonymous Symbol]                       0x0800365c   Section        0  rtx_evr.o(.text.EvrRtxMutexNotAcquired)
    __arm_cp.111_0                           0x08003668   Number         4  rtx_evr.o(.text.EvrRtxMutexNotAcquired)
    [Anonymous Symbol]                       0x0800366c   Section        0  rtx_evr.o(.text.EvrRtxMutexRelease)
    __arm_cp.112_0                           0x08003678   Number         4  rtx_evr.o(.text.EvrRtxMutexRelease)
    [Anonymous Symbol]                       0x0800367c   Section        0  rtx_evr.o(.text.EvrRtxMutexReleased)
    __arm_cp.113_0                           0x08003688   Number         4  rtx_evr.o(.text.EvrRtxMutexReleased)
    [Anonymous Symbol]                       0x0800368c   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreAcquire)
    __arm_cp.121_0                           0x08003698   Number         4  rtx_evr.o(.text.EvrRtxSemaphoreAcquire)
    [Anonymous Symbol]                       0x0800369c   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending)
    __arm_cp.122_0                           0x080036a8   Number         4  rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending)
    [Anonymous Symbol]                       0x080036ac   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout)
    __arm_cp.123_0                           0x080036b8   Number         4  rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout)
    [Anonymous Symbol]                       0x080036bc   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreAcquired)
    __arm_cp.124_0                           0x080036c8   Number         4  rtx_evr.o(.text.EvrRtxSemaphoreAcquired)
    [Anonymous Symbol]                       0x080036cc   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreCreated)
    __arm_cp.119_0                           0x080036d8   Number         4  rtx_evr.o(.text.EvrRtxSemaphoreCreated)
    [Anonymous Symbol]                       0x080036dc   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreError)
    [Anonymous Symbol]                       0x080036e8   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreNew)
    __arm_cp.118_0                           0x080036fc   Number         4  rtx_evr.o(.text.EvrRtxSemaphoreNew)
    [Anonymous Symbol]                       0x08003700   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired)
    __arm_cp.125_0                           0x0800370c   Number         4  rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired)
    [Anonymous Symbol]                       0x08003710   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreRelease)
    __arm_cp.126_0                           0x0800371c   Number         4  rtx_evr.o(.text.EvrRtxSemaphoreRelease)
    [Anonymous Symbol]                       0x08003720   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreReleased)
    __arm_cp.127_0                           0x0800372c   Number         4  rtx_evr.o(.text.EvrRtxSemaphoreReleased)
    [Anonymous Symbol]                       0x08003730   Section        0  rtx_evr.o(.text.EvrRtxThreadBlocked)
    __arm_cp.49_0                            0x0800373c   Number         4  rtx_evr.o(.text.EvrRtxThreadBlocked)
    [Anonymous Symbol]                       0x08003740   Section        0  rtx_evr.o(.text.EvrRtxThreadCreated)
    __arm_cp.30_0                            0x08003754   Number         4  rtx_evr.o(.text.EvrRtxThreadCreated)
    [Anonymous Symbol]                       0x08003758   Section        0  rtx_evr.o(.text.EvrRtxThreadDestroyed)
    __arm_cp.55_0                            0x08003764   Number         4  rtx_evr.o(.text.EvrRtxThreadDestroyed)
    [Anonymous Symbol]                       0x08003768   Section        0  rtx_evr.o(.text.EvrRtxThreadError)
    [Anonymous Symbol]                       0x08003774   Section        0  rtx_evr.o(.text.EvrRtxThreadExit)
    __arm_cp.53_0                            0x08003780   Number         4  rtx_evr.o(.text.EvrRtxThreadExit)
    [Anonymous Symbol]                       0x08003784   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted)
    __arm_cp.67_0                            0x08003798   Number         4  rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted)
    [Anonymous Symbol]                       0x0800379c   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout)
    __arm_cp.66_0                            0x080037a8   Number         4  rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout)
    [Anonymous Symbol]                       0x080037ac   Section        0  rtx_evr.o(.text.EvrRtxThreadGetId)
    __arm_cp.32_0                            0x080037b8   Number         4  rtx_evr.o(.text.EvrRtxThreadGetId)
    [Anonymous Symbol]                       0x080037bc   Section        0  rtx_evr.o(.text.EvrRtxThreadJoined)
    __arm_cp.48_0                            0x080037c8   Number         4  rtx_evr.o(.text.EvrRtxThreadJoined)
    [Anonymous Symbol]                       0x080037cc   Section        0  rtx_evr.o(.text.EvrRtxThreadNew)
    __arm_cp.29_0                            0x080037e0   Number         4  rtx_evr.o(.text.EvrRtxThreadNew)
    [Anonymous Symbol]                       0x080037e4   Section        0  rtx_evr.o(.text.EvrRtxThreadPreempted)
    __arm_cp.51_0                            0x080037f0   Number         4  rtx_evr.o(.text.EvrRtxThreadPreempted)
    [Anonymous Symbol]                       0x080037f4   Section        0  rtx_evr.o(.text.EvrRtxThreadSwitched)
    __arm_cp.52_0                            0x08003800   Number         4  rtx_evr.o(.text.EvrRtxThreadSwitched)
    [Anonymous Symbol]                       0x08003804   Section        0  rtx_evr.o(.text.EvrRtxThreadUnblocked)
    __arm_cp.50_0                            0x08003810   Number         4  rtx_evr.o(.text.EvrRtxThreadUnblocked)
    [Anonymous Symbol]                       0x08003814   Section        0  rtx_evr.o(.text.EvrRtxTimerCallback)
    __arm_cp.76_0                            0x08003820   Number         4  rtx_evr.o(.text.EvrRtxTimerCallback)
    [Anonymous Symbol]                       0x08003824   Section        0  stm32f4xx_hal_dma.o(.text.HAL_DMA_IRQHandler)
    __arm_cp.9_0                             0x08003990   Number         4  stm32f4xx_hal_dma.o(.text.HAL_DMA_IRQHandler)
    [Anonymous Symbol]                       0x08003994   Section        0  stm32f4xx_hal_dma.o(.text.HAL_DMA_Init)
    __arm_cp.0_0                             0x08003ab8   Number         4  stm32f4xx_hal_dma.o(.text.HAL_DMA_Init)
    [Anonymous Symbol]                       0x08003abc   Section        0  stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init)
    __arm_cp.0_0                             0x08003c30   Number         4  stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init)
    __arm_cp.0_1                             0x08003c34   Number         4  stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init)
    __arm_cp.0_2                             0x08003c38   Number         4  stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init)
    __arm_cp.0_3                             0x08003c3c   Number         4  stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init)
    __arm_cp.0_5                             0x08003c40   Number         4  stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init)
    [Anonymous Symbol]                       0x08003c44   Section        0  stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin)
    [Anonymous Symbol]                       0x08003c50   Section        0  stm32f4xx_hal.o(.text.HAL_GetTick)
    [Anonymous Symbol]                       0x08003c58   Section        0  stm32f4xx_hal.o(.text.HAL_IncTick)
    __arm_cp.5_0                             0x08003c68   Number         4  stm32f4xx_hal.o(.text.HAL_IncTick)
    __arm_cp.5_1                             0x08003c6c   Number         4  stm32f4xx_hal.o(.text.HAL_IncTick)
    [Anonymous Symbol]                       0x08003c70   Section        0  stm32f4xx_hal.o(.text.HAL_Init)
    __arm_cp.0_0                             0x08003ca0   Number         4  stm32f4xx_hal.o(.text.HAL_Init)
    [Anonymous Symbol]                       0x08003ca4   Section        0  stm32f4xx_hal_timebase_tim.o(.text.HAL_InitTick)
    __arm_cp.0_0                             0x08003d0c   Number         4  stm32f4xx_hal_timebase_tim.o(.text.HAL_InitTick)
    __arm_cp.0_1                             0x08003d10   Number         4  stm32f4xx_hal_timebase_tim.o(.text.HAL_InitTick)
    __arm_cp.0_2                             0x08003d14   Number         4  stm32f4xx_hal_timebase_tim.o(.text.HAL_InitTick)
    __arm_cp.0_3                             0x08003d18   Number         4  stm32f4xx_hal_timebase_tim.o(.text.HAL_InitTick)
    [Anonymous Symbol]                       0x08003d1c   Section        0  stm32f4xx_hal_msp.o(.text.HAL_MspInit)
    __arm_cp.0_0                             0x08003d50   Number         4  stm32f4xx_hal_msp.o(.text.HAL_MspInit)
    [Anonymous Symbol]                       0x08003d54   Section        0  stm32f4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ)
    __arm_cp.3_0                             0x08003d6c   Number         4  stm32f4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x08003d70   Section        0  stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority)
    [Anonymous Symbol]                       0x08003dac   Section        0  stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping)
    __arm_cp.0_0                             0x08003dc4   Number         4  stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping)
    __arm_cp.0_1                             0x08003dc8   Number         4  stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping)
    [Anonymous Symbol]                       0x08003dcc   Section        0  stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    __arm_cp.2_0                             0x08003ee4   Number         4  stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    __arm_cp.2_1                             0x08003ee8   Number         4  stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    [Anonymous Symbol]                       0x08003eec   Section        0  stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig)
    [Anonymous Symbol]                       0x08003f24   Section        0  stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq)
    [Anonymous Symbol]                       0x08003f38   Section        0  stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq)
    __arm_cp.9_0                             0x08003f4c   Number         4  stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq)
    __arm_cp.9_1                             0x08003f50   Number         4  stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq)
    __arm_cp.9_2                             0x08003f54   Number         4  stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq)
    [Anonymous Symbol]                       0x08003f58   Section        0  stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq)
    __arm_cp.3_0                             0x08003fa8   Number         4  stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq)
    __arm_cp.3_1                             0x08003fac   Number         4  stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq)
    __arm_cp.3_2                             0x08003fb0   Number         4  stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq)
    [Anonymous Symbol]                       0x08003fb4   Section        0  stm32f4xx_hal_rcc.o(.text.HAL_RCC_OscConfig)
    __arm_cp.1_0                             0x08004280   Number         4  stm32f4xx_hal_rcc.o(.text.HAL_RCC_OscConfig)
    __arm_cp.1_1                             0x08004284   Number         4  stm32f4xx_hal_rcc.o(.text.HAL_RCC_OscConfig)
    __arm_cp.1_2                             0x08004288   Number         4  stm32f4xx_hal_rcc.o(.text.HAL_RCC_OscConfig)
    [Anonymous Symbol]                       0x0800428c   Section        0  stm32f4xx_hal_spi.o(.text.HAL_SPI_Init)
    [Anonymous Symbol]                       0x0800430c   Section        0  spi.o(.text.HAL_SPI_MspInit)
    __arm_cp.1_0                             0x08004370   Number         4  spi.o(.text.HAL_SPI_MspInit)
    __arm_cp.1_1                             0x08004374   Number         4  spi.o(.text.HAL_SPI_MspInit)
    [Anonymous Symbol]                       0x08004378   Section        0  stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive)
    [Anonymous Symbol]                       0x080044a6   Section        0  stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive)
    [Anonymous Symbol]                       0x0800467a   Section        0  stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_BreakCallback)
    [Anonymous Symbol]                       0x0800467c   Section        0  stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback)
    [Anonymous Symbol]                       0x0800467e   Section        0  stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Init)
    [Anonymous Symbol]                       0x080046b2   Section        0  stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_MspInit)
    [Anonymous Symbol]                       0x080046b4   Section        0  stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT)
    [Anonymous Symbol]                       0x080046d4   Section        0  stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback)
    [Anonymous Symbol]                       0x080046d6   Section        0  stm32f4xx_hal_tim.o(.text.HAL_TIM_IRQHandler)
    [Anonymous Symbol]                       0x08004840   Section        0  stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback)
    [Anonymous Symbol]                       0x08004842   Section        0  stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback)
    [Anonymous Symbol]                       0x08004844   Section        0  main.o(.text.HAL_TIM_PeriodElapsedCallback)
    __arm_cp.3_0                             0x08004854   Number         4  main.o(.text.HAL_TIM_PeriodElapsedCallback)
    [Anonymous Symbol]                       0x08004858   Section        0  stm32f4xx_hal_tim.o(.text.HAL_TIM_TriggerCallback)
    [Anonymous Symbol]                       0x0800485a   Section        0  stm32f4xx_hal_uart.o(.text.HAL_UART_Init)
    [Anonymous Symbol]                       0x080048b8   Section        0  usart.o(.text.HAL_UART_MspInit)
    __arm_cp.1_2                             0x08004994   Number         4  usart.o(.text.HAL_UART_MspInit)
    __arm_cp.1_3                             0x08004998   Number         4  usart.o(.text.HAL_UART_MspInit)
    __arm_cp.1_4                             0x0800499c   Number         4  usart.o(.text.HAL_UART_MspInit)
    [Anonymous Symbol]                       0x080049a0   Section        0  stm32f4xx_it.o(.text.HardFault_Handler)
    [Anonymous Symbol]                       0x080049a4   Section        0  dma.o(.text.MX_DMA_Init)
    [Anonymous Symbol]                       0x080049e4   Section        0  gpio.o(.text.MX_GPIO_Init)
    __arm_cp.0_0                             0x08004aa8   Number         4  gpio.o(.text.MX_GPIO_Init)
    __arm_cp.0_1                             0x08004aac   Number         4  gpio.o(.text.MX_GPIO_Init)
    __arm_cp.0_2                             0x08004ab0   Number         4  gpio.o(.text.MX_GPIO_Init)
    __arm_cp.0_3                             0x08004ab4   Number         4  gpio.o(.text.MX_GPIO_Init)
    [Anonymous Symbol]                       0x08004ab8   Section        0  spi.o(.text.MX_SPI2_Init)
    __arm_cp.0_0                             0x08004af4   Number         4  spi.o(.text.MX_SPI2_Init)
    __arm_cp.0_1                             0x08004af8   Number         4  spi.o(.text.MX_SPI2_Init)
    [Anonymous Symbol]                       0x08004afc   Section        0  usart.o(.text.MX_USART1_UART_Init)
    __arm_cp.0_0                             0x08004b2c   Number         4  usart.o(.text.MX_USART1_UART_Init)
    __arm_cp.0_1                             0x08004b30   Number         4  usart.o(.text.MX_USART1_UART_Init)
    [Anonymous Symbol]                       0x08004b34   Section        0  stm32f4xx_it.o(.text.MemManage_Handler)
    MessageQueueGet                          0x08004b37   Thumb Code    68  rtx_msgqueue.o(.text.MessageQueueGet)
    [Anonymous Symbol]                       0x08004b36   Section        0  rtx_msgqueue.o(.text.MessageQueueGet)
    MessageQueuePut                          0x08004b7b   Thumb Code    98  rtx_msgqueue.o(.text.MessageQueuePut)
    [Anonymous Symbol]                       0x08004b7a   Section        0  rtx_msgqueue.o(.text.MessageQueuePut)
    MessageQueueRemove                       0x08004bdd   Thumb Code    28  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x08004bdc   Section        0  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x08004bf8   Section        0  stm32f4xx_it.o(.text.NMI_Handler)
    NOR0_DriverEvent                         0x08004bfd   Thumb Code    12  fs_config.o(.text.NOR0_DriverEvent)
    [Anonymous Symbol]                       0x08004bfc   Section        0  fs_config.o(.text.NOR0_DriverEvent)
    __arm_cp.44_0                            0x08004c04   Number         4  fs_config.o(.text.NOR0_DriverEvent)
    [Anonymous Symbol]                       0x08004c08   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x08004c10   Section        0  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_1                             0x08004c30   Number         4  os_systick.o(.text.OS_Tick_Enable)
    [Anonymous Symbol]                       0x08004c34   Section        0  os_systick.o(.text.OS_Tick_GetIRQn)
    [Anonymous Symbol]                       0x08004c3c   Section        0  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_1                             0x08004c6c   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_2                             0x08004c70   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_3                             0x08004c74   Number         4  os_systick.o(.text.OS_Tick_Setup)
    SPI_EndRxTransaction                     0x08004c79   Thumb Code    82  stm32f4xx_hal_spi.o(.text.SPI_EndRxTransaction)
    [Anonymous Symbol]                       0x08004c78   Section        0  stm32f4xx_hal_spi.o(.text.SPI_EndRxTransaction)
    SPI_EndRxTxTransaction                   0x08004ccd   Thumb Code    88  stm32f4xx_hal_spi.o(.text.SPI_EndRxTxTransaction)
    [Anonymous Symbol]                       0x08004ccc   Section        0  stm32f4xx_hal_spi.o(.text.SPI_EndRxTxTransaction)
    __arm_cp.5_1                             0x08004d1c   Number         4  stm32f4xx_hal_spi.o(.text.SPI_EndRxTxTransaction)
    SPI_WaitFlagStateUntilTimeout            0x08004d21   Thumb Code   128  stm32f4xx_hal_spi.o(.text.SPI_WaitFlagStateUntilTimeout)
    [Anonymous Symbol]                       0x08004d20   Section        0  stm32f4xx_hal_spi.o(.text.SPI_WaitFlagStateUntilTimeout)
    [Anonymous Symbol]                       0x08004da0   Section        0  main.o(.text.SystemClock_Config)
    __arm_cp.1_0                             0x08004e1c   Number         4  main.o(.text.SystemClock_Config)
    __arm_cp.1_1                             0x08004e20   Number         4  main.o(.text.SystemClock_Config)
    [Anonymous Symbol]                       0x08004e24   Section        0  system_stm32f4xx.o(.text.SystemCoreClockUpdate)
    __arm_cp.1_0                             0x08004e7c   Number         4  system_stm32f4xx.o(.text.SystemCoreClockUpdate)
    __arm_cp.1_1                             0x08004e80   Number         4  system_stm32f4xx.o(.text.SystemCoreClockUpdate)
    __arm_cp.1_2                             0x08004e84   Number         4  system_stm32f4xx.o(.text.SystemCoreClockUpdate)
    __arm_cp.1_3                             0x08004e88   Number         4  system_stm32f4xx.o(.text.SystemCoreClockUpdate)
    __arm_cp.1_4                             0x08004e8c   Number         4  system_stm32f4xx.o(.text.SystemCoreClockUpdate)
    [Anonymous Symbol]                       0x08004e90   Section        0  system_stm32f4xx.o(.text.SystemInit)
    __arm_cp.0_0                             0x08004ecc   Number         4  system_stm32f4xx.o(.text.SystemInit)
    __arm_cp.0_1                             0x08004ed0   Number         4  system_stm32f4xx.o(.text.SystemInit)
    __arm_cp.0_2                             0x08004ed4   Number         4  system_stm32f4xx.o(.text.SystemInit)
    __arm_cp.0_3                             0x08004ed8   Number         4  system_stm32f4xx.o(.text.SystemInit)
    [Anonymous Symbol]                       0x08004edc   Section        0  stm32f4xx_it.o(.text.TIM1_TRG_COM_TIM11_IRQHandler)
    __arm_cp.6_0                             0x08004ee4   Number         4  stm32f4xx_it.o(.text.TIM1_TRG_COM_TIM11_IRQHandler)
    [Anonymous Symbol]                       0x08004ee8   Section        0  stm32f4xx_hal_tim.o(.text.TIM_Base_SetConfig)
    __arm_cp.2_0                             0x08004f50   Number         4  stm32f4xx_hal_tim.o(.text.TIM_Base_SetConfig)
    __arm_cp.2_1                             0x08004f54   Number         4  stm32f4xx_hal_tim.o(.text.TIM_Base_SetConfig)
    __arm_cp.2_2                             0x08004f58   Number         4  stm32f4xx_hal_tim.o(.text.TIM_Base_SetConfig)
    __arm_cp.2_3                             0x08004f5c   Number         4  stm32f4xx_hal_tim.o(.text.TIM_Base_SetConfig)
    __arm_cp.2_4                             0x08004f60   Number         4  stm32f4xx_hal_tim.o(.text.TIM_Base_SetConfig)
    __arm_cp.2_5                             0x08004f64   Number         4  stm32f4xx_hal_tim.o(.text.TIM_Base_SetConfig)
    __arm_cp.2_6                             0x08004f68   Number         4  stm32f4xx_hal_tim.o(.text.TIM_Base_SetConfig)
    ThreadFlagsCheck                         0x08004f6d   Thumb Code   106  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x08004f6c   Section        0  rtx_thread.o(.text.ThreadFlagsCheck)
    TimerInsert                              0x08004fd9   Thumb Code    80  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x08004fd8   Section        0  rtx_timer.o(.text.TimerInsert)
    __arm_cp.8_0                             0x08005024   Number         4  rtx_timer.o(.text.TimerInsert)
    UART_SetConfig                           0x08005029   Thumb Code   380  stm32f4xx_hal_uart.o(.text.UART_SetConfig)
    [Anonymous Symbol]                       0x08005028   Section        0  stm32f4xx_hal_uart.o(.text.UART_SetConfig)
    __arm_cp.2_0                             0x08005198   Number         4  stm32f4xx_hal_uart.o(.text.UART_SetConfig)
    __arm_cp.2_1                             0x0800519c   Number         4  stm32f4xx_hal_uart.o(.text.UART_SetConfig)
    __arm_cp.2_2                             0x080051a0   Number         4  stm32f4xx_hal_uart.o(.text.UART_SetConfig)
    [Anonymous Symbol]                       0x080051a4   Section        0  serial.o(.text.USART1_IRQHandler)
    __arm_cp.4_0                             0x080051e8   Number         4  serial.o(.text.USART1_IRQHandler)
    [Anonymous Symbol]                       0x080051ec   Section        0  stm32f4xx_it.o(.text.UsageFault_Handler)
    [Anonymous Symbol]                       0x080051f0   Section        0  w25qxx.o(.text.W25qxx_EraseChip)
    [Anonymous Symbol]                       0x0800523c   Section        0  w25qxx.o(.text.W25qxx_EraseSector)
    [Anonymous Symbol]                       0x080052b8   Section        0  w25qxx.o(.text.W25qxx_Init)
    __arm_cp.9_1                             0x08005370   Number         4  w25qxx.o(.text.W25qxx_Init)
    __arm_cp.9_2                             0x08005374   Number         4  w25qxx.o(.text.W25qxx_Init)
    [Anonymous Symbol]                       0x08005378   Section        0  w25qxx.o(.text.W25qxx_ReadBytes)
    [Anonymous Symbol]                       0x080053f8   Section        0  w25qxx.o(.text.W25qxx_ReadID)
    [Anonymous Symbol]                       0x08005438   Section        0  w25qxx.o(.text.W25qxx_ReadStatusRegister)
    [Anonymous Symbol]                       0x080054a4   Section        0  w25qxx.o(.text.W25qxx_ReadUniqID)
    [Anonymous Symbol]                       0x080054f0   Section        0  w25qxx.o(.text.W25qxx_Spi)
    __arm_cp.1_0                             0x08005514   Number         4  w25qxx.o(.text.W25qxx_Spi)
    [Anonymous Symbol]                       0x08005518   Section        0  w25qxx.o(.text.W25qxx_WaitForWriteEnd)
    __arm_cp.8_0                             0x0800555c   Number         4  w25qxx.o(.text.W25qxx_WaitForWriteEnd)
    __arm_cp.8_1                             0x08005560   Number         4  w25qxx.o(.text.W25qxx_WaitForWriteEnd)
    [Anonymous Symbol]                       0x08005564   Section        0  w25qxx.o(.text.W25qxx_WriteByte)
    __arm_cp.21_0                            0x080055dc   Number         4  w25qxx.o(.text.W25qxx_WriteByte)
    __arm_cp.21_2                            0x080055e0   Number         4  w25qxx.o(.text.W25qxx_WriteByte)
    [Anonymous Symbol]                       0x080055e4   Section        0  w25qxx.o(.text.W25qxx_WriteEnable)
    __arm_cp.4_0                             0x08005610   Number         4  w25qxx.o(.text.W25qxx_WriteEnable)
    __NVIC_SetPriority                       0x08005615   Thumb Code    36  stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x08005614   Section        0  stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriority)
    __arm_cp.2_0                             0x08005630   Number         4  stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriority)
    __arm_cp.2_1                             0x08005634   Number         4  stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x08005638   Section        0  rtx_lib.o(.text.__user_perthread_libspace)
    __arm_cp.1_0                             0x08005680   Number         4  rtx_lib.o(.text.__user_perthread_libspace)
    __arm_cp.1_1                             0x08005684   Number         4  rtx_lib.o(.text.__user_perthread_libspace)
    __tagsym$$used.1                         0x08005688   Number         0  rtx_lib.o(.text._mutex_acquire)
    [Anonymous Symbol]                       0x08005688   Section        0  rtx_lib.o(.text._mutex_acquire)
    __tagsym$$used.3                         0x080056a2   Number         0  rtx_lib.o(.text._mutex_free)
    [Anonymous Symbol]                       0x080056a2   Section        0  rtx_lib.o(.text._mutex_free)
    __tagsym$$used.0                         0x080056a8   Number         0  rtx_lib.o(.text._mutex_initialize)
    [Anonymous Symbol]                       0x080056a8   Section        0  rtx_lib.o(.text._mutex_initialize)
    __tagsym$$used.2                         0x080056c8   Number         0  rtx_lib.o(.text._mutex_release)
    [Anonymous Symbol]                       0x080056c8   Section        0  rtx_lib.o(.text._mutex_release)
    [Anonymous Symbol]                       0x080056de   Section        0  rtx_lib.o(.text._platform_post_stackheap_init)
    [Anonymous Symbol]                       0x080056e2   Section        0  retarget_io.o(.text._sys_close)
    [Anonymous Symbol]                       0x080056f4   Section        0  retarget_io.o(.text._sys_flen)
    [Anonymous Symbol]                       0x08005706   Section        0  retarget_io.o(.text._sys_istty)
    [Anonymous Symbol]                       0x08005718   Section        0  retarget_io.o(.text._sys_open)
    __arm_cp.0_0                             0x0800576c   Number         4  retarget_io.o(.text._sys_open)
    __arm_cp.0_1                             0x08005770   Number         4  retarget_io.o(.text._sys_open)
    __arm_cp.0_2                             0x08005774   Number         4  retarget_io.o(.text._sys_open)
    [Anonymous Symbol]                       0x08005778   Section        0  retarget_io.o(.text._sys_read)
    [Anonymous Symbol]                       0x0800579a   Section        0  retarget_io.o(.text._sys_seek)
    [Anonymous Symbol]                       0x080057b0   Section        0  retarget_io.o(.text._sys_write)
    [Anonymous Symbol]                       0x080057d4   Section        0  osmain.o(.text.app_main)
    __arm_cp.0_0                             0x080058cc   Number         4  osmain.o(.text.app_main)
    __arm_cp.0_1                             0x080058d0   Number         4  osmain.o(.text.app_main)
    __arm_cp.0_2                             0x080058d4   Number         4  osmain.o(.text.app_main)
    __arm_cp.0_3                             0x080058d8   Number         4  osmain.o(.text.app_main)
    __arm_cp.0_4                             0x080058dc   Number         4  osmain.o(.text.app_main)
    __arm_cp.0_6                             0x080058ec   Number         4  osmain.o(.text.app_main)
    __arm_cp.0_8                             0x080058fc   Number         4  osmain.o(.text.app_main)
    __arm_cp.0_10                            0x08005908   Number         4  osmain.o(.text.app_main)
    __arm_cp.0_11                            0x0800590c   Number         4  osmain.o(.text.app_main)
    __arm_cp.0_14                            0x08005980   Number         4  osmain.o(.text.app_main)
    __arm_cp.0_16                            0x08005988   Number         4  osmain.o(.text.app_main)
    __arm_cp.0_18                            0x08005990   Number         4  osmain.o(.text.app_main)
    __arm_cp.0_19                            0x08005994   Number         4  osmain.o(.text.app_main)
    __arm_cp.0_20                            0x08005998   Number         4  osmain.o(.text.app_main)
    [Anonymous Symbol]                       0x0800599c   Section        0  osmain.o(.text.app_pwm)
    __arm_cp.1_0                             0x08005a30   Number         4  osmain.o(.text.app_pwm)
    __arm_cp.1_1                             0x08005a34   Number         4  osmain.o(.text.app_pwm)
    __arm_cp.1_2                             0x08005a38   Number         4  osmain.o(.text.app_pwm)
    consoleCmdManageAppend                   0x08005a3d   Thumb Code    20  shell.o(.text.consoleCmdManageAppend)
    [Anonymous Symbol]                       0x08005a3c   Section        0  shell.o(.text.consoleCmdManageAppend)
    consoleCmdManageFind                     0x08005a51   Thumb Code    42  shell.o(.text.consoleCmdManageFind)
    [Anonymous Symbol]                       0x08005a50   Section        0  shell.o(.text.consoleCmdManageFind)
    consoleStringGetString                   0x08005a7b   Thumb Code    10  shell.o(.text.consoleStringGetString)
    [Anonymous Symbol]                       0x08005a7a   Section        0  shell.o(.text.consoleStringGetString)
    consoleStringInsert                      0x08005a85   Thumb Code    68  shell.o(.text.consoleStringInsert)
    [Anonymous Symbol]                       0x08005a84   Section        0  shell.o(.text.consoleStringInsert)
    consoleStringRemove                      0x08005ac5   Thumb Code    80  shell.o(.text.consoleStringRemove)
    [Anonymous Symbol]                       0x08005ac4   Section        0  shell.o(.text.consoleStringRemove)
    __arm_cp.7_0                             0x08005b10   Number         4  shell.o(.text.consoleStringRemove)
    consoleStringReset                       0x08005b15   Thumb Code     8  shell.o(.text.consoleStringReset)
    [Anonymous Symbol]                       0x08005b14   Section        0  shell.o(.text.consoleStringReset)
    consoleStringSetString                   0x08005b1d   Thumb Code   124  shell.o(.text.consoleStringSetString)
    [Anonymous Symbol]                       0x08005b1c   Section        0  shell.o(.text.consoleStringSetString)
    consoleStringStringSplit                 0x08005b8d   Thumb Code   136  shell.o(.text.consoleStringStringSplit)
    [Anonymous Symbol]                       0x08005b8c   Section        0  shell.o(.text.consoleStringStringSplit)
    __arm_cp.9_0                             0x08005c10   Number         4  shell.o(.text.consoleStringStringSplit)
    [Anonymous Symbol]                       0x08005c14   Section        0  shell.o(.text.console_cmd_init)
    __arm_cp.14_1                            0x08005c1c   Number         4  shell.o(.text.console_cmd_init)
    [Anonymous Symbol]                       0x08005c20   Section        0  shell.o(.text.console_line_handle)
    __arm_cp.12_0                            0x08005d4c   Number         4  shell.o(.text.console_line_handle)
    __arm_cp.12_1                            0x08005d50   Number         4  shell.o(.text.console_line_handle)
    __arm_cp.12_4                            0x08005d5c   Number         4  shell.o(.text.console_line_handle)
    __arm_cp.12_5                            0x08005d60   Number         4  shell.o(.text.console_line_handle)
    __arm_cp.12_9                            0x08005d94   Number         4  shell.o(.text.console_line_handle)
    [Anonymous Symbol]                       0x08005d98   Section        0  serial.o(.text.emHAL_UART_Transmit_DMA)
    [Anonymous Symbol]                       0x08005de0   Section        0  serial.o(.text.em_printf)
    __arm_cp.1_0                             0x08005e28   Number         4  serial.o(.text.em_printf)
    [Anonymous Symbol]                       0x08005e2c   Section        0  fs_config.o(.text.fat_close)
    [Anonymous Symbol]                       0x08005e30   Section        0  fs_config.o(.text.fat_ffind)
    [Anonymous Symbol]                       0x08005e34   Section        0  fs_config.o(.text.fat_flen)
    [Anonymous Symbol]                       0x08005e3a   Section        0  fs_config.o(.text.fat_handle_get)
    [Anonymous Symbol]                       0x08005e40   Section        0  fs_config.o(.text.fat_init)
    [Anonymous Symbol]                       0x08005e44   Section        0  fs_config.o(.text.fat_mount)
    [Anonymous Symbol]                       0x08005e48   Section        0  fs_config.o(.text.fat_open)
    [Anonymous Symbol]                       0x08005e4c   Section        0  fs_config.o(.text.fat_read)
    [Anonymous Symbol]                       0x08005e52   Section        0  fs_config.o(.text.fat_seek)
    [Anonymous Symbol]                       0x08005e56   Section        0  fs_config.o(.text.fat_uninit)
    [Anonymous Symbol]                       0x08005e5a   Section        0  fs_config.o(.text.fat_unmount)
    [Anonymous Symbol]                       0x08005e5e   Section        0  fs_config.o(.text.fat_write)
    [Anonymous Symbol]                       0x08005e64   Section        0  fs_config.o(.text.fs_config)
    __arm_cp.8_0                             0x08005e90   Number         4  fs_config.o(.text.fs_config)
    __arm_cp.8_1                             0x08005e94   Number         4  fs_config.o(.text.fs_config)
    __arm_cp.8_2                             0x08005e98   Number         4  fs_config.o(.text.fs_config)
    __arm_cp.8_3                             0x08005e9c   Number         4  fs_config.o(.text.fs_config)
    __arm_cp.8_4                             0x08005ea0   Number         4  fs_config.o(.text.fs_config)
    [Anonymous Symbol]                       0x08005ea4   Section        0  fs_debug.o(.text.fs_config_evr)
    [Anonymous Symbol]                       0x08005ef4   Section        0  fs_config.o(.text.fs_get_rtos_tick_freq)
    [Anonymous Symbol]                       0x08005ef8   Section        0  fs_config.o(.text.fs_mutex_acquire)
    [Anonymous Symbol]                       0x08005f0a   Section        0  fs_config.o(.text.fs_mutex_delete)
    [Anonymous Symbol]                       0x08005f18   Section        0  fs_config.o(.text.fs_mutex_release)
    [Anonymous Symbol]                       0x08005f28   Section        0  fs_config.o(.text.fs_set_rtos_delay)
    __arm_cp.5_0                             0x08005f38   Number         4  fs_config.o(.text.fs_set_rtos_delay)
    hAppend                                  0x08005f3d   Thumb Code   150  shell.o(.text.hAppend)
    [Anonymous Symbol]                       0x08005f3c   Section        0  shell.o(.text.hAppend)
    hInitialise                              0x08005fd3   Thumb Code     8  shell.o(.text.hInitialise)
    [Anonymous Symbol]                       0x08005fd2   Section        0  shell.o(.text.hInitialise)
    hNext                                    0x08005fdb   Thumb Code    42  shell.o(.text.hNext)
    [Anonymous Symbol]                       0x08005fda   Section        0  shell.o(.text.hNext)
    hPrevious                                0x08006005   Thumb Code    44  shell.o(.text.hPrevious)
    [Anonymous Symbol]                       0x08006004   Section        0  shell.o(.text.hPrevious)
    [Anonymous Symbol]                       0x08006030   Section        0  serial.o(.text.initSerial)
    [Anonymous Symbol]                       0x08006094   Section        0  shell.o(.text.m_cmd_fun_help)
    __arm_cp.13_0                            0x080060c4   Number         4  shell.o(.text.m_cmd_fun_help)
    [Anonymous Symbol]                       0x080060d8   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x080060f6   Section        0  w25qxx.o(.text.mmdelay)
    [Anonymous Symbol]                       0x08006104   Section        0  rtx_delay.o(.text.osDelay)
    __arm_cp.0_0                             0x08006138   Number         4  rtx_delay.o(.text.osDelay)
    [Anonymous Symbol]                       0x0800613c   Section        0  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.4_0                             0x08006164   Number         4  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x08006168   Section        0  rtx_kernel.o(.text.osKernelGetTickFreq)
    __arm_cp.14_0                            0x08006188   Number         4  rtx_kernel.o(.text.osKernelGetTickFreq)
    [Anonymous Symbol]                       0x0800618c   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    __arm_cp.1_0                             0x080061c0   Number         4  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x080061c4   Section        0  rtx_kernel.o(.text.osKernelStart)
    __arm_cp.6_0                             0x080061f4   Number         4  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x080061f8   Section        0  osmain.o(.text.osMain)
    __arm_cp.2_0                             0x08006250   Number         4  osmain.o(.text.osMain)
    __arm_cp.2_1                             0x08006254   Number         4  osmain.o(.text.osMain)
    __arm_cp.2_2                             0x08006258   Number         4  osmain.o(.text.osMain)
    __arm_cp.2_3                             0x0800625c   Number         4  osmain.o(.text.osMain)
    [Anonymous Symbol]                       0x08006260   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    __arm_cp.3_0                             0x080062f0   Number         4  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x080062f4   Section        0  rtx_msgqueue.o(.text.osMessageQueueNew)
    __arm_cp.0_0                             0x08006334   Number         4  rtx_msgqueue.o(.text.osMessageQueueNew)
    [Anonymous Symbol]                       0x08006338   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    __arm_cp.2_0                             0x080063cc   Number         4  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x080063d0   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    __arm_cp.3_0                             0x08006408   Number         4  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x0800640c   Section        0  rtx_mutex.o(.text.osMutexDelete)
    __arm_cp.6_0                             0x08006440   Number         4  rtx_mutex.o(.text.osMutexDelete)
    [Anonymous Symbol]                       0x08006444   Section        0  rtx_mutex.o(.text.osMutexNew)
    __arm_cp.1_0                             0x0800647c   Number         4  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x08006480   Section        0  rtx_mutex.o(.text.osMutexRelease)
    __arm_cp.4_0                             0x080064b4   Number         4  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x080064b8   Section        0  rtx_config.o(.text.osRtxErrorNotify)
    [Anonymous Symbol]                       0x080064ba   Section        0  rtx_config.o(.text.osRtxIdleThread)
    [Anonymous Symbol]                       0x080064bc   Section        0  rtx_kernel.o(.text.osRtxKernelPreInit)
    [Anonymous Symbol]                       0x080064be   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x08006548   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x0800659a   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x080065d8   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x0800661c   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x08006672   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueuePostProcess             0x080066bf   Thumb Code   242  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x080066be   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x080067b0   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x0800680c   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x08006898   Section        0  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_1                             0x08006904   Number         4  rtx_system.o(.text.osRtxPostProcess)
    osRtxSemaphorePostProcess                0x08006909   Thumb Code    66  rtx_semaphore.o(.text.osRtxSemaphorePostProcess)
    [Anonymous Symbol]                       0x08006908   Section        0  rtx_semaphore.o(.text.osRtxSemaphorePostProcess)
    osRtxThreadBlock                         0x0800694d   Thumb Code    60  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x0800694c   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadDelayInsert                   0x08006985   Thumb Code   136  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x08006984   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    osRtxThreadDelayRemove                   0x08006a09   Thumb Code    60  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x08006a08   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x08006a40   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x08006af8   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadFree                          0x08006b51   Thumb Code    88  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x08006b50   Section        0  rtx_thread.o(.text.osRtxThreadFree)
    __arm_cp.53_0                            0x08006ba4   Number         4  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x08006ba8   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x08006bbc   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x08006be6   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListRoot                      0x08006bfb   Thumb Code    12  rtx_thread.o(.text.osRtxThreadListRoot)
    [Anonymous Symbol]                       0x08006bfa   Section        0  rtx_thread.o(.text.osRtxThreadListRoot)
    [Anonymous Symbol]                       0x08006c06   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadPostProcess                   0x08006c2f   Thumb Code    58  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x08006c2e   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x08006c68   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    __arm_cp.4_0                             0x08006c78   Number         4  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x08006c7c   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x08006c90   Section        0  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.9_1                             0x08006cb0   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    [Anonymous Symbol]                       0x08006cb4   Section        0  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.16_1                            0x08006ce4   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.16_3                            0x08006ce8   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    [Anonymous Symbol]                       0x08006cec   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    __arm_cp.8_0                             0x08006d08   Number         4  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x08006d0c   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    __arm_cp.14_0                            0x08006d54   Number         4  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x08006d58   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x08006d90   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    __arm_cp.0_0                             0x08006e04   Number         4  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x08006e08   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_0                             0x08006e40   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_2                             0x08006e44   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    osRtxTimerTick                           0x08006e49   Thumb Code    88  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x08006e48   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    __arm_cp.1_0                             0x08006e9c   Number         4  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x08006ea0   Section        0  rtx_semaphore.o(.text.osSemaphoreAcquire)
    __arm_cp.2_0                             0x08006f1c   Number         4  rtx_semaphore.o(.text.osSemaphoreAcquire)
    [Anonymous Symbol]                       0x08006f20   Section        0  rtx_semaphore.o(.text.osSemaphoreNew)
    __arm_cp.0_0                             0x08006f60   Number         4  rtx_semaphore.o(.text.osSemaphoreNew)
    [Anonymous Symbol]                       0x08006f64   Section        0  rtx_semaphore.o(.text.osSemaphoreRelease)
    __arm_cp.3_0                             0x08006fec   Number         4  rtx_semaphore.o(.text.osSemaphoreRelease)
    [Anonymous Symbol]                       0x08006ff0   Section        0  rtx_thread.o(.text.osThreadExit)
    __arm_cp.32_0                            0x08007008   Number         4  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x0800700c   Section        0  rtx_thread.o(.text.osThreadGetId)
    __arm_cp.20_0                            0x0800702c   Number         4  rtx_thread.o(.text.osThreadGetId)
    [Anonymous Symbol]                       0x08007030   Section        0  rtx_thread.o(.text.osThreadNew)
    __arm_cp.18_0                            0x08007070   Number         4  rtx_thread.o(.text.osThreadNew)
    os_kernel_is_active                      0x08007075   Thumb Code    32  rtx_lib.o(.text.os_kernel_is_active)
    [Anonymous Symbol]                       0x08007074   Section        0  rtx_lib.o(.text.os_kernel_is_active)
    __arm_cp.2_0                             0x08007090   Number         4  rtx_lib.o(.text.os_kernel_is_active)
    [Anonymous Symbol]                       0x08007094   Section        0  serial.o(.text.registerSerial)
    __arm_cp.5_0                             0x080070e4   Number         4  serial.o(.text.registerSerial)
    __arm_cp.5_1                             0x080070e8   Number         4  serial.o(.text.registerSerial)
    __arm_cp.5_2                             0x080070ec   Number         4  serial.o(.text.registerSerial)
    __arm_cp.5_3                             0x080070f0   Number         4  serial.o(.text.registerSerial)
    __arm_cp.5_5                             0x08007110   Number         4  serial.o(.text.registerSerial)
    __arm_cp.5_6                             0x08007114   Number         4  serial.o(.text.registerSerial)
    [Anonymous Symbol]                       0x08007118   Section        0  serial.o(.text.restartDMA)
    svcRtxDelay                              0x08007161   Thumb Code    40  rtx_delay.o(.text.svcRtxDelay)
    [Anonymous Symbol]                       0x08007160   Section        0  rtx_delay.o(.text.svcRtxDelay)
    __arm_cp.2_0                             0x08007184   Number         4  rtx_delay.o(.text.svcRtxDelay)
    svcRtxKernelGetState                     0x08007189   Thumb Code    20  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x08007188   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    __arm_cp.5_0                             0x08007198   Number         4  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelGetTickFreq                  0x0800719d   Thumb Code    20  rtx_kernel.o(.text.svcRtxKernelGetTickFreq)
    [Anonymous Symbol]                       0x0800719c   Section        0  rtx_kernel.o(.text.svcRtxKernelGetTickFreq)
    __arm_cp.15_0                            0x080071ac   Number         4  rtx_kernel.o(.text.svcRtxKernelGetTickFreq)
    svcRtxKernelInitialize                   0x080071b1   Thumb Code   348  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x080071b0   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.20_2                            0x08007300   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelStart                        0x08007305   Thumb Code   164  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x08007304   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_1                            0x08007398   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_2                            0x0800739c   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_3                            0x080073a0   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxMessageQueueGet                    0x080073a5   Thumb Code   272  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x080073a4   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    __arm_cp.21_0                            0x080074b0   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueNew                    0x080074b5   Thumb Code   328  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x080074b4   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_1                            0x080075f4   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueuePut                    0x080075f9   Thumb Code   236  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x080075f8   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    __arm_cp.19_0                            0x080076e0   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMutexAcquire                       0x080076e5   Thumb Code   212  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x080076e4   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    __arm_cp.9_0                             0x080077b4   Number         4  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexDelete                        0x080077b9   Thumb Code   200  rtx_mutex.o(.text.svcRtxMutexDelete)
    [Anonymous Symbol]                       0x080077b8   Section        0  rtx_mutex.o(.text.svcRtxMutexDelete)
    svcRtxMutexNew                           0x0800787d   Thumb Code   128  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x0800787c   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    __arm_cp.7_0                             0x080078f8   Number         4  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexRelease                       0x080078fd   Thumb Code   236  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x080078fc   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    svcRtxSemaphoreAcquire                   0x080079e5   Thumb Code   136  rtx_semaphore.o(.text.svcRtxSemaphoreAcquire)
    [Anonymous Symbol]                       0x080079e4   Section        0  rtx_semaphore.o(.text.svcRtxSemaphoreAcquire)
    __arm_cp.10_0                            0x08007a68   Number         4  rtx_semaphore.o(.text.svcRtxSemaphoreAcquire)
    svcRtxSemaphoreNew                       0x08007a6d   Thumb Code   160  rtx_semaphore.o(.text.svcRtxSemaphoreNew)
    [Anonymous Symbol]                       0x08007a6c   Section        0  rtx_semaphore.o(.text.svcRtxSemaphoreNew)
    __arm_cp.7_1                             0x08007b04   Number         4  rtx_semaphore.o(.text.svcRtxSemaphoreNew)
    svcRtxSemaphoreRelease                   0x08007b09   Thumb Code   134  rtx_semaphore.o(.text.svcRtxSemaphoreRelease)
    [Anonymous Symbol]                       0x08007b08   Section        0  rtx_semaphore.o(.text.svcRtxSemaphoreRelease)
    svcRtxThreadExit                         0x08007b91   Thumb Code   124  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x08007b90   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadGetId                        0x08007c09   Thumb Code    20  rtx_thread.o(.text.svcRtxThreadGetId)
    [Anonymous Symbol]                       0x08007c08   Section        0  rtx_thread.o(.text.svcRtxThreadGetId)
    __arm_cp.21_0                            0x08007c18   Number         4  rtx_thread.o(.text.svcRtxThreadGetId)
    svcRtxThreadNew                          0x08007c1d   Thumb Code   492  rtx_thread.o(.text.svcRtxThreadNew)
    [Anonymous Symbol]                       0x08007c1c   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.17_0                            0x08007df4   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.17_1                            0x08007df8   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.17_2                            0x08007dfc   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.17_3                            0x08007e00   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.17_4                            0x08007e04   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    CL$$btod_d2e                             0x08007e08   Section       62  btod.o(CL$$btod_d2e)
    CL$$btod_d2e_denorm_low                  0x08007e46   Section       70  btod.o(CL$$btod_d2e_denorm_low)
    CL$$btod_d2e_norm_op1                    0x08007e8c   Section       96  btod.o(CL$$btod_d2e_norm_op1)
    CL$$btod_div_common                      0x08007eec   Section      824  btod.o(CL$$btod_div_common)
    CL$$btod_e2e                             0x08008224   Section      220  btod.o(CL$$btod_e2e)
    CL$$btod_ediv                            0x08008300   Section       42  btod.o(CL$$btod_ediv)
    CL$$btod_emul                            0x0800832a   Section       42  btod.o(CL$$btod_emul)
    CL$$btod_mult_common                     0x08008354   Section      580  btod.o(CL$$btod_mult_common)
    EvrFsEFS_FileHandleInvalid               0x08008599   Thumb Code    12  fs_efs.o(i.EvrFsEFS_FileHandleInvalid)
    i.EvrFsEFS_FileHandleInvalid             0x08008598   Section        0  fs_efs.o(i.EvrFsEFS_FileHandleInvalid)
    EvrFsEFS_FileName                        0x080085a5   Thumb Code    10  fs_efs.o(i.EvrFsEFS_FileName)
    i.EvrFsEFS_FileName                      0x080085a4   Section        0  fs_efs.o(i.EvrFsEFS_FileName)
    EvrFsEFS_FileNotOpened                   0x080085b5   Thumb Code    12  fs_efs.o(i.EvrFsEFS_FileNotOpened)
    i.EvrFsEFS_FileNotOpened                 0x080085b4   Section        0  fs_efs.o(i.EvrFsEFS_FileNotOpened)
    EvrFsEFS_FlashReadFailed                 0x080085c1   Thumb Code    20  fs_efs.o(i.EvrFsEFS_FlashReadFailed)
    i.EvrFsEFS_FlashReadFailed               0x080085c0   Section        0  fs_efs.o(i.EvrFsEFS_FlashReadFailed)
    EvrFsEFS_FlashReadTimeout                0x080085d5   Thumb Code    20  fs_efs.o(i.EvrFsEFS_FlashReadTimeout)
    i.EvrFsEFS_FlashReadTimeout              0x080085d4   Section        0  fs_efs.o(i.EvrFsEFS_FlashReadTimeout)
    i.__ARM_fpclassify                       0x080085e8   Section        0  fpclassify.o(i.__ARM_fpclassify)
    i.__sys_close                            0x08008618   Section        0  fs_sys.o(i.__sys_close)
    i.__sys_flen                             0x0800868c   Section        0  fs_sys.o(i.__sys_flen)
    i.__sys_open                             0x08008700   Section        0  fs_sys.o(i.__sys_open)
    i.__sys_read                             0x080087b0   Section        0  fs_sys.o(i.__sys_read)
    i.__sys_seek                             0x08008844   Section        0  fs_sys.o(i.__sys_seek)
    i.__sys_write                            0x080088cc   Section        0  fs_sys.o(i.__sys_write)
    i._is_digit                              0x08008954   Section        0  __printf_wp.o(i._is_digit)
    addr_of_block                            0x08008963   Thumb Code    18  fs_efs.o(i.addr_of_block)
    i.addr_of_block                          0x08008962   Section        0  fs_efs.o(i.addr_of_block)
    addr_of_sign                             0x08008975   Thumb Code    28  fs_efs.o(i.addr_of_sign)
    i.addr_of_sign                           0x08008974   Section        0  fs_efs.o(i.addr_of_sign)
    block_erase                              0x08008991   Thumb Code   110  fs_efs.o(i.block_erase)
    i.block_erase                            0x08008990   Section        0  fs_efs.o(i.block_erase)
    block_read                               0x080089ff   Thumb Code   536  fs_efs.o(i.block_read)
    i.block_read                             0x080089fe   Section        0  fs_efs.o(i.block_read)
    block_write                              0x08008c17   Thumb Code   128  fs_efs.o(i.block_write)
    i.block_write                            0x08008c16   Section        0  fs_efs.o(i.block_write)
    efs_AllocBlock                           0x08008c97   Thumb Code   154  fs_efs.o(i.efs_AllocBlock)
    i.efs_AllocBlock                         0x08008c96   Section        0  fs_efs.o(i.efs_AllocBlock)
    efs_BlockInvalid                         0x08008d31   Thumb Code    54  fs_efs.o(i.efs_BlockInvalid)
    i.efs_BlockInvalid                       0x08008d30   Section        0  fs_efs.o(i.efs_BlockInvalid)
    i.efs_DrvEvent                           0x08008d66   Section        0  fs_efs.o(i.efs_DrvEvent)
    i.efs_close                              0x08008d70   Section        0  fs_efs.o(i.efs_close)
    i.efs_ffind                              0x08008e00   Section        0  fs_efs.o(i.efs_ffind)
    i.efs_flen                               0x08008ef4   Section        0  fs_efs.o(i.efs_flen)
    efs_get_freeMem                          0x08008f41   Thumb Code    66  fs_efs.o(i.efs_get_freeMem)
    i.efs_get_freeMem                        0x08008f40   Section        0  fs_efs.o(i.efs_get_freeMem)
    i.efs_handle_get                         0x08008f84   Section        0  fs_efs.o(i.efs_handle_get)
    i.efs_init                               0x08008fd0   Section        0  fs_efs.o(i.efs_init)
    efs_is_busy                              0x0800903d   Thumb Code    44  fs_efs.o(i.efs_is_busy)
    i.efs_is_busy                            0x0800903c   Section        0  fs_efs.o(i.efs_is_busy)
    efs_mark_fileMem                         0x08009071   Thumb Code   138  fs_efs.o(i.efs_mark_fileMem)
    i.efs_mark_fileMem                       0x08009070   Section        0  fs_efs.o(i.efs_mark_fileMem)
    efs_mark_freeMem                         0x080090fb   Thumb Code    68  fs_efs.o(i.efs_mark_freeMem)
    i.efs_mark_freeMem                       0x080090fa   Section        0  fs_efs.o(i.efs_mark_freeMem)
    i.efs_mount                              0x08009140   Section        0  fs_efs.o(i.efs_mount)
    i.efs_open                               0x0800920c   Section        0  fs_efs.o(i.efs_open)
    efs_rd                                   0x0800935d   Thumb Code   126  fs_efs.o(i.efs_rd)
    i.efs_rd                                 0x0800935c   Section        0  fs_efs.o(i.efs_rd)
    i.efs_read                               0x080093dc   Section        0  fs_efs.o(i.efs_read)
    i.efs_seek                               0x08009468   Section        0  fs_efs.o(i.efs_seek)
    i.efs_uninit                             0x08009564   Section        0  fs_efs.o(i.efs_uninit)
    i.efs_unmount                            0x080095b0   Section        0  fs_efs.o(i.efs_unmount)
    efs_vol_chk                              0x08009611   Thumb Code    62  fs_efs.o(i.efs_vol_chk)
    i.efs_vol_chk                            0x08009610   Section        0  fs_efs.o(i.efs_vol_chk)
    efs_wr                                   0x0800964f   Thumb Code   294  fs_efs.o(i.efs_wr)
    i.efs_wr                                 0x0800964e   Section        0  fs_efs.o(i.efs_wr)
    i.efs_write                              0x08009774   Section        0  fs_efs.o(i.efs_write)
    falloc_read                              0x0800980d   Thumb Code   130  fs_efs.o(i.falloc_read)
    i.falloc_read                            0x0800980c   Section        0  fs_efs.o(i.falloc_read)
    falloc_write                             0x08009895   Thumb Code    56  fs_efs.o(i.falloc_write)
    i.falloc_write                           0x08009894   Section        0  fs_efs.o(i.falloc_write)
    i.ffind                                  0x080098d0   Section        0  fs_mapi.o(i.ffind)
    i.fgetc                                  0x080099c4   Section        0  fgetc.o(i.fgetc)
    file_create                              0x080099dd   Thumb Code   298  fs_efs.o(i.file_create)
    i.file_create                            0x080099dc   Section        0  fs_efs.o(i.file_create)
    file_delete                              0x08009b07   Thumb Code   152  fs_efs.o(i.file_delete)
    i.file_delete                            0x08009b06   Section        0  fs_efs.o(i.file_delete)
    file_find                                0x08009b9f   Thumb Code   156  fs_efs.o(i.file_find)
    i.file_find                              0x08009b9e   Section        0  fs_efs.o(i.file_find)
    file_id_alloc                            0x08009c3b   Thumb Code    90  fs_efs.o(i.file_id_alloc)
    i.file_id_alloc                          0x08009c3a   Section        0  fs_efs.o(i.file_id_alloc)
    file_name_validate                       0x08009c95   Thumb Code    74  fs_efs.o(i.file_name_validate)
    i.file_name_validate                     0x08009c94   Section        0  fs_efs.o(i.file_name_validate)
    file_size_get                            0x08009cdf   Thumb Code   126  fs_efs.o(i.file_size_get)
    i.file_size_get                          0x08009cde   Section        0  fs_efs.o(i.file_size_get)
    i.finit                                  0x08009d5c   Section        0  fs_mapi.o(i.finit)
    i.fmount                                 0x08009db4   Section        0  fs_mapi.o(i.fmount)
    fs_component_init                        0x08009e19   Thumb Code   134  fs_mapi.o(i.fs_component_init)
    i.fs_component_init                      0x08009e18   Section        0  fs_mapi.o(i.fs_component_init)
    i.fs_drive_id                            0x08009ec0   Section        0  fs_common.o(i.fs_drive_id)
    i.fs_set_cdrive                          0x08009f8c   Section        0  fs_common.o(i.fs_set_cdrive)
    i.fs_strmatch                            0x08009fac   Section        0  fs_common.o(i.fs_strmatch)
    i.fs_strncasecmp                         0x08009ffc   Section        0  fs_common.o(i.fs_strncasecmp)
    i.fs_strpos                              0x0800a03e   Section        0  fs_common.o(i.fs_strpos)
    i.funinit                                0x0800a058   Section        0  fs_mapi.o(i.funinit)
    i.funmount                               0x0800a0a0   Section        0  fs_mapi.o(i.funmount)
    i.get_u32                                0x0800a104   Section        0  fs_common.o(i.get_u32)
    sign_read                                0x0800a11b   Thumb Code   134  fs_efs.o(i.sign_read)
    i.sign_read                              0x0800a11a   Section        0  fs_efs.o(i.sign_read)
    sign_write                               0x0800a1a1   Thumb Code    42  fs_efs.o(i.sign_write)
    i.sign_write                             0x0800a1a0   Section        0  fs_efs.o(i.sign_write)
    locale$$code                             0x0800a1cc   Section       44  lc_numeric_c.o(locale$$code)
    locale$$code                             0x0800a1f8   Section       44  lc_ctype_c.o(locale$$code)
    $v0                                      0x0800a224   Number         0  fpinit.o(x$fpl$fpinit)
    x$fpl$fpinit                             0x0800a224   Section       26  fpinit.o(x$fpl$fpinit)
    $v0                                      0x0800a23e   Number         0  printf1.o(x$fpl$printf1)
    x$fpl$printf1                            0x0800a23e   Section        4  printf1.o(x$fpl$printf1)
    $v0                                      0x0800a242   Number         0  printf2.o(x$fpl$printf2)
    x$fpl$printf2                            0x0800a242   Section        4  printf2.o(x$fpl$printf2)
    x$fpl$usenofp                            0x0800a246   Section        0  usenofp.o(x$fpl$usenofp)
    initial_mbstate                          0x0800a248   Data           8  _printf_wctomb.o(.constdata)
    .constdata                               0x0800a248   Section        8  _printf_wctomb.o(.constdata)
    uc_hextab                                0x0800a250   Data          20  _printf_hex_int_ll_ptr.o(.constdata)
    .constdata                               0x0800a250   Section       40  _printf_hex_int_ll_ptr.o(.constdata)
    lc_hextab                                0x0800a264   Data          20  _printf_hex_int_ll_ptr.o(.constdata)
    maptable                                 0x0800a278   Data          17  __printf_flags_ss_wp.o(.constdata)
    .constdata                               0x0800a278   Section       17  __printf_flags_ss_wp.o(.constdata)
    lc_hextab                                0x0800a289   Data          19  _printf_fp_hex.o(.constdata)
    .constdata                               0x0800a289   Section       38  _printf_fp_hex.o(.constdata)
    uc_hextab                                0x0800a29c   Data          19  _printf_fp_hex.o(.constdata)
    tenpwrs_x                                0x0800a2b0   Data          60  bigflt0.o(.constdata)
    .constdata                               0x0800a2b0   Section      148  bigflt0.o(.constdata)
    tenpwrs_i                                0x0800a2ec   Data          64  bigflt0.o(.constdata)
    __tagsym$$used.4                         0x0800a344   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used.5                         0x0800a3ac   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used.0                         0x0800a428   Number         0  eventrecorder.o(.rodata.EventRecorderInfo)
    FlashInfo                                0x0800a440   Data          24  driver_flash.o(.rodata.FlashInfo)
    [Anonymous Symbol]                       0x0800a440   Section        0  driver_flash.o(.rodata.FlashInfo)
    fs_nor0_flash_tout                       0x0800a47c   Data           8  fs_config.o(.rodata.fs_nor0_flash_tout)
    [Anonymous Symbol]                       0x0800a47c   Section        0  fs_config.o(.rodata.fs_nor0_flash_tout)
    fs_nor0_mtx_at                           0x0800a484   Data          16  fs_config.o(.rodata.fs_nor0_mtx_at)
    [Anonymous Symbol]                       0x0800a484   Section        0  fs_config.o(.rodata.fs_nor0_mtx_at)
    os_idle_thread_attr                      0x0800a498   Data          36  rtx_lib.o(.rodata.os_idle_thread_attr)
    [Anonymous Symbol]                       0x0800a498   Section        0  rtx_lib.o(.rodata.os_idle_thread_attr)
    os_timer_mq_attr                         0x0800a4bc   Data          24  rtx_lib.o(.rodata.os_timer_mq_attr)
    [Anonymous Symbol]                       0x0800a4bc   Section        0  rtx_lib.o(.rodata.os_timer_mq_attr)
    os_timer_thread_attr                     0x0800a4d4   Data          36  rtx_lib.o(.rodata.os_timer_thread_attr)
    [Anonymous Symbol]                       0x0800a4d4   Section        0  rtx_lib.o(.rodata.os_timer_thread_attr)
    s_cmd_1                                  0x0800a4f8   Data         108  shell.o(.rodata.s_cmd_1)
    [Anonymous Symbol]                       0x0800a4f8   Section        0  shell.o(.rodata.s_cmd_1)
    .L.str                                   0x0800a564   Data          21  osmain.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0800a564   Section        0  osmain.o(.rodata.str1.1)
    .L.str.15                                0x0800a579   Data           5  osmain.o(.rodata.str1.1)
    .L.str.11                                0x0800a57e   Data          27  osmain.o(.rodata.str1.1)
    .L.str.13                                0x0800a599   Data          21  osmain.o(.rodata.str1.1)
    .L.str.16                                0x0800a5ae   Data           9  osmain.o(.rodata.str1.1)
    .L.str.10                                0x0800a5b7   Data           7  osmain.o(.rodata.str1.1)
    .L.str.1                                 0x0800a5be   Data           4  osmain.o(.rodata.str1.1)
    .L.str.6                                 0x0800a5c2   Data          35  osmain.o(.rodata.str1.1)
    .L.str.7                                 0x0800a5e5   Data           9  osmain.o(.rodata.str1.1)
    .L.str.3                                 0x0800a5ee   Data           2  osmain.o(.rodata.str1.1)
    .L.str.5                                 0x0800a5f0   Data          33  shell.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0800a5f0   Section        0  shell.o(.rodata.str1.1)
    .L.str.1                                 0x0800a611   Data          27  shell.o(.rodata.str1.1)
    .L.str.3                                 0x0800a62c   Data           4  shell.o(.rodata.str1.1)
    .L.str                                   0x0800a630   Data           3  shell.o(.rodata.str1.1)
    .L.str.4                                 0x0800a633   Data           3  shell.o(.rodata.str1.1)
    .L.str                                   0x0800a638   Data          11  rtx_kernel.o(.rodata.str1.4)
    [Anonymous Symbol]                       0x0800a638   Section        0  rtx_kernel.o(.rodata.str1.4)
    locale$$data                             0x0800a664   Section       28  lc_numeric_c.o(locale$$data)
    __lcnum_c_name                           0x0800a668   Data           2  lc_numeric_c.o(locale$$data)
    __lcnum_c_start                          0x0800a670   Data           0  lc_numeric_c.o(locale$$data)
    __lcnum_c_point                          0x0800a67c   Data           0  lc_numeric_c.o(locale$$data)
    __lcnum_c_thousands                      0x0800a67e   Data           0  lc_numeric_c.o(locale$$data)
    __lcnum_c_grouping                       0x0800a67f   Data           0  lc_numeric_c.o(locale$$data)
    __lcnum_c_end                            0x0800a680   Data           0  lc_numeric_c.o(locale$$data)
    locale$$data                             0x0800a680   Section      272  lc_ctype_c.o(locale$$data)
    __lcctype_c_name                         0x0800a684   Data           2  lc_ctype_c.o(locale$$data)
    __lcctype_c_start                        0x0800a68c   Data           0  lc_ctype_c.o(locale$$data)
    __lcctype_c_end                          0x0800a790   Data           0  lc_ctype_c.o(locale$$data)
    cfg_done                                 0x20000000   Data           1  fs_mapi.o(.data)
    .data                                    0x20000000   Section        1  fs_mapi.o(.data)
    fs_cdrive_id                             0x20000001   Data           1  fs_common.o(.data)
    .data                                    0x20000001   Section        1  fs_common.o(.data)
    .data                                    0x20000004   Section        4  streamlock.o(.data)
    .data                                    0x20000008   Section        4  stdio_streams.o(.data)
    .data                                    0x2000000c   Section        4  stdio_streams.o(.data)
    .data                                    0x20000010   Section        4  stdio_streams.o(.data)
    [Anonymous Symbol]                       0x20000014   Section        0  stm32f4xx_hal.o(.data..L_MergedGlobals)
    .bss                                     0x200003c0   Section       84  stdio_streams.o(.bss)
    .bss                                     0x20000414   Section       84  stdio_streams.o(.bss)
    .bss                                     0x20000468   Section       84  stdio_streams.o(.bss)
    .bss                                     0x200004bc   Section       96  libspace.o(.bss)
    [Anonymous Symbol]                       0x2000051c   Section        0  osmain.o(.bss..L_MergedGlobals)
    em_printf.busy                           0x20000528   Data           1  serial.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x20000528   Section        0  serial.o(.bss..L_MergedGlobals)
    m_consoleDev                             0x2000052c   Data           4  serial.o(.bss..L_MergedGlobals)
    FlashStatus                              0x20000530   Data           4  driver_flash.o(.bss.FlashStatus)
    [Anonymous Symbol]                       0x20000530   Section        0  driver_flash.o(.bss.FlashStatus)
    PendST                                   0x20000534   Data           1  os_systick.o(.bss.PendST)
    [Anonymous Symbol]                       0x20000534   Section        0  os_systick.o(.bss.PendST)
    fs_nor0_vol                              0x200005d4   Data          56  fs_config.o(.bss.fs_nor0_vol)
    [Anonymous Symbol]                       0x200005d4   Section        0  fs_config.o(.bss.fs_nor0_vol)
    EventBuffer                              0x200007c0   Data        1024  eventrecorder.o(.bss.noinit)
    [Anonymous Symbol]                       0x200007c0   Section        0  eventrecorder.o(.bss.noinit)
    EventFilter                              0x20000bc0   Data         128  eventrecorder.o(.bss.noinit)
    EventStatus                              0x20000c40   Data          36  eventrecorder.o(.bss.noinit)
    os_isr_queue                             0x20000c68   Data          64  rtx_lib.o(.bss.os)
    [Anonymous Symbol]                       0x20000c68   Section        0  rtx_lib.o(.bss.os)
    os_mem                                   0x20000ca8   Data        4096  rtx_lib.o(.bss.os)
    os_libspace_id                           0x20001ca8   Data          16  rtx_lib.o(.bss.os.libspace)
    [Anonymous Symbol]                       0x20001ca8   Section        0  rtx_lib.o(.bss.os.libspace)
    os_libspace                              0x20001cb8   Data         480  rtx_lib.o(.bss.os.libspace)
    os_timer_mq_cb                           0x20001e98   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    [Anonymous Symbol]                       0x20001e98   Section        0  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_data                         0x20001ecc   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    [Anonymous Symbol]                       0x20001ecc   Section        0  rtx_lib.o(.bss.os.msgqueue.mem)
    fs_nor0_mtx_cb                           0x20001f1c   Data          28  fs_config.o(.bss.os.mutex.cb)
    [Anonymous Symbol]                       0x20001f1c   Section        0  fs_config.o(.bss.os.mutex.cb)
    os_idle_thread_cb                        0x20001f38   Data          68  rtx_lib.o(.bss.os.thread.cb)
    [Anonymous Symbol]                       0x20001f38   Section        0  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x20001f7c   Data          68  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_stack                     0x20001fc0   Data         256  rtx_lib.o(.bss.os.thread.stack)
    [Anonymous Symbol]                       0x20001fc0   Section        0  rtx_lib.o(.bss.os.thread.stack)
    os_timer_thread_stack                    0x200020c0   Data         256  rtx_lib.o(.bss.os.thread.stack)
    os_kernel_is_active.os_kernel_active     0x200021c0   Data           1  rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active)
    [Anonymous Symbol]                       0x200021c0   Section        0  rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active)
    Heap_Mem                                 0x200021f0   Data       20480  startup_stm32f411xe.o(HEAP)
    HEAP                                     0x200021f0   Section    20480  startup_stm32f411xe.o(HEAP)
    Stack_Mem                                0x200071f0   Data        4096  startup_stm32f411xe.o(STACK)
    STACK                                    0x200071f0   Section     4096  startup_stm32f411xe.o(STACK)
    __initial_sp                             0x200081f0   Data           0  startup_stm32f411xe.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$IEEEJ$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  printf_stubs.o ABSOLUTE
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    __user_heap_extent                        - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _printf_mbtowc                            - Undefined Weak Reference
    _printf_wc                                - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _scanf_int                                - Undefined Weak Reference
    _scanf_longlong                           - Undefined Weak Reference
    _scanf_mbtowc                             - Undefined Weak Reference
    _scanf_real                               - Undefined Weak Reference
    _scanf_wctomb                             - Undefined Weak Reference
    _scanf_wstring                            - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    __Vectors_Size                           0x00000198   Number         0  startup_stm32f411xe.o ABSOLUTE
    __MW_FS_VER                              0x06120000   Number         0  fs_version.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f411xe.o(RESET)
    __Vectors_End                            0x08000198   Data           0  startup_stm32f411xe.o(RESET)
    __main                                   0x08000199   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080001a1   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080001a1   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080001a1   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x080001af   Thumb Code     0  __scatter.o(!!!scatter)
    __decompress                             0x080001d5   Thumb Code    58  __dczerorl.o(!!dczerorl)
    __decompress0                            0x080001d5   Thumb Code     0  __dczerorl.o(!!dczerorl)
    __scatterload_zeroinit                   0x08000211   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    _printf_n                                0x0800022d   Thumb Code     0  _printf_n.o(.ARM.Collect$$_printf_percent$$00000001)
    _printf_percent                          0x0800022d   Thumb Code     0  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    _printf_p                                0x08000233   Thumb Code     0  _printf_p.o(.ARM.Collect$$_printf_percent$$00000002)
    _printf_f                                0x08000239   Thumb Code     0  _printf_f.o(.ARM.Collect$$_printf_percent$$00000003)
    _printf_e                                0x0800023f   Thumb Code     0  _printf_e.o(.ARM.Collect$$_printf_percent$$00000004)
    _printf_g                                0x08000245   Thumb Code     0  _printf_g.o(.ARM.Collect$$_printf_percent$$00000005)
    _printf_a                                0x0800024b   Thumb Code     0  _printf_a.o(.ARM.Collect$$_printf_percent$$00000006)
    _printf_ll                               0x08000251   Thumb Code     0  _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007)
    _printf_i                                0x0800025b   Thumb Code     0  _printf_i.o(.ARM.Collect$$_printf_percent$$00000008)
    _printf_d                                0x08000261   Thumb Code     0  _printf_d.o(.ARM.Collect$$_printf_percent$$00000009)
    _printf_u                                0x08000267   Thumb Code     0  _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A)
    _printf_o                                0x0800026d   Thumb Code     0  _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B)
    _printf_x                                0x08000273   Thumb Code     0  _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C)
    _printf_lli                              0x08000279   Thumb Code     0  _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D)
    _printf_lld                              0x0800027f   Thumb Code     0  _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E)
    _printf_llu                              0x08000285   Thumb Code     0  _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F)
    _printf_llo                              0x0800028b   Thumb Code     0  _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010)
    _printf_llx                              0x08000291   Thumb Code     0  _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011)
    _printf_l                                0x08000297   Thumb Code     0  _printf_l.o(.ARM.Collect$$_printf_percent$$00000012)
    _printf_c                                0x080002a1   Thumb Code     0  _printf_c.o(.ARM.Collect$$_printf_percent$$00000013)
    _printf_s                                0x080002a7   Thumb Code     0  _printf_s.o(.ARM.Collect$$_printf_percent$$00000014)
    _printf_lc                               0x080002ad   Thumb Code     0  _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015)
    _printf_ls                               0x080002b3   Thumb Code     0  _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016)
    _printf_percent_end                      0x080002b9   Thumb Code     0  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    __rt_lib_init                            0x080002bd   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x080002bf   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_heap_2                     0x080002c3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000005)
    __rt_lib_init_preinit_1                  0x080002c3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_heap_1                     0x080002cb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_common                  0x080002cb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000F)
    __rt_lib_init_rand_1                     0x080002cb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_user_alloc_1               0x080002cb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x080002d1   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_2                 0x080002d1   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000012)
    __rt_lib_init_lc_ctype_1                 0x080002dd   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x080002dd   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_2               0x080002dd   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000016)
    __rt_lib_init_atexit_1                   0x080002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x080002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_fp_trap_1                  0x080002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x080002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_lc_numeric_1               0x080002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x080002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_signal_1                   0x080002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_2                    0x080002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000024)
    __rt_lib_init_alloca_1                   0x080002eb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x080002eb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_cpp_1                      0x080002eb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x080002eb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_return                     0x080002eb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_stdio_1                    0x080002eb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_shutdown                        0x080002ed   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x080002ef   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_stdio_2                0x080002ef   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000003)
    __rt_lib_shutdown_fp_trap_1              0x080002f3   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_2                 0x080002f3   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D)
    __rt_lib_shutdown_signal_1               0x080002f3   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x080002f3   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x080002f3   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_lib_shutdown_heap_1                 0x080002f7   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x080002f7   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_entry                               0x080002f9   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x080002f9   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x080002f9   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x080002ff   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x08000307   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x0800030b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x0800030b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x08000313   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x08000315   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x08000315   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x08000319   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x08000321   Thumb Code     8  startup_stm32f411xe.o(.text)
    ADC_IRQHandler                           0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA1_Stream0_IRQHandler                  0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA1_Stream1_IRQHandler                  0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA1_Stream2_IRQHandler                  0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA1_Stream3_IRQHandler                  0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA1_Stream4_IRQHandler                  0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA1_Stream5_IRQHandler                  0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA1_Stream6_IRQHandler                  0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA1_Stream7_IRQHandler                  0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA2_Stream0_IRQHandler                  0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA2_Stream1_IRQHandler                  0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA2_Stream3_IRQHandler                  0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA2_Stream4_IRQHandler                  0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA2_Stream5_IRQHandler                  0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA2_Stream6_IRQHandler                  0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    EXTI0_IRQHandler                         0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    EXTI15_10_IRQHandler                     0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    EXTI1_IRQHandler                         0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    EXTI2_IRQHandler                         0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    EXTI3_IRQHandler                         0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    EXTI4_IRQHandler                         0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    EXTI9_5_IRQHandler                       0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    FLASH_IRQHandler                         0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    FPU_IRQHandler                           0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    I2C1_ER_IRQHandler                       0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    I2C1_EV_IRQHandler                       0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    I2C2_ER_IRQHandler                       0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    I2C2_EV_IRQHandler                       0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    I2C3_ER_IRQHandler                       0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    I2C3_EV_IRQHandler                       0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    OTG_FS_IRQHandler                        0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    OTG_FS_WKUP_IRQHandler                   0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    PVD_IRQHandler                           0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    RCC_IRQHandler                           0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    RTC_Alarm_IRQHandler                     0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    RTC_WKUP_IRQHandler                      0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    SDIO_IRQHandler                          0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    SPI1_IRQHandler                          0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    SPI2_IRQHandler                          0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    SPI3_IRQHandler                          0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    SPI4_IRQHandler                          0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    SPI5_IRQHandler                          0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    TAMP_STAMP_IRQHandler                    0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    TIM1_BRK_TIM9_IRQHandler                 0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    TIM1_CC_IRQHandler                       0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    TIM1_UP_TIM10_IRQHandler                 0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    TIM2_IRQHandler                          0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    TIM3_IRQHandler                          0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    TIM4_IRQHandler                          0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    TIM5_IRQHandler                          0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    USART2_IRQHandler                        0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    USART6_IRQHandler                        0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    WWDG_IRQHandler                          0x0800033b   Thumb Code     0  startup_stm32f411xe.o(.text)
    __user_initial_stackheap                 0x0800033d   Thumb Code     0  startup_stm32f411xe.o(.text)
    SVC_Handler                              0x08000361   Thumb Code   152  irq_cm4f.o(.text)
    PendSV_Handler                           0x080003f9   Thumb Code    16  irq_cm4f.o(.text)
    SysTick_Handler                          0x08000409   Thumb Code    16  irq_cm4f.o(.text)
    malloc_internal$concurrent               0x08000435   Thumb Code   130  h1_alloc_threads.o(.text)
    malloc                                   0x080004b7   Thumb Code    20  h1_alloc_threads.o(.text)
    __aeabi_uldivmod                         0x080004cb   Thumb Code     0  lludivv7m.o(.text)
    _ll_udiv                                 0x080004cb   Thumb Code   238  lludivv7m.o(.text)
    vsnprintf                                0x080005b9   Thumb Code    48  vsnprintf.o(.text)
    __0fscanf                                0x080005ed   Thumb Code    24  __0fscanf.o(.text)
    __0sscanf                                0x08000605   Thumb Code    52  __0sscanf.o(.text)
    _scanf_string                            0x08000641   Thumb Code   224  _scanf_str.o(.text)
    _fclose$unlocked                         0x08000721   Thumb Code     0  fclose.o(.text)
    _fclose_internal                         0x08000721   Thumb Code    76  fclose.o(.text)
    fclose                                   0x0800076d   Thumb Code    46  fclose_locked.o(.text)
    _do_fflush                               0x080007a1   Thumb Code    74  fflush_locked.o(.text)
    $Super$$fflush                           0x080007eb   Thumb Code    60  fflush_locked.o(.text)
    freopen                                  0x080008df   Thumb Code    42  fopen_locked.o(.text)
    fopen                                    0x08000909   Thumb Code   100  fopen_locked.o(.text)
    strlen                                   0x08000975   Thumb Code    62  strlen.o(.text)
    __aeabi_memcpy                           0x080009b3   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x080009b3   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x08000a19   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memcpy4                          0x08000a3d   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x08000a3d   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x08000a3d   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x08000a85   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memclr                           0x08000aa1   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x08000aa1   Thumb Code    68  rt_memclr.o(.text)
    _memset                                  0x08000aa5   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr4                          0x08000ae5   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x08000ae5   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x08000ae5   Thumb Code    78  rt_memclr_w.o(.text)
    _memset_w                                0x08000ae9   Thumb Code     0  rt_memclr_w.o(.text)
    strcmp                                   0x08000b39   Thumb Code   124  strcmpv7em.o(.text)
    __use_two_region_memory                  0x08000bb5   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow                         0x08000bb7   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand                         0x08000bb9   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_descriptor                     0x08000bbb   Thumb Code    10  rt_heap_descriptor_twolibspace.o(.text)
    __use_no_heap                            0x08000bc5   Thumb Code     2  hguard.o(.text)
    __heap$guard                             0x08000bc7   Thumb Code     2  hguard.o(.text)
    _terminate_user_alloc                    0x08000bc9   Thumb Code     2  init_alloc.o(.text)
    _init_user_alloc                         0x08000bcb   Thumb Code     2  init_alloc.o(.text)
    __Heap_Full                              0x08000bcd   Thumb Code    34  init_alloc.o(.text)
    __Heap_Broken                            0x08000bef   Thumb Code     6  init_alloc.o(.text)
    _init_alloc                              0x08000bf5   Thumb Code    94  init_alloc.o(.text)
    __Heap_Initialize                        0x08000c53   Thumb Code    14  h1_init_threads.o(.text)
    __Heap_DescSize                          0x08000c61   Thumb Code     4  h1_init_threads.o(.text)
    free_internal$concurrent                 0x08000c65   Thumb Code    98  h1_free_threads.o(.text)
    free                                     0x08000cc7   Thumb Code    20  h1_free_threads.o(.text)
    _printf_pre_padding                      0x08000cdb   Thumb Code    44  _printf_pad.o(.text)
    _printf_post_padding                     0x08000d07   Thumb Code    34  _printf_pad.o(.text)
    _printf_truncate_signed                  0x08000d29   Thumb Code    18  _printf_truncate.o(.text)
    _printf_truncate_unsigned                0x08000d3b   Thumb Code    18  _printf_truncate.o(.text)
    _printf_str                              0x08000d4d   Thumb Code    82  _printf_str.o(.text)
    _printf_int_dec                          0x08000da1   Thumb Code   104  _printf_dec.o(.text)
    _printf_charcount                        0x08000e19   Thumb Code    40  _printf_charcount.o(.text)
    _printf_char_common                      0x08000e4b   Thumb Code    32  _printf_char_common.o(.text)
    _sputc                                   0x08000e71   Thumb Code    10  _sputc.o(.text)
    _snputc                                  0x08000e7b   Thumb Code    16  _snputc.o(.text)
    _printf_wctomb                           0x08000e8d   Thumb Code   182  _printf_wctomb.o(.text)
    _printf_longlong_dec                     0x08000f49   Thumb Code   108  _printf_longlong_dec.o(.text)
    _printf_longlong_oct                     0x08000fc5   Thumb Code    68  _printf_oct_int_ll.o(.text)
    _printf_int_oct                          0x08001009   Thumb Code    24  _printf_oct_int_ll.o(.text)
    _printf_ll_oct                           0x08001021   Thumb Code    12  _printf_oct_int_ll.o(.text)
    _printf_longlong_hex                     0x08001035   Thumb Code    86  _printf_hex_int_ll_ptr.o(.text)
    _printf_int_hex                          0x0800108b   Thumb Code    28  _printf_hex_int_ll_ptr.o(.text)
    _printf_ll_hex                           0x080010a7   Thumb Code    12  _printf_hex_int_ll_ptr.o(.text)
    _printf_hex_ptr                          0x080010b3   Thumb Code    18  _printf_hex_int_ll_ptr.o(.text)
    __printf                                 0x080010c9   Thumb Code   388  __printf_flags_ss_wp.o(.text)
    __vfscanf_char                           0x0800125d   Thumb Code    24  scanf_char.o(.text)
    _sgetc                                   0x0800127d   Thumb Code    30  _sgetc.o(.text)
    _sbackspace                              0x0800129b   Thumb Code    34  _sgetc.o(.text)
    _fseek                                   0x080012bd   Thumb Code   242  fseek.o(.text)
    fseek                                    0x080012bd   Thumb Code     0  fseek.o(.text)
    _seterr                                  0x080013b5   Thumb Code    20  stdio.o(.text)
    _writebuf                                0x080013c9   Thumb Code    84  stdio.o(.text)
    _fflush                                  0x0800141d   Thumb Code    70  stdio.o(.text)
    _deferredlazyseek                        0x08001463   Thumb Code    60  stdio.o(.text)
    __user_libspace                          0x080014a5   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x080014a5   Thumb Code     0  libspace.o(.text)
    _maybe_terminate_alloc                   0x080014ad   Thumb Code     0  maybetermalloc2.o(.text)
    __Heap_ProvideMemory                     0x080014bb   Thumb Code    68  h1_extend_threads.o(.text)
    _ll_udiv10                               0x080014ff   Thumb Code   138  lludiv10.o(.text)
    isspace                                  0x08001589   Thumb Code    18  isspace.o(.text)
    _printf_int_common                       0x0800159b   Thumb Code   178  _printf_intcommon.o(.text)
    _printf_fp_dec_real                      0x080017fd   Thumb Code   620  _printf_fp_dec.o(.text)
    _printf_fp_hex_real                      0x08001a69   Thumb Code   756  _printf_fp_hex.o(.text)
    _printf_cs_common                        0x08001d65   Thumb Code    20  _printf_char.o(.text)
    _printf_char                             0x08001d79   Thumb Code    16  _printf_char.o(.text)
    _printf_string                           0x08001d89   Thumb Code     8  _printf_char.o(.text)
    _printf_lcs_common                       0x08001d91   Thumb Code    20  _printf_wchar.o(.text)
    _printf_wchar                            0x08001da5   Thumb Code    16  _printf_wchar.o(.text)
    _printf_wstring                          0x08001db5   Thumb Code     8  _printf_wchar.o(.text)
    __vfscanf                                0x08001dbd   Thumb Code   878  _scanf.o(.text)
    ___backspace$unlocked$orig               0x08002131   Thumb Code     2  backspace.o(.text)
    ___backspace$unlocked                    0x08002133   Thumb Code    70  backspace.o(.text)
    __flsbuf                                 0x08002179   Thumb Code   470  flsbuf.o(.text)
    __flsbuf_byte                            0x08002179   Thumb Code     0  flsbuf.o(.text)
    __flsbuf_wide                            0x08002179   Thumb Code     0  flsbuf.o(.text)
    _ftell_internal                          0x0800234f   Thumb Code    66  ftell.o(.text)
    ftell                                    0x0800234f   Thumb Code     0  ftell.o(.text)
    _initio                                  0x08002391   Thumb Code   240  initio_locked.o(.text)
    _terminateio                             0x08002481   Thumb Code   168  initio_locked.o(.text)
    _c16rtomb                                0x08002559   Thumb Code    72  _c16rtomb.o(.text)
    _wcrtomb                                 0x08002559   Thumb Code     0  _c16rtomb.o(.text)
    __rt_SIGRTMEM                            0x080025a1   Thumb Code    14  defsig_rtmem_outer.o(.text)
    __I$use$semihosting                      0x080025af   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x080025af   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x080025b1   Thumb Code     0  indicate_semi.o(.text)
    __user_setup_stackheap                   0x080025b1   Thumb Code    74  sys_stackheap_outer.o(.text)
    __rt_ctype_table                         0x080025fd   Thumb Code    16  rt_ctype_table.o(.text)
    __rt_locale                              0x0800260d   Thumb Code    10  rt_locale_twolibspace.o(.text)
    __aeabi_errno_addr                       0x08002617   Thumb Code     4  rt_errno_addr_twolibspace.o(.text)
    __errno$twolibspace                      0x08002617   Thumb Code     0  rt_errno_addr_twolibspace.o(.text)
    __rt_errno_addr$twolibspace              0x08002617   Thumb Code     0  rt_errno_addr_twolibspace.o(.text)
    _terminate_alloc                         0x0800261b   Thumb Code    16  term_alloc.o(.text)
    _printf_fp_infnan                        0x0800262d   Thumb Code   112  _printf_fp_infnan.o(.text)
    _btod_etento                             0x080026ad   Thumb Code   224  bigflt0.o(.text)
    _readbuf                                 0x08002791   Thumb Code    54  filbuf.o(.text)
    _seteof                                  0x080027c7   Thumb Code    40  filbuf.o(.text)
    __filbuf                                 0x080027ef   Thumb Code   476  filbuf.o(.text)
    __filbuf_byte                            0x080027ef   Thumb Code     0  filbuf.o(.text)
    __filbuf_wide                            0x080027ef   Thumb Code     0  filbuf.o(.text)
    _ungetc_internal                         0x080029cd   Thumb Code    60  ungetc.o(.text)
    ungetc                                   0x080029cd   Thumb Code     0  ungetc.o(.text)
    setvbuf                                  0x08002a15   Thumb Code   104  setvbuf_locked.o(.text)
    fwrite                                   0x08002a7d   Thumb Code   208  fwritefast_locked.o(.text)
    exit                                     0x08002b4d   Thumb Code    18  exit.o(.text)
    __sig_exit                               0x08002b5f   Thumb Code    10  defsig_exit.o(.text)
    __rt_SIGRTRED                            0x08002b69   Thumb Code    14  defsig_rtred_outer.o(.text)
    __rt_SIGRTMEM_inner                      0x08002b79   Thumb Code    22  defsig_rtmem_inner.o(.text)
    _sys_exit                                0x08002bc9   Thumb Code     8  sys_exit.o(.text)
    __Heap_Finalize                          0x08002bd5   Thumb Code    10  h1_final_threads.o(.text)
    __vfscanf_char_file                      0x08002be1   Thumb Code    56  scanf_char_file_locked.o(.text)
    _flushlinebuffered                       0x08002c21   Thumb Code    84  flushlinebuffered_locked.o(.text)
    __default_signal_display                 0x08002c7d   Thumb Code    50  defsig_general.o(.text)
    __rt_SIGRTRED_inner                      0x08002cb1   Thumb Code    14  defsig_rtred_inner.o(.text)
    _ttywrch                                 0x08002ce5   Thumb Code    14  sys_wrch.o(.text)
    ARM_Flash_EraseChip                      0x08002cf3   Thumb Code    10  driver_flash.o(.text.ARM_Flash_EraseChip)
    ARM_Flash_EraseSector                    0x08002cfd   Thumb Code    56  driver_flash.o(.text.ARM_Flash_EraseSector)
    ARM_Flash_GetCapabilities                0x08002d35   Thumb Code     4  driver_flash.o(.text.ARM_Flash_GetCapabilities)
    ARM_Flash_GetInfo                        0x08002d39   Thumb Code     8  driver_flash.o(.text.ARM_Flash_GetInfo)
    ARM_Flash_GetStatus                      0x08002d41   Thumb Code    16  driver_flash.o(.text.ARM_Flash_GetStatus)
    ARM_Flash_GetVersion                     0x08002d4d   Thumb Code     8  driver_flash.o(.text.ARM_Flash_GetVersion)
    ARM_Flash_Initialize                     0x08002d55   Thumb Code    36  driver_flash.o(.text.ARM_Flash_Initialize)
    ARM_Flash_PowerControl                   0x08002d79   Thumb Code    14  driver_flash.o(.text.ARM_Flash_PowerControl)
    ARM_Flash_ProgramData                    0x08002d87   Thumb Code    32  driver_flash.o(.text.ARM_Flash_ProgramData)
    ARM_Flash_ReadData                       0x08002da7   Thumb Code    16  driver_flash.o(.text.ARM_Flash_ReadData)
    ARM_Flash_Uninitialize                   0x08002db7   Thumb Code     4  driver_flash.o(.text.ARM_Flash_Uninitialize)
    BusFault_Handler                         0x08002dbb   Thumb Code     2  stm32f4xx_it.o(.text.BusFault_Handler)
    DMA2_Stream2_IRQHandler                  0x08002dbd   Thumb Code    12  stm32f4xx_it.o(.text.DMA2_Stream2_IRQHandler)
    DMA2_Stream7_IRQHandler                  0x08002dc9   Thumb Code    12  stm32f4xx_it.o(.text.DMA2_Stream7_IRQHandler)
    DebugMon_Handler                         0x08002e05   Thumb Code     2  stm32f4xx_it.o(.text.DebugMon_Handler)
    Error_Handler                            0x08002e07   Thumb Code     2  main.o(.text.Error_Handler)
    EventRecord2                             0x08002e61   Thumb Code    60  eventrecorder.o(.text.EventRecord2)
    EventRecord4                             0x08002e9d   Thumb Code   128  eventrecorder.o(.text.EventRecord4)
    EventRecordData                          0x08002f19   Thumb Code   272  eventrecorder.o(.text.EventRecordData)
    EventRecorderDisable                     0x08003121   Thumb Code   100  eventrecorder.o(.text.EventRecorderDisable)
    EventRecorderEnable                      0x08003181   Thumb Code   100  eventrecorder.o(.text.EventRecorderEnable)
    EventRecorderInitialize                  0x080031e5   Thumb Code   312  eventrecorder.o(.text.EventRecorderInitialize)
    EventRecorderStart                       0x08003319   Thumb Code    44  eventrecorder.o(.text.EventRecorderStart)
    EventRecorderTimerGetCount               0x08003345   Thumb Code    12  eventrecorder.o(.text.EventRecorderTimerGetCount)
    EventRecorderTimerGetFreq                0x08003351   Thumb Code    12  eventrecorder.o(.text.EventRecorderTimerGetFreq)
    EventRecorderTimerSetup                  0x0800335d   Thumb Code    32  eventrecorder.o(.text.EventRecorderTimerSetup)
    EvrRtxDelay                              0x0800337d   Thumb Code    16  rtx_evr.o(.text.EvrRtxDelay)
    EvrRtxDelayCompleted                     0x0800338d   Thumb Code    16  rtx_evr.o(.text.EvrRtxDelayCompleted)
    EvrRtxDelayError                         0x0800339d   Thumb Code    12  rtx_evr.o(.text.EvrRtxDelayError)
    EvrRtxDelayStarted                       0x080033a9   Thumb Code    16  rtx_evr.o(.text.EvrRtxDelayStarted)
    EvrRtxEventFlagsWaitTimeout              0x080033b9   Thumb Code    16  rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout)
    EvrRtxKernelError                        0x080033c9   Thumb Code    12  rtx_evr.o(.text.EvrRtxKernelError)
    EvrRtxKernelGetState                     0x080033d5   Thumb Code    16  rtx_evr.o(.text.EvrRtxKernelGetState)
    EvrRtxKernelGetTickFreq                  0x080033e5   Thumb Code    16  rtx_evr.o(.text.EvrRtxKernelGetTickFreq)
    EvrRtxKernelInitialize                   0x080033f5   Thumb Code    16  rtx_evr.o(.text.EvrRtxKernelInitialize)
    EvrRtxKernelInitialized                  0x08003405   Thumb Code    16  rtx_evr.o(.text.EvrRtxKernelInitialized)
    EvrRtxKernelStart                        0x08003415   Thumb Code    16  rtx_evr.o(.text.EvrRtxKernelStart)
    EvrRtxKernelStarted                      0x08003425   Thumb Code    16  rtx_evr.o(.text.EvrRtxKernelStarted)
    EvrRtxMemoryAlloc                        0x08003435   Thumb Code    24  rtx_evr.o(.text.EvrRtxMemoryAlloc)
    EvrRtxMemoryBlockAlloc                   0x0800344d   Thumb Code    16  rtx_evr.o(.text.EvrRtxMemoryBlockAlloc)
    EvrRtxMemoryBlockFree                    0x0800345d   Thumb Code    24  rtx_evr.o(.text.EvrRtxMemoryBlockFree)
    EvrRtxMemoryBlockInit                    0x08003475   Thumb Code    24  rtx_evr.o(.text.EvrRtxMemoryBlockInit)
    EvrRtxMemoryFree                         0x0800348d   Thumb Code    24  rtx_evr.o(.text.EvrRtxMemoryFree)
    EvrRtxMemoryInit                         0x080034a5   Thumb Code    22  rtx_evr.o(.text.EvrRtxMemoryInit)
    EvrRtxMemoryPoolAllocTimeout             0x080034bd   Thumb Code    16  rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout)
    EvrRtxMessageQueueCreated                0x080034cd   Thumb Code    16  rtx_evr.o(.text.EvrRtxMessageQueueCreated)
    EvrRtxMessageQueueError                  0x080034dd   Thumb Code    12  rtx_evr.o(.text.EvrRtxMessageQueueError)
    EvrRtxMessageQueueGet                    0x080034e9   Thumb Code    24  rtx_evr.o(.text.EvrRtxMessageQueueGet)
    EvrRtxMessageQueueGetPending             0x08003501   Thumb Code    24  rtx_evr.o(.text.EvrRtxMessageQueueGetPending)
    EvrRtxMessageQueueGetTimeout             0x08003519   Thumb Code    16  rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout)
    EvrRtxMessageQueueInsertPending          0x08003529   Thumb Code    16  rtx_evr.o(.text.EvrRtxMessageQueueInsertPending)
    EvrRtxMessageQueueInserted               0x08003539   Thumb Code    16  rtx_evr.o(.text.EvrRtxMessageQueueInserted)
    EvrRtxMessageQueueNew                    0x08003549   Thumb Code    24  rtx_evr.o(.text.EvrRtxMessageQueueNew)
    EvrRtxMessageQueueNotInserted            0x08003561   Thumb Code    16  rtx_evr.o(.text.EvrRtxMessageQueueNotInserted)
    EvrRtxMessageQueueNotRetrieved           0x08003571   Thumb Code    16  rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved)
    EvrRtxMessageQueuePut                    0x08003581   Thumb Code    24  rtx_evr.o(.text.EvrRtxMessageQueuePut)
    EvrRtxMessageQueuePutPending             0x08003599   Thumb Code    24  rtx_evr.o(.text.EvrRtxMessageQueuePutPending)
    EvrRtxMessageQueuePutTimeout             0x080035b1   Thumb Code    16  rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout)
    EvrRtxMessageQueueRetrieved              0x080035c1   Thumb Code    16  rtx_evr.o(.text.EvrRtxMessageQueueRetrieved)
    EvrRtxMutexAcquire                       0x080035d1   Thumb Code    16  rtx_evr.o(.text.EvrRtxMutexAcquire)
    EvrRtxMutexAcquirePending                0x080035e1   Thumb Code    16  rtx_evr.o(.text.EvrRtxMutexAcquirePending)
    EvrRtxMutexAcquireTimeout                0x080035f1   Thumb Code    16  rtx_evr.o(.text.EvrRtxMutexAcquireTimeout)
    EvrRtxMutexAcquired                      0x08003601   Thumb Code    16  rtx_evr.o(.text.EvrRtxMutexAcquired)
    EvrRtxMutexCreated                       0x08003611   Thumb Code    16  rtx_evr.o(.text.EvrRtxMutexCreated)
    EvrRtxMutexDelete                        0x08003621   Thumb Code    16  rtx_evr.o(.text.EvrRtxMutexDelete)
    EvrRtxMutexDestroyed                     0x08003631   Thumb Code    16  rtx_evr.o(.text.EvrRtxMutexDestroyed)
    EvrRtxMutexError                         0x08003641   Thumb Code    12  rtx_evr.o(.text.EvrRtxMutexError)
    EvrRtxMutexNew                           0x0800364d   Thumb Code    16  rtx_evr.o(.text.EvrRtxMutexNew)
    EvrRtxMutexNotAcquired                   0x0800365d   Thumb Code    16  rtx_evr.o(.text.EvrRtxMutexNotAcquired)
    EvrRtxMutexRelease                       0x0800366d   Thumb Code    16  rtx_evr.o(.text.EvrRtxMutexRelease)
    EvrRtxMutexReleased                      0x0800367d   Thumb Code    16  rtx_evr.o(.text.EvrRtxMutexReleased)
    EvrRtxSemaphoreAcquire                   0x0800368d   Thumb Code    16  rtx_evr.o(.text.EvrRtxSemaphoreAcquire)
    EvrRtxSemaphoreAcquirePending            0x0800369d   Thumb Code    16  rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending)
    EvrRtxSemaphoreAcquireTimeout            0x080036ad   Thumb Code    16  rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout)
    EvrRtxSemaphoreAcquired                  0x080036bd   Thumb Code    16  rtx_evr.o(.text.EvrRtxSemaphoreAcquired)
    EvrRtxSemaphoreCreated                   0x080036cd   Thumb Code    16  rtx_evr.o(.text.EvrRtxSemaphoreCreated)
    EvrRtxSemaphoreError                     0x080036dd   Thumb Code    12  rtx_evr.o(.text.EvrRtxSemaphoreError)
    EvrRtxSemaphoreNew                       0x080036e9   Thumb Code    24  rtx_evr.o(.text.EvrRtxSemaphoreNew)
    EvrRtxSemaphoreNotAcquired               0x08003701   Thumb Code    16  rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired)
    EvrRtxSemaphoreRelease                   0x08003711   Thumb Code    16  rtx_evr.o(.text.EvrRtxSemaphoreRelease)
    EvrRtxSemaphoreReleased                  0x08003721   Thumb Code    16  rtx_evr.o(.text.EvrRtxSemaphoreReleased)
    EvrRtxThreadBlocked                      0x08003731   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadBlocked)
    EvrRtxThreadCreated                      0x08003741   Thumb Code    24  rtx_evr.o(.text.EvrRtxThreadCreated)
    EvrRtxThreadDestroyed                    0x08003759   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadDestroyed)
    EvrRtxThreadError                        0x08003769   Thumb Code    12  rtx_evr.o(.text.EvrRtxThreadError)
    EvrRtxThreadExit                         0x08003775   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadExit)
    EvrRtxThreadFlagsWaitCompleted           0x08003785   Thumb Code    24  rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted)
    EvrRtxThreadFlagsWaitTimeout             0x0800379d   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout)
    EvrRtxThreadGetId                        0x080037ad   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadGetId)
    EvrRtxThreadJoined                       0x080037bd   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadJoined)
    EvrRtxThreadNew                          0x080037cd   Thumb Code    24  rtx_evr.o(.text.EvrRtxThreadNew)
    EvrRtxThreadPreempted                    0x080037e5   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadPreempted)
    EvrRtxThreadSwitched                     0x080037f5   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadSwitched)
    EvrRtxThreadUnblocked                    0x08003805   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadUnblocked)
    EvrRtxTimerCallback                      0x08003815   Thumb Code    16  rtx_evr.o(.text.EvrRtxTimerCallback)
    HAL_DMA_IRQHandler                       0x08003825   Thumb Code   368  stm32f4xx_hal_dma.o(.text.HAL_DMA_IRQHandler)
    HAL_DMA_Init                             0x08003995   Thumb Code   296  stm32f4xx_hal_dma.o(.text.HAL_DMA_Init)
    HAL_GPIO_Init                            0x08003abd   Thumb Code   396  stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init)
    HAL_GPIO_WritePin                        0x08003c45   Thumb Code    10  stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin)
    HAL_GetTick                              0x08003c51   Thumb Code    12  stm32f4xx_hal.o(.text.HAL_GetTick)
    HAL_IncTick                              0x08003c59   Thumb Code    24  stm32f4xx_hal.o(.text.HAL_IncTick)
    HAL_Init                                 0x08003c71   Thumb Code    52  stm32f4xx_hal.o(.text.HAL_Init)
    HAL_InitTick                             0x08003ca5   Thumb Code   120  stm32f4xx_hal_timebase_tim.o(.text.HAL_InitTick)
    HAL_MspInit                              0x08003d1d   Thumb Code    56  stm32f4xx_hal_msp.o(.text.HAL_MspInit)
    HAL_NVIC_EnableIRQ                       0x08003d55   Thumb Code    28  stm32f4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ)
    HAL_NVIC_SetPriority                     0x08003d71   Thumb Code    64  stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority)
    HAL_NVIC_SetPriorityGrouping             0x08003dad   Thumb Code    32  stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping)
    HAL_RCC_ClockConfig                      0x08003dcd   Thumb Code   292  stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    HAL_RCC_GetClockConfig                   0x08003eed   Thumb Code    60  stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig)
    HAL_RCC_GetPCLK1Freq                     0x08003f25   Thumb Code    32  stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq)
    HAL_RCC_GetPCLK2Freq                     0x08003f39   Thumb Code    32  stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq)
    HAL_RCC_GetSysClockFreq                  0x08003f59   Thumb Code    92  stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq)
    HAL_RCC_OscConfig                        0x08003fb5   Thumb Code   728  stm32f4xx_hal_rcc.o(.text.HAL_RCC_OscConfig)
    HAL_SPI_Init                             0x0800428d   Thumb Code   126  stm32f4xx_hal_spi.o(.text.HAL_SPI_Init)
    HAL_SPI_MspInit                          0x0800430d   Thumb Code   108  spi.o(.text.HAL_SPI_MspInit)
    HAL_SPI_Receive                          0x08004379   Thumb Code   302  stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive)
    HAL_SPI_TransmitReceive                  0x080044a7   Thumb Code   468  stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive)
    HAL_TIMEx_BreakCallback                  0x0800467b   Thumb Code     2  stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_BreakCallback)
    HAL_TIMEx_CommutCallback                 0x0800467d   Thumb Code     2  stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback)
    HAL_TIM_Base_Init                        0x0800467f   Thumb Code    52  stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Init)
    HAL_TIM_Base_MspInit                     0x080046b3   Thumb Code     2  stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_MspInit)
    HAL_TIM_Base_Start_IT                    0x080046b5   Thumb Code    32  stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT)
    HAL_TIM_IC_CaptureCallback               0x080046d5   Thumb Code     2  stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback)
    HAL_TIM_IRQHandler                       0x080046d7   Thumb Code   362  stm32f4xx_hal_tim.o(.text.HAL_TIM_IRQHandler)
    HAL_TIM_OC_DelayElapsedCallback          0x08004841   Thumb Code     2  stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback)
    HAL_TIM_PWM_PulseFinishedCallback        0x08004843   Thumb Code     2  stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback)
    HAL_TIM_PeriodElapsedCallback            0x08004845   Thumb Code    20  main.o(.text.HAL_TIM_PeriodElapsedCallback)
    HAL_TIM_TriggerCallback                  0x08004859   Thumb Code     2  stm32f4xx_hal_tim.o(.text.HAL_TIM_TriggerCallback)
    HAL_UART_Init                            0x0800485b   Thumb Code    92  stm32f4xx_hal_uart.o(.text.HAL_UART_Init)
    HAL_UART_MspInit                         0x080048b9   Thumb Code   240  usart.o(.text.HAL_UART_MspInit)
    HardFault_Handler                        0x080049a1   Thumb Code     2  stm32f4xx_it.o(.text.HardFault_Handler)
    MX_DMA_Init                              0x080049a5   Thumb Code    68  dma.o(.text.MX_DMA_Init)
    MX_GPIO_Init                             0x080049e5   Thumb Code   212  gpio.o(.text.MX_GPIO_Init)
    MX_SPI2_Init                             0x08004ab9   Thumb Code    68  spi.o(.text.MX_SPI2_Init)
    MX_USART1_UART_Init                      0x08004afd   Thumb Code    56  usart.o(.text.MX_USART1_UART_Init)
    MemManage_Handler                        0x08004b35   Thumb Code     2  stm32f4xx_it.o(.text.MemManage_Handler)
    NMI_Handler                              0x08004bf9   Thumb Code     2  stm32f4xx_it.o(.text.NMI_Handler)
    OS_Tick_AcknowledgeIRQ                   0x08004c09   Thumb Code    12  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    OS_Tick_Enable                           0x08004c11   Thumb Code    44  os_systick.o(.text.OS_Tick_Enable)
    OS_Tick_GetIRQn                          0x08004c35   Thumb Code     6  os_systick.o(.text.OS_Tick_GetIRQn)
    OS_Tick_Setup                            0x08004c3d   Thumb Code    64  os_systick.o(.text.OS_Tick_Setup)
    SystemClock_Config                       0x08004da1   Thumb Code   132  main.o(.text.SystemClock_Config)
    SystemCoreClockUpdate                    0x08004e25   Thumb Code   108  system_stm32f4xx.o(.text.SystemCoreClockUpdate)
    SystemInit                               0x08004e91   Thumb Code    76  system_stm32f4xx.o(.text.SystemInit)
    TIM1_TRG_COM_TIM11_IRQHandler            0x08004edd   Thumb Code    12  stm32f4xx_it.o(.text.TIM1_TRG_COM_TIM11_IRQHandler)
    TIM_Base_SetConfig                       0x08004ee9   Thumb Code   132  stm32f4xx_hal_tim.o(.text.TIM_Base_SetConfig)
    USART1_IRQHandler                        0x080051a5   Thumb Code    72  serial.o(.text.USART1_IRQHandler)
    UsageFault_Handler                       0x080051ed   Thumb Code     2  stm32f4xx_it.o(.text.UsageFault_Handler)
    W25qxx_EraseChip                         0x080051f1   Thumb Code    84  w25qxx.o(.text.W25qxx_EraseChip)
    W25qxx_EraseSector                       0x0800523d   Thumb Code   136  w25qxx.o(.text.W25qxx_EraseSector)
    W25qxx_Init                              0x080052b9   Thumb Code   196  w25qxx.o(.text.W25qxx_Init)
    W25qxx_ReadBytes                         0x08005379   Thumb Code   144  w25qxx.o(.text.W25qxx_ReadBytes)
    W25qxx_ReadID                            0x080053f9   Thumb Code    72  w25qxx.o(.text.W25qxx_ReadID)
    W25qxx_ReadStatusRegister                0x08005439   Thumb Code   116  w25qxx.o(.text.W25qxx_ReadStatusRegister)
    W25qxx_ReadUniqID                        0x080054a5   Thumb Code    84  w25qxx.o(.text.W25qxx_ReadUniqID)
    W25qxx_Spi                               0x080054f1   Thumb Code    40  w25qxx.o(.text.W25qxx_Spi)
    W25qxx_WaitForWriteEnd                   0x08005519   Thumb Code    76  w25qxx.o(.text.W25qxx_WaitForWriteEnd)
    W25qxx_WriteByte                         0x08005565   Thumb Code   132  w25qxx.o(.text.W25qxx_WriteByte)
    W25qxx_WriteEnable                       0x080055e5   Thumb Code    48  w25qxx.o(.text.W25qxx_WriteEnable)
    __user_perthread_libspace                0x08005639   Thumb Code    80  rtx_lib.o(.text.__user_perthread_libspace)
    _mutex_acquire                           0x08005689   Thumb Code    26  rtx_lib.o(.text._mutex_acquire)
    _mutex_free                              0x080056a3   Thumb Code     6  rtx_lib.o(.text._mutex_free)
    _mutex_initialize                        0x080056a9   Thumb Code    32  rtx_lib.o(.text._mutex_initialize)
    _mutex_release                           0x080056c9   Thumb Code    22  rtx_lib.o(.text._mutex_release)
    _platform_post_stackheap_init            0x080056df   Thumb Code     4  rtx_lib.o(.text._platform_post_stackheap_init)
    _sys_close                               0x080056e3   Thumb Code    18  retarget_io.o(.text._sys_close)
    _sys_flen                                0x080056f5   Thumb Code    18  retarget_io.o(.text._sys_flen)
    _sys_istty                               0x08005707   Thumb Code    16  retarget_io.o(.text._sys_istty)
    _sys_open                                0x08005719   Thumb Code    96  retarget_io.o(.text._sys_open)
    _sys_read                                0x08005779   Thumb Code    34  retarget_io.o(.text._sys_read)
    _sys_seek                                0x0800579b   Thumb Code    20  retarget_io.o(.text._sys_seek)
    _sys_write                               0x080057b1   Thumb Code    36  retarget_io.o(.text._sys_write)
    app_main                                 0x080057d5   Thumb Code   456  osmain.o(.text.app_main)
    app_pwm                                  0x0800599d   Thumb Code   160  osmain.o(.text.app_pwm)
    console_cmd_init                         0x08005c15   Thumb Code    16  shell.o(.text.console_cmd_init)
    console_line_handle                      0x08005c21   Thumb Code   376  shell.o(.text.console_line_handle)
    emHAL_UART_Transmit_DMA                  0x08005d99   Thumb Code    70  serial.o(.text.emHAL_UART_Transmit_DMA)
    em_printf                                0x08005de1   Thumb Code    76  serial.o(.text.em_printf)
    fat_close                                0x08005e2d   Thumb Code     4  fs_config.o(.text.fat_close)
    fat_ffind                                0x08005e31   Thumb Code     4  fs_config.o(.text.fat_ffind)
    fat_flen                                 0x08005e35   Thumb Code     6  fs_config.o(.text.fat_flen)
    fat_handle_get                           0x08005e3b   Thumb Code     6  fs_config.o(.text.fat_handle_get)
    fat_init                                 0x08005e41   Thumb Code     4  fs_config.o(.text.fat_init)
    fat_mount                                0x08005e45   Thumb Code     4  fs_config.o(.text.fat_mount)
    fat_open                                 0x08005e49   Thumb Code     4  fs_config.o(.text.fat_open)
    fat_read                                 0x08005e4d   Thumb Code     6  fs_config.o(.text.fat_read)
    fat_seek                                 0x08005e53   Thumb Code     4  fs_config.o(.text.fat_seek)
    fat_uninit                               0x08005e57   Thumb Code     4  fs_config.o(.text.fat_uninit)
    fat_unmount                              0x08005e5b   Thumb Code     4  fs_config.o(.text.fat_unmount)
    fat_write                                0x08005e5f   Thumb Code     6  fs_config.o(.text.fat_write)
    fs_config                                0x08005e65   Thumb Code    64  fs_config.o(.text.fs_config)
    fs_config_evr                            0x08005ea5   Thumb Code    80  fs_debug.o(.text.fs_config_evr)
    fs_get_rtos_tick_freq                    0x08005ef5   Thumb Code     4  fs_config.o(.text.fs_get_rtos_tick_freq)
    fs_mutex_acquire                         0x08005ef9   Thumb Code    18  fs_config.o(.text.fs_mutex_acquire)
    fs_mutex_delete                          0x08005f0b   Thumb Code    14  fs_config.o(.text.fs_mutex_delete)
    fs_mutex_release                         0x08005f19   Thumb Code    14  fs_config.o(.text.fs_mutex_release)
    fs_set_rtos_delay                        0x08005f29   Thumb Code    20  fs_config.o(.text.fs_set_rtos_delay)
    initSerial                               0x08006031   Thumb Code   100  serial.o(.text.initSerial)
    m_cmd_fun_help                           0x08006095   Thumb Code    68  shell.o(.text.m_cmd_fun_help)
    main                                     0x080060d9   Thumb Code    30  main.o(.text.main)
    mmdelay                                  0x080060f7   Thumb Code    14  w25qxx.o(.text.mmdelay)
    osDelay                                  0x08006105   Thumb Code    56  rtx_delay.o(.text.osDelay)
    osKernelGetState                         0x0800613d   Thumb Code    44  rtx_kernel.o(.text.osKernelGetState)
    osKernelGetTickFreq                      0x08006169   Thumb Code    36  rtx_kernel.o(.text.osKernelGetTickFreq)
    osKernelInitialize                       0x0800618d   Thumb Code    56  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x080061c5   Thumb Code    52  rtx_kernel.o(.text.osKernelStart)
    osMain                                   0x080061f9   Thumb Code   104  osmain.o(.text.osMain)
    osMessageQueueGet                        0x08006261   Thumb Code   148  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueueNew                        0x080062f5   Thumb Code    68  rtx_msgqueue.o(.text.osMessageQueueNew)
    osMessageQueuePut                        0x08006339   Thumb Code   152  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexAcquire                           0x080063d1   Thumb Code    60  rtx_mutex.o(.text.osMutexAcquire)
    osMutexDelete                            0x0800640d   Thumb Code    56  rtx_mutex.o(.text.osMutexDelete)
    osMutexNew                               0x08006445   Thumb Code    60  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x08006481   Thumb Code    56  rtx_mutex.o(.text.osMutexRelease)
    osRtxErrorNotify                         0x080064b9   Thumb Code     2  rtx_config.o(.text.osRtxErrorNotify)
    osRtxIdleThread                          0x080064bb   Thumb Code     2  rtx_config.o(.text.osRtxIdleThread)
    osRtxKernelPreInit                       0x080064bd   Thumb Code     2  rtx_kernel.o(.text.osRtxKernelPreInit)
    osRtxMemoryAlloc                         0x080064bf   Thumb Code   138  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x08006549   Thumb Code    82  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x0800659b   Thumb Code    62  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x080065d9   Thumb Code    68  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x0800661d   Thumb Code    86  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x08006673   Thumb Code    76  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMutexOwnerRelease                   0x080067b1   Thumb Code    90  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxPendSV_Handler                      0x0800680d   Thumb Code   144  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x08006899   Thumb Code   116  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadDelayTick                     0x08006a41   Thumb Code   188  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x08006af9   Thumb Code    92  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x08006ba9   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x08006bbd   Thumb Code    42  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x08006be7   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x08006c07   Thumb Code    40  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x08006c69   Thumb Code    20  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x08006c7d   Thumb Code    20  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStackCheck                    0x08006c91   Thumb Code    40  rtx_thread.o(.text.osRtxThreadStackCheck)
    osRtxThreadStartup                       0x08006cb5   Thumb Code    64  rtx_thread.o(.text.osRtxThreadStartup)
    osRtxThreadSwitch                        0x08006ced   Thumb Code    32  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x08006d0d   Thumb Code    76  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x08006d59   Thumb Code    56  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x08006d91   Thumb Code   120  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerThread                         0x08006e09   Thumb Code    68  rtx_timer.o(.text.osRtxTimerThread)
    osSemaphoreAcquire                       0x08006ea1   Thumb Code   128  rtx_semaphore.o(.text.osSemaphoreAcquire)
    osSemaphoreNew                           0x08006f21   Thumb Code    68  rtx_semaphore.o(.text.osSemaphoreNew)
    osSemaphoreRelease                       0x08006f65   Thumb Code   140  rtx_semaphore.o(.text.osSemaphoreRelease)
    osThreadExit                             0x08006ff1   Thumb Code    28  rtx_thread.o(.text.osThreadExit)
    osThreadGetId                            0x0800700d   Thumb Code    36  rtx_thread.o(.text.osThreadGetId)
    osThreadNew                              0x08007031   Thumb Code    68  rtx_thread.o(.text.osThreadNew)
    registerSerial                           0x08007095   Thumb Code   132  serial.o(.text.registerSerial)
    restartDMA                               0x08007119   Thumb Code    70  serial.o(.text.restartDMA)
    _btod_d2e                                0x08007e09   Thumb Code    62  btod.o(CL$$btod_d2e)
    _d2e_denorm_low                          0x08007e47   Thumb Code    70  btod.o(CL$$btod_d2e_denorm_low)
    _d2e_norm_op1                            0x08007e8d   Thumb Code    96  btod.o(CL$$btod_d2e_norm_op1)
    __btod_div_common                        0x08007eed   Thumb Code   696  btod.o(CL$$btod_div_common)
    _e2e                                     0x08008225   Thumb Code   220  btod.o(CL$$btod_e2e)
    _btod_ediv                               0x08008301   Thumb Code    42  btod.o(CL$$btod_ediv)
    _btod_emul                               0x0800832b   Thumb Code    42  btod.o(CL$$btod_emul)
    __btod_mult_common                       0x08008355   Thumb Code   580  btod.o(CL$$btod_mult_common)
    __ARM_fpclassify                         0x080085e9   Thumb Code    48  fpclassify.o(i.__ARM_fpclassify)
    __sys_close                              0x08008619   Thumb Code   102  fs_sys.o(i.__sys_close)
    __sys_flen                               0x0800868d   Thumb Code   104  fs_sys.o(i.__sys_flen)
    __sys_open                               0x08008701   Thumb Code   164  fs_sys.o(i.__sys_open)
    __sys_read                               0x080087b1   Thumb Code   136  fs_sys.o(i.__sys_read)
    __sys_seek                               0x08008845   Thumb Code   122  fs_sys.o(i.__sys_seek)
    __sys_write                              0x080088cd   Thumb Code   122  fs_sys.o(i.__sys_write)
    _is_digit                                0x08008955   Thumb Code    14  __printf_wp.o(i._is_digit)
    efs_DrvEvent                             0x08008d67   Thumb Code     8  fs_efs.o(i.efs_DrvEvent)
    efs_close                                0x08008d71   Thumb Code   130  fs_efs.o(i.efs_close)
    efs_ffind                                0x08008e01   Thumb Code   244  fs_efs.o(i.efs_ffind)
    efs_flen                                 0x08008ef5   Thumb Code    72  fs_efs.o(i.efs_flen)
    efs_handle_get                           0x08008f85   Thumb Code    66  fs_efs.o(i.efs_handle_get)
    efs_init                                 0x08008fd1   Thumb Code   102  fs_efs.o(i.efs_init)
    efs_mount                                0x08009141   Thumb Code   198  fs_efs.o(i.efs_mount)
    efs_open                                 0x0800920d   Thumb Code   324  fs_efs.o(i.efs_open)
    efs_read                                 0x080093dd   Thumb Code   128  fs_efs.o(i.efs_read)
    efs_seek                                 0x08009469   Thumb Code   244  fs_efs.o(i.efs_seek)
    efs_uninit                               0x08009565   Thumb Code    70  fs_efs.o(i.efs_uninit)
    efs_unmount                              0x080095b1   Thumb Code    84  fs_efs.o(i.efs_unmount)
    efs_write                                0x08009775   Thumb Code   138  fs_efs.o(i.efs_write)
    ffind                                    0x080098d1   Thumb Code   230  fs_mapi.o(i.ffind)
    _fgetc$unlocked                          0x080099c5   Thumb Code    24  fgetc.o(i.fgetc)
    finit                                    0x08009d5d   Thumb Code    78  fs_mapi.o(i.finit)
    fmount                                   0x08009db5   Thumb Code    92  fs_mapi.o(i.fmount)
    fs_drive_id                              0x08009ec1   Thumb Code   188  fs_common.o(i.fs_drive_id)
    fs_set_cdrive                            0x08009f8d   Thumb Code    24  fs_common.o(i.fs_set_cdrive)
    fs_strmatch                              0x08009fad   Thumb Code    80  fs_common.o(i.fs_strmatch)
    fs_strncasecmp                           0x08009ffd   Thumb Code    66  fs_common.o(i.fs_strncasecmp)
    fs_strpos                                0x0800a03f   Thumb Code    24  fs_common.o(i.fs_strpos)
    funinit                                  0x0800a059   Thumb Code    62  fs_mapi.o(i.funinit)
    funmount                                 0x0800a0a1   Thumb Code    92  fs_mapi.o(i.funmount)
    get_u32                                  0x0800a105   Thumb Code    22  fs_common.o(i.get_u32)
    _get_lc_numeric                          0x0800a1cd   Thumb Code    44  lc_numeric_c.o(locale$$code)
    _get_lc_ctype                            0x0800a1f9   Thumb Code    44  lc_ctype_c.o(locale$$code)
    _fp_init                                 0x0800a225   Thumb Code    26  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x0800a23d   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x0800a23d   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    _printf_fp_dec                           0x0800a23f   Thumb Code     4  printf1.o(x$fpl$printf1)
    _printf_fp_hex                           0x0800a243   Thumb Code     4  printf2.o(x$fpl$printf2)
    __I$use$fp                               0x0800a246   Number         0  usenofp.o(x$fpl$usenofp)
    osRtxConfig                              0x0800a344   Data         104  rtx_lib.o(.rodata)
    os_cb_sections                           0x0800a3ac   Data          56  rtx_lib.o(.rodata)
    AHBPrescTable                            0x0800a3e4   Data          16  system_stm32f4xx.o(.rodata.AHBPrescTable)
    APBPrescTable                            0x0800a3f4   Data           8  system_stm32f4xx.o(.rodata.APBPrescTable)
    Driver_Flash0                            0x0800a3fc   Data          44  driver_flash.o(.rodata.Driver_Flash0)
    EventRecorderInfo                        0x0800a428   Data          24  eventrecorder.o(.rodata.EventRecorderInfo)
    __stderr_name                            0x0800a458   Data           8  retarget_io.o(.rodata.__stderr_name)
    __stdin_name                             0x0800a460   Data           7  retarget_io.o(.rodata.__stdin_name)
    __stdout_name                            0x0800a467   Data           8  retarget_io.o(.rodata.__stdout_name)
    fs_DevPool                               0x0800a470   Data           8  fs_config.o(.rodata.fs_DevPool)
    fs_efs_fh_cnt                            0x0800a478   Data           1  fs_config.o(.rodata.fs_efs_fh_cnt)
    fs_fat_fh_cnt                            0x0800a479   Data           1  fs_config.o(.rodata.fs_fat_fh_cnt)
    fs_ndrv                                  0x0800a47a   Data           1  fs_config.o(.rodata.fs_ndrv)
    osRtxUserSVC                             0x0800a494   Data           4  rtx_lib.o(.rodata.osRtxUserSVC)
    Region$$Table$$Base                      0x0800a644   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x0800a664   Number         0  anon$$obj.o(Region$$Table)
    __ctype                                  0x0800a68d   Data           0  lc_ctype_c.o(locale$$data)
    _stream_list_lock                        0x20000004   Data           4  streamlock.o(.data)
    __aeabi_stdin                            0x20000008   Data           4  stdio_streams.o(.data)
    __aeabi_stdout                           0x2000000c   Data           4  stdio_streams.o(.data)
    __aeabi_stderr                           0x20000010   Data           4  stdio_streams.o(.data)
    uwTickFreq                               0x20000014   Data           1  stm32f4xx_hal.o(.data..L_MergedGlobals)
    uwTickPrio                               0x20000018   Data           4  stm32f4xx_hal.o(.data..L_MergedGlobals)
    SystemCoreClock                          0x2000001c   Data           4  system_stm32f4xx.o(.data.SystemCoreClock)
    emConsoleCmdManage                       0x20000020   Data          20  shell.o(.data.emConsoleCmdManage)
    emConsoleString                          0x20000034   Data         200  shell.o(.data.emConsoleString)
    emHistory                                0x200000fc   Data         520  shell.o(.data.emHistory)
    osRtxInfo                                0x20000304   Data         164  rtx_kernel.o(.data.os)
    __stdin                                  0x200003c0   Data          84  stdio_streams.o(.bss)
    __stdout                                 0x20000414   Data          84  stdio_streams.o(.bss)
    __stderr                                 0x20000468   Data          84  stdio_streams.o(.bss)
    __libspace_start                         0x200004bc   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x2000051c   Data           0  libspace.o(.bss)
    s                                        0x2000051c   Data           1  osmain.o(.bss..L_MergedGlobals)
    emSerial                                 0x20000520   Data           4  osmain.o(.bss..L_MergedGlobals)
    semSerial                                0x20000524   Data           4  osmain.o(.bss..L_MergedGlobals)
    cnt                                      0x20000538   Data           4  driver_flash.o(.bss.cnt)
    fs_efs_fh                                0x2000053c   Data         112  fs_config.o(.bss.fs_efs_fh)
    fs_fat_fh                                0x200005ac   Data          36  fs_config.o(.bss.fs_fat_fh)
    fs_ms_rtos_tick                          0x200005d0   Data           4  fs_config.o(.bss.fs_ms_rtos_tick)
    hdma_usart1_rx                           0x2000060c   Data          96  usart.o(.bss.hdma_usart1_rx)
    hdma_usart1_tx                           0x2000066c   Data          96  usart.o(.bss.hdma_usart1_tx)
    hspi2                                    0x200006cc   Data          88  spi.o(.bss.hspi2)
    htim11                                   0x20000724   Data          64  stm32f4xx_hal_timebase_tim.o(.bss.htim11)
    huart1                                   0x20000764   Data          64  usart.o(.bss.huart1)
    light                                    0x200007a4   Data           2  osmain.o(.bss.light)
    .bss.os.msgqueue.cb$$Base                0x20001e98   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x20001ecc   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.mutex.cb$$Base                   0x20001f1c   Number         0  fs_config.o(.bss.os.mutex.cb)
    .bss.os.mutex.cb$$Limit                  0x20001f38   Number         0  fs_config.o(.bss.os.mutex.cb)
    .bss.os.thread.cb$$Base                  0x20001f38   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x20001fc0   Number         0  rtx_lib.o(.bss.os.thread.cb)
    uwTick                                   0x200021c4   Data           4  stm32f4xx_hal.o(.bss.uwTick)
    w25qxx                                   0x200021c8   Data          40  w25qxx.o(.bss.w25qxx)



==============================================================================

Memory Map of the image

  Image Entry point : 0x08000199

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x0000ab80, Max: 0x00080000, ABSOLUTE, COMPRESSED[0x0000a840])

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x0000a790, Max: 0x00080000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x00000198   Data   RO          196    RESET               startup_stm32f411xe.o
    0x08000198   0x08000198   0x00000008   Code   RO         2808  * !!!main             c_w.l(__main.o)
    0x080001a0   0x080001a0   0x00000034   Code   RO         3294    !!!scatter          c_w.l(__scatter.o)
    0x080001d4   0x080001d4   0x0000003a   Code   RO         3292    !!dczerorl          c_w.l(__dczerorl.o)
    0x0800020e   0x0800020e   0x00000002   PAD
    0x08000210   0x08000210   0x0000001c   Code   RO         3296    !!handler_zi        c_w.l(__scatter_zi.o)
    0x0800022c   0x0800022c   0x00000000   Code   RO         2929    .ARM.Collect$$_printf_percent$$00000000  c_w.l(_printf_percent.o)
    0x0800022c   0x0800022c   0x00000006   Code   RO         2918    .ARM.Collect$$_printf_percent$$00000001  c_w.l(_printf_n.o)
    0x08000232   0x08000232   0x00000006   Code   RO         2920    .ARM.Collect$$_printf_percent$$00000002  c_w.l(_printf_p.o)
    0x08000238   0x08000238   0x00000006   Code   RO         2925    .ARM.Collect$$_printf_percent$$00000003  c_w.l(_printf_f.o)
    0x0800023e   0x0800023e   0x00000006   Code   RO         2926    .ARM.Collect$$_printf_percent$$00000004  c_w.l(_printf_e.o)
    0x08000244   0x08000244   0x00000006   Code   RO         2927    .ARM.Collect$$_printf_percent$$00000005  c_w.l(_printf_g.o)
    0x0800024a   0x0800024a   0x00000006   Code   RO         2928    .ARM.Collect$$_printf_percent$$00000006  c_w.l(_printf_a.o)
    0x08000250   0x08000250   0x0000000a   Code   RO         2933    .ARM.Collect$$_printf_percent$$00000007  c_w.l(_printf_ll.o)
    0x0800025a   0x0800025a   0x00000006   Code   RO         2922    .ARM.Collect$$_printf_percent$$00000008  c_w.l(_printf_i.o)
    0x08000260   0x08000260   0x00000006   Code   RO         2923    .ARM.Collect$$_printf_percent$$00000009  c_w.l(_printf_d.o)
    0x08000266   0x08000266   0x00000006   Code   RO         2924    .ARM.Collect$$_printf_percent$$0000000A  c_w.l(_printf_u.o)
    0x0800026c   0x0800026c   0x00000006   Code   RO         2921    .ARM.Collect$$_printf_percent$$0000000B  c_w.l(_printf_o.o)
    0x08000272   0x08000272   0x00000006   Code   RO         2919    .ARM.Collect$$_printf_percent$$0000000C  c_w.l(_printf_x.o)
    0x08000278   0x08000278   0x00000006   Code   RO         2930    .ARM.Collect$$_printf_percent$$0000000D  c_w.l(_printf_lli.o)
    0x0800027e   0x0800027e   0x00000006   Code   RO         2931    .ARM.Collect$$_printf_percent$$0000000E  c_w.l(_printf_lld.o)
    0x08000284   0x08000284   0x00000006   Code   RO         2932    .ARM.Collect$$_printf_percent$$0000000F  c_w.l(_printf_llu.o)
    0x0800028a   0x0800028a   0x00000006   Code   RO         2937    .ARM.Collect$$_printf_percent$$00000010  c_w.l(_printf_llo.o)
    0x08000290   0x08000290   0x00000006   Code   RO         2938    .ARM.Collect$$_printf_percent$$00000011  c_w.l(_printf_llx.o)
    0x08000296   0x08000296   0x0000000a   Code   RO         2934    .ARM.Collect$$_printf_percent$$00000012  c_w.l(_printf_l.o)
    0x080002a0   0x080002a0   0x00000006   Code   RO         2916    .ARM.Collect$$_printf_percent$$00000013  c_w.l(_printf_c.o)
    0x080002a6   0x080002a6   0x00000006   Code   RO         2917    .ARM.Collect$$_printf_percent$$00000014  c_w.l(_printf_s.o)
    0x080002ac   0x080002ac   0x00000006   Code   RO         2935    .ARM.Collect$$_printf_percent$$00000015  c_w.l(_printf_lc.o)
    0x080002b2   0x080002b2   0x00000006   Code   RO         2936    .ARM.Collect$$_printf_percent$$00000016  c_w.l(_printf_ls.o)
    0x080002b8   0x080002b8   0x00000004   Code   RO         3068    .ARM.Collect$$_printf_percent$$00000017  c_w.l(_printf_percent_end.o)
    0x080002bc   0x080002bc   0x00000002   Code   RO         3196    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x080002be   0x080002be   0x00000004   Code   RO         2964    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x080002c2   0x080002c2   0x00000000   Code   RO         2967    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x080002c2   0x080002c2   0x00000008   Code   RO         2968    .ARM.Collect$$libinit$$00000005  c_w.l(libinit2.o)
    0x080002ca   0x080002ca   0x00000000   Code   RO         2970    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x080002ca   0x080002ca   0x00000000   Code   RO         2972    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x080002ca   0x080002ca   0x00000000   Code   RO         2974    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x080002ca   0x080002ca   0x00000006   Code   RO         2975    .ARM.Collect$$libinit$$0000000F  c_w.l(libinit2.o)
    0x080002d0   0x080002d0   0x00000000   Code   RO         2977    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x080002d0   0x080002d0   0x0000000c   Code   RO         2978    .ARM.Collect$$libinit$$00000012  c_w.l(libinit2.o)
    0x080002dc   0x080002dc   0x00000000   Code   RO         2979    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x080002dc   0x080002dc   0x00000000   Code   RO         2981    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x080002dc   0x080002dc   0x0000000a   Code   RO         2982    .ARM.Collect$$libinit$$00000016  c_w.l(libinit2.o)
    0x080002e6   0x080002e6   0x00000000   Code   RO         2983    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x080002e6   0x080002e6   0x00000000   Code   RO         2985    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x080002e6   0x080002e6   0x00000000   Code   RO         2987    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x080002e6   0x080002e6   0x00000000   Code   RO         2989    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x080002e6   0x080002e6   0x00000000   Code   RO         2991    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x080002e6   0x080002e6   0x00000000   Code   RO         2993    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x080002e6   0x080002e6   0x00000000   Code   RO         2995    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x080002e6   0x080002e6   0x00000004   Code   RO         2996    .ARM.Collect$$libinit$$00000024  c_w.l(libinit2.o)
    0x080002ea   0x080002ea   0x00000000   Code   RO         2997    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x080002ea   0x080002ea   0x00000000   Code   RO         3001    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x080002ea   0x080002ea   0x00000000   Code   RO         3003    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x080002ea   0x080002ea   0x00000000   Code   RO         3005    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x080002ea   0x080002ea   0x00000000   Code   RO         3007    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x080002ea   0x080002ea   0x00000002   Code   RO         3008    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x080002ec   0x080002ec   0x00000002   Code   RO         3290    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x080002ee   0x080002ee   0x00000000   Code   RO         3198    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x080002ee   0x080002ee   0x00000004   Code   RO         3199    .ARM.Collect$$libshutdown$$00000003  c_w.l(libshutdown2.o)
    0x080002f2   0x080002f2   0x00000000   Code   RO         3200    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x080002f2   0x080002f2   0x00000000   Code   RO         3203    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x080002f2   0x080002f2   0x00000000   Code   RO         3206    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x080002f2   0x080002f2   0x00000000   Code   RO         3208    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x080002f2   0x080002f2   0x00000004   Code   RO         3209    .ARM.Collect$$libshutdown$$0000000D  c_w.l(libshutdown2.o)
    0x080002f6   0x080002f6   0x00000000   Code   RO         3211    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x080002f6   0x080002f6   0x00000002   Code   RO         3212    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x080002f8   0x080002f8   0x00000000   Code   RO         2810    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x080002f8   0x080002f8   0x00000000   Code   RO         3025    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x080002f8   0x080002f8   0x00000006   Code   RO         3037    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x080002fe   0x080002fe   0x00000008   Code   RO         3026    .ARM.Collect$$rtentry$$00000008  c_w.l(__rtentry2.o)
    0x08000306   0x08000306   0x00000004   Code   RO         3028    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x0800030a   0x0800030a   0x00000000   Code   RO         3030    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x0800030a   0x0800030a   0x00000008   Code   RO         3031    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x08000312   0x08000312   0x00000002   Code   RO         3224    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x08000314   0x08000314   0x00000000   Code   RO         3266    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x08000314   0x08000314   0x00000004   Code   RO         3267    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x08000318   0x08000318   0x00000006   Code   RO         3268    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0800031e   0x0800031e   0x00000002   PAD
    0x08000320   0x08000320   0x00000040   Code   RO          197    .text               startup_stm32f411xe.o
    0x08000360   0x08000360   0x000000c4   Code   RO         1328    .text               irq_cm4f.o
    0x08000424   0x08000424   0x000000a6   Code   RO         2718    .text               c_w.l(h1_alloc_threads.o)
    0x080004ca   0x080004ca   0x000000ee   Code   RO         2770    .text               c_w.l(lludivv7m.o)
    0x080005b8   0x080005b8   0x00000034   Code   RO         2772    .text               c_w.l(vsnprintf.o)
    0x080005ec   0x080005ec   0x00000018   Code   RO         2774    .text               c_w.l(__0fscanf.o)
    0x08000604   0x08000604   0x0000003c   Code   RO         2776    .text               c_w.l(__0sscanf.o)
    0x08000640   0x08000640   0x000000e0   Code   RO         2778    .text               c_w.l(_scanf_str.o)
    0x08000720   0x08000720   0x0000004c   Code   RO         2786    .text               c_w.l(fclose.o)
    0x0800076c   0x0800076c   0x00000034   Code   RO         2788    .text               c_w.l(fclose_locked.o)
    0x080007a0   0x080007a0   0x00000090   Code   RO         2790    .text               c_w.l(fflush_locked.o)
    0x08000830   0x08000830   0x00000144   Code   RO         2792    .text               c_w.l(fopen_locked.o)
    0x08000974   0x08000974   0x0000003e   Code   RO         2794    .text               c_w.l(strlen.o)
    0x080009b2   0x080009b2   0x0000008a   Code   RO         2796    .text               c_w.l(rt_memcpy_v6.o)
    0x08000a3c   0x08000a3c   0x00000064   Code   RO         2798    .text               c_w.l(rt_memcpy_w.o)
    0x08000aa0   0x08000aa0   0x00000044   Code   RO         2800    .text               c_w.l(rt_memclr.o)
    0x08000ae4   0x08000ae4   0x0000004e   Code   RO         2802    .text               c_w.l(rt_memclr_w.o)
    0x08000b32   0x08000b32   0x00000006   PAD
    0x08000b38   0x08000b38   0x0000007c   Code   RO         2804    .text               c_w.l(strcmpv7em.o)
    0x08000bb4   0x08000bb4   0x00000006   Code   RO         2806    .text               c_w.l(heapauxi.o)
    0x08000bba   0x08000bba   0x0000000a   Code   RO         2820    .text               c_w.l(rt_heap_descriptor_twolibspace.o)
    0x08000bc4   0x08000bc4   0x00000004   Code   RO         2822    .text               c_w.l(hguard.o)
    0x08000bc8   0x08000bc8   0x0000008a   Code   RO         2824    .text               c_w.l(init_alloc.o)
    0x08000c52   0x08000c52   0x00000012   Code   RO         2834    .text               c_w.l(h1_init_threads.o)
    0x08000c64   0x08000c64   0x00000076   Code   RO         2836    .text               c_w.l(h1_free_threads.o)
    0x08000cda   0x08000cda   0x0000004e   Code   RO         2848    .text               c_w.l(_printf_pad.o)
    0x08000d28   0x08000d28   0x00000024   Code   RO         2850    .text               c_w.l(_printf_truncate.o)
    0x08000d4c   0x08000d4c   0x00000052   Code   RO         2852    .text               c_w.l(_printf_str.o)
    0x08000d9e   0x08000d9e   0x00000002   PAD
    0x08000da0   0x08000da0   0x00000078   Code   RO         2854    .text               c_w.l(_printf_dec.o)
    0x08000e18   0x08000e18   0x00000028   Code   RO         2856    .text               c_w.l(_printf_charcount.o)
    0x08000e40   0x08000e40   0x00000030   Code   RO         2858    .text               c_w.l(_printf_char_common.o)
    0x08000e70   0x08000e70   0x0000000a   Code   RO         2860    .text               c_w.l(_sputc.o)
    0x08000e7a   0x08000e7a   0x00000010   Code   RO         2862    .text               c_w.l(_snputc.o)
    0x08000e8a   0x08000e8a   0x00000002   PAD
    0x08000e8c   0x08000e8c   0x000000bc   Code   RO         2864    .text               c_w.l(_printf_wctomb.o)
    0x08000f48   0x08000f48   0x0000007c   Code   RO         2867    .text               c_w.l(_printf_longlong_dec.o)
    0x08000fc4   0x08000fc4   0x00000070   Code   RO         2873    .text               c_w.l(_printf_oct_int_ll.o)
    0x08001034   0x08001034   0x00000094   Code   RO         2893    .text               c_w.l(_printf_hex_int_ll_ptr.o)
    0x080010c8   0x080010c8   0x00000188   Code   RO         2913    .text               c_w.l(__printf_flags_ss_wp.o)
    0x08001250   0x08001250   0x0000002c   Code   RO         2939    .text               c_w.l(scanf_char.o)
    0x0800127c   0x0800127c   0x00000040   Code   RO         2941    .text               c_w.l(_sgetc.o)
    0x080012bc   0x080012bc   0x000000f8   Code   RO         2949    .text               c_w.l(fseek.o)
    0x080013b4   0x080013b4   0x000000f0   Code   RO         2951    .text               c_w.l(stdio.o)
    0x080014a4   0x080014a4   0x00000008   Code   RO         3021    .text               c_w.l(libspace.o)
    0x080014ac   0x080014ac   0x00000000   Code   RO         3044    .text               c_w.l(maybetermalloc2.o)
    0x080014ac   0x080014ac   0x00000052   Code   RO         3047    .text               c_w.l(h1_extend_threads.o)
    0x080014fe   0x080014fe   0x0000008a   Code   RO         3049    .text               c_w.l(lludiv10.o)
    0x08001588   0x08001588   0x00000012   Code   RO         3051    .text               c_w.l(isspace.o)
    0x0800159a   0x0800159a   0x000000b2   Code   RO         3053    .text               c_w.l(_printf_intcommon.o)
    0x0800164c   0x0800164c   0x0000041c   Code   RO         3055    .text               c_w.l(_printf_fp_dec.o)
    0x08001a68   0x08001a68   0x000002fc   Code   RO         3059    .text               c_w.l(_printf_fp_hex.o)
    0x08001d64   0x08001d64   0x0000002c   Code   RO         3064    .text               c_w.l(_printf_char.o)
    0x08001d90   0x08001d90   0x0000002c   Code   RO         3066    .text               c_w.l(_printf_wchar.o)
    0x08001dbc   0x08001dbc   0x00000374   Code   RO         3069    .text               c_w.l(_scanf.o)
    0x08002130   0x08002130   0x00000048   Code   RO         3071    .text               c_w.l(backspace.o)
    0x08002178   0x08002178   0x000001d6   Code   RO         3077    .text               c_w.l(flsbuf.o)
    0x0800234e   0x0800234e   0x00000042   Code   RO         3079    .text               c_w.l(ftell.o)
    0x08002390   0x08002390   0x000001c8   Code   RO         3087    .text               c_w.l(initio_locked.o)
    0x08002558   0x08002558   0x00000048   Code   RO         3089    .text               c_w.l(_c16rtomb.o)
    0x080025a0   0x080025a0   0x0000000e   Code   RO         3091    .text               c_w.l(defsig_rtmem_outer.o)
    0x080025ae   0x080025ae   0x00000002   Code   RO         3104    .text               c_w.l(use_no_semi.o)
    0x080025b0   0x080025b0   0x00000000   Code   RO         3106    .text               c_w.l(indicate_semi.o)
    0x080025b0   0x080025b0   0x0000004a   Code   RO         3107    .text               c_w.l(sys_stackheap_outer.o)
    0x080025fa   0x080025fa   0x00000002   PAD
    0x080025fc   0x080025fc   0x00000010   Code   RO         3109    .text               c_w.l(rt_ctype_table.o)
    0x0800260c   0x0800260c   0x0000000a   Code   RO         3118    .text               c_w.l(rt_locale_twolibspace.o)
    0x08002616   0x08002616   0x00000004   Code   RO         3125    .text               c_w.l(rt_errno_addr_twolibspace.o)
    0x0800261a   0x0800261a   0x00000010   Code   RO         3127    .text               c_w.l(term_alloc.o)
    0x0800262a   0x0800262a   0x00000002   PAD
    0x0800262c   0x0800262c   0x00000080   Code   RO         3129    .text               c_w.l(_printf_fp_infnan.o)
    0x080026ac   0x080026ac   0x000000e4   Code   RO         3131    .text               c_w.l(bigflt0.o)
    0x08002790   0x08002790   0x0000023a   Code   RO         3158    .text               c_w.l(filbuf.o)
    0x080029ca   0x080029ca   0x00000002   PAD
    0x080029cc   0x080029cc   0x00000048   Code   RO         3162    .text               c_w.l(ungetc.o)
    0x08002a14   0x08002a14   0x00000068   Code   RO         3166    .text               c_w.l(setvbuf_locked.o)
    0x08002a7c   0x08002a7c   0x000000d0   Code   RO         3168    .text               c_w.l(fwritefast_locked.o)
    0x08002b4c   0x08002b4c   0x00000012   Code   RO         3173    .text               c_w.l(exit.o)
    0x08002b5e   0x08002b5e   0x0000000a   Code   RO         3175    .text               c_w.l(defsig_exit.o)
    0x08002b68   0x08002b68   0x0000000e   Code   RO         3181    .text               c_w.l(defsig_rtred_outer.o)
    0x08002b76   0x08002b76   0x00000002   PAD
    0x08002b78   0x08002b78   0x00000050   Code   RO         3185    .text               c_w.l(defsig_rtmem_inner.o)
    0x08002bc8   0x08002bc8   0x0000000c   Code   RO         3220    .text               c_w.l(sys_exit.o)
    0x08002bd4   0x08002bd4   0x0000000a   Code   RO         3228    .text               c_w.l(h1_final_threads.o)
    0x08002bde   0x08002bde   0x00000002   PAD
    0x08002be0   0x08002be0   0x00000040   Code   RO         3230    .text               c_w.l(scanf_char_file_locked.o)
    0x08002c20   0x08002c20   0x0000005c   Code   RO         3248    .text               c_w.l(flushlinebuffered_locked.o)
    0x08002c7c   0x08002c7c   0x00000032   Code   RO         3255    .text               c_w.l(defsig_general.o)
    0x08002cae   0x08002cae   0x00000002   PAD
    0x08002cb0   0x08002cb0   0x00000034   Code   RO         3259    .text               c_w.l(defsig_rtred_inner.o)
    0x08002ce4   0x08002ce4   0x0000000e   Code   RO         3261    .text               c_w.l(sys_wrch.o)
    0x08002cf2   0x08002cf2   0x0000000a   Code   RO          130    .text.ARM_Flash_EraseChip  driver_flash.o
    0x08002cfc   0x08002cfc   0x00000038   Code   RO          128    .text.ARM_Flash_EraseSector  driver_flash.o
    0x08002d34   0x08002d34   0x00000004   Code   RO          116    .text.ARM_Flash_GetCapabilities  driver_flash.o
    0x08002d38   0x08002d38   0x00000008   Code   RO          134    .text.ARM_Flash_GetInfo  driver_flash.o
    0x08002d40   0x08002d40   0x0000000c   Code   RO          132    .text.ARM_Flash_GetStatus  driver_flash.o
    0x08002d4c   0x08002d4c   0x00000008   Code   RO          114    .text.ARM_Flash_GetVersion  driver_flash.o
    0x08002d54   0x08002d54   0x00000024   Code   RO          118    .text.ARM_Flash_Initialize  driver_flash.o
    0x08002d78   0x08002d78   0x0000000e   Code   RO          122    .text.ARM_Flash_PowerControl  driver_flash.o
    0x08002d86   0x08002d86   0x00000020   Code   RO          126    .text.ARM_Flash_ProgramData  driver_flash.o
    0x08002da6   0x08002da6   0x00000010   Code   RO          124    .text.ARM_Flash_ReadData  driver_flash.o
    0x08002db6   0x08002db6   0x00000004   Code   RO          120    .text.ARM_Flash_Uninitialize  driver_flash.o
    0x08002dba   0x08002dba   0x00000002   Code   RO          283    .text.BusFault_Handler  stm32f4xx_it.o
    0x08002dbc   0x08002dbc   0x0000000c   Code   RO          291    .text.DMA2_Stream2_IRQHandler  stm32f4xx_it.o
    0x08002dc8   0x08002dc8   0x0000000c   Code   RO          293    .text.DMA2_Stream7_IRQHandler  stm32f4xx_it.o
    0x08002dd4   0x08002dd4   0x00000030   Code   RO         1064    .text.DMA_CalcBaseAndBitshift  stm32f4xx_hal_dma.o
    0x08002e04   0x08002e04   0x00000002   Code   RO          287    .text.DebugMon_Handler  stm32f4xx_it.o
    0x08002e06   0x08002e06   0x00000002   Code   RO          208    .text.Error_Handler  main.o
    0x08002e08   0x08002e08   0x00000020   Code   RO         2296    .text.EventCheckFilter  eventrecorder.o
    0x08002e28   0x08002e28   0x00000038   Code   RO         2282    .text.EventGetTS    eventrecorder.o
    0x08002e60   0x08002e60   0x0000003c   Code   RO         2298    .text.EventRecord2  eventrecorder.o
    0x08002e9c   0x08002e9c   0x0000007c   Code   RO         2300    .text.EventRecord4  eventrecorder.o
    0x08002f18   0x08002f18   0x0000010c   Code   RO         2294    .text.EventRecordData  eventrecorder.o
    0x08003024   0x08003024   0x000000fc   Code   RO         2284    .text.EventRecordItem  eventrecorder.o
    0x08003120   0x08003120   0x00000060   Code   RO         2288    .text.EventRecorderDisable  eventrecorder.o
    0x08003180   0x08003180   0x00000064   Code   RO         2280    .text.EventRecorderEnable  eventrecorder.o
    0x080031e4   0x080031e4   0x00000134   Code   RO         2278    .text.EventRecorderInitialize  eventrecorder.o
    0x08003318   0x08003318   0x0000002c   Code   RO         2286    .text.EventRecorderStart  eventrecorder.o
    0x08003344   0x08003344   0x0000000c   Code   RO         2276    .text.EventRecorderTimerGetCount  eventrecorder.o
    0x08003350   0x08003350   0x0000000c   Code   RO         2274    .text.EventRecorderTimerGetFreq  eventrecorder.o
    0x0800335c   0x0800335c   0x00000020   Code   RO         2272    .text.EventRecorderTimerSetup  eventrecorder.o
    0x0800337c   0x0800337c   0x00000010   Code   RO         1531    .text.EvrRtxDelay   rtx_evr.o
    0x0800338c   0x0800338c   0x00000010   Code   RO         1539    .text.EvrRtxDelayCompleted  rtx_evr.o
    0x0800339c   0x0800339c   0x0000000c   Code   RO         1529    .text.EvrRtxDelayError  rtx_evr.o
    0x080033a8   0x080033a8   0x00000010   Code   RO         1535    .text.EvrRtxDelayStarted  rtx_evr.o
    0x080033b8   0x080033b8   0x00000010   Code   RO         1587    .text.EvrRtxEventFlagsWaitTimeout  rtx_evr.o
    0x080033c8   0x080033c8   0x0000000c   Code   RO         1403    .text.EvrRtxKernelError  rtx_evr.o
    0x080033d4   0x080033d4   0x00000010   Code   RO         1413    .text.EvrRtxKernelGetState  rtx_evr.o
    0x080033e4   0x080033e4   0x00000010   Code   RO         1441    .text.EvrRtxKernelGetTickFreq  rtx_evr.o
    0x080033f4   0x080033f4   0x00000010   Code   RO         1405    .text.EvrRtxKernelInitialize  rtx_evr.o
    0x08003404   0x08003404   0x00000010   Code   RO         1407    .text.EvrRtxKernelInitialized  rtx_evr.o
    0x08003414   0x08003414   0x00000010   Code   RO         1415    .text.EvrRtxKernelStart  rtx_evr.o
    0x08003424   0x08003424   0x00000010   Code   RO         1417    .text.EvrRtxKernelStarted  rtx_evr.o
    0x08003434   0x08003434   0x00000018   Code   RO         1393    .text.EvrRtxMemoryAlloc  rtx_evr.o
    0x0800344c   0x0800344c   0x00000010   Code   RO         1399    .text.EvrRtxMemoryBlockAlloc  rtx_evr.o
    0x0800345c   0x0800345c   0x00000018   Code   RO         1401    .text.EvrRtxMemoryBlockFree  rtx_evr.o
    0x08003474   0x08003474   0x00000018   Code   RO         1397    .text.EvrRtxMemoryBlockInit  rtx_evr.o
    0x0800348c   0x0800348c   0x00000018   Code   RO         1395    .text.EvrRtxMemoryFree  rtx_evr.o
    0x080034a4   0x080034a4   0x00000016   Code   RO         1391    .text.EvrRtxMemoryInit  rtx_evr.o
    0x080034ba   0x080034ba   0x00000002   PAD
    0x080034bc   0x080034bc   0x00000010   Code   RO         1665    .text.EvrRtxMemoryPoolAllocTimeout  rtx_evr.o
    0x080034cc   0x080034cc   0x00000010   Code   RO         1693    .text.EvrRtxMessageQueueCreated  rtx_evr.o
    0x080034dc   0x080034dc   0x0000000c   Code   RO         1689    .text.EvrRtxMessageQueueError  rtx_evr.o
    0x080034e8   0x080034e8   0x00000018   Code   RO         1709    .text.EvrRtxMessageQueueGet  rtx_evr.o
    0x08003500   0x08003500   0x00000018   Code   RO         1711    .text.EvrRtxMessageQueueGetPending  rtx_evr.o
    0x08003518   0x08003518   0x00000010   Code   RO         1713    .text.EvrRtxMessageQueueGetTimeout  rtx_evr.o
    0x08003528   0x08003528   0x00000010   Code   RO         1703    .text.EvrRtxMessageQueueInsertPending  rtx_evr.o
    0x08003538   0x08003538   0x00000010   Code   RO         1705    .text.EvrRtxMessageQueueInserted  rtx_evr.o
    0x08003548   0x08003548   0x00000018   Code   RO         1691    .text.EvrRtxMessageQueueNew  rtx_evr.o
    0x08003560   0x08003560   0x00000010   Code   RO         1707    .text.EvrRtxMessageQueueNotInserted  rtx_evr.o
    0x08003570   0x08003570   0x00000010   Code   RO         1717    .text.EvrRtxMessageQueueNotRetrieved  rtx_evr.o
    0x08003580   0x08003580   0x00000018   Code   RO         1697    .text.EvrRtxMessageQueuePut  rtx_evr.o
    0x08003598   0x08003598   0x00000018   Code   RO         1699    .text.EvrRtxMessageQueuePutPending  rtx_evr.o
    0x080035b0   0x080035b0   0x00000010   Code   RO         1701    .text.EvrRtxMessageQueuePutTimeout  rtx_evr.o
    0x080035c0   0x080035c0   0x00000010   Code   RO         1715    .text.EvrRtxMessageQueueRetrieved  rtx_evr.o
    0x080035d0   0x080035d0   0x00000010   Code   RO         1605    .text.EvrRtxMutexAcquire  rtx_evr.o
    0x080035e0   0x080035e0   0x00000010   Code   RO         1607    .text.EvrRtxMutexAcquirePending  rtx_evr.o
    0x080035f0   0x080035f0   0x00000010   Code   RO         1609    .text.EvrRtxMutexAcquireTimeout  rtx_evr.o
    0x08003600   0x08003600   0x00000010   Code   RO         1611    .text.EvrRtxMutexAcquired  rtx_evr.o
    0x08003610   0x08003610   0x00000010   Code   RO         1601    .text.EvrRtxMutexCreated  rtx_evr.o
    0x08003620   0x08003620   0x00000010   Code   RO         1621    .text.EvrRtxMutexDelete  rtx_evr.o
    0x08003630   0x08003630   0x00000010   Code   RO         1623    .text.EvrRtxMutexDestroyed  rtx_evr.o
    0x08003640   0x08003640   0x0000000c   Code   RO         1597    .text.EvrRtxMutexError  rtx_evr.o
    0x0800364c   0x0800364c   0x00000010   Code   RO         1599    .text.EvrRtxMutexNew  rtx_evr.o
    0x0800365c   0x0800365c   0x00000010   Code   RO         1613    .text.EvrRtxMutexNotAcquired  rtx_evr.o
    0x0800366c   0x0800366c   0x00000010   Code   RO         1615    .text.EvrRtxMutexRelease  rtx_evr.o
    0x0800367c   0x0800367c   0x00000010   Code   RO         1617    .text.EvrRtxMutexReleased  rtx_evr.o
    0x0800368c   0x0800368c   0x00000010   Code   RO         1633    .text.EvrRtxSemaphoreAcquire  rtx_evr.o
    0x0800369c   0x0800369c   0x00000010   Code   RO         1635    .text.EvrRtxSemaphoreAcquirePending  rtx_evr.o
    0x080036ac   0x080036ac   0x00000010   Code   RO         1637    .text.EvrRtxSemaphoreAcquireTimeout  rtx_evr.o
    0x080036bc   0x080036bc   0x00000010   Code   RO         1639    .text.EvrRtxSemaphoreAcquired  rtx_evr.o
    0x080036cc   0x080036cc   0x00000010   Code   RO         1629    .text.EvrRtxSemaphoreCreated  rtx_evr.o
    0x080036dc   0x080036dc   0x0000000c   Code   RO         1625    .text.EvrRtxSemaphoreError  rtx_evr.o
    0x080036e8   0x080036e8   0x00000018   Code   RO         1627    .text.EvrRtxSemaphoreNew  rtx_evr.o
    0x08003700   0x08003700   0x00000010   Code   RO         1641    .text.EvrRtxSemaphoreNotAcquired  rtx_evr.o
    0x08003710   0x08003710   0x00000010   Code   RO         1643    .text.EvrRtxSemaphoreRelease  rtx_evr.o
    0x08003720   0x08003720   0x00000010   Code   RO         1645    .text.EvrRtxSemaphoreReleased  rtx_evr.o
    0x08003730   0x08003730   0x00000010   Code   RO         1489    .text.EvrRtxThreadBlocked  rtx_evr.o
    0x08003740   0x08003740   0x00000018   Code   RO         1451    .text.EvrRtxThreadCreated  rtx_evr.o
    0x08003758   0x08003758   0x00000010   Code   RO         1501    .text.EvrRtxThreadDestroyed  rtx_evr.o
    0x08003768   0x08003768   0x0000000c   Code   RO         1447    .text.EvrRtxThreadError  rtx_evr.o
    0x08003774   0x08003774   0x00000010   Code   RO         1497    .text.EvrRtxThreadExit  rtx_evr.o
    0x08003784   0x08003784   0x00000018   Code   RO         1525    .text.EvrRtxThreadFlagsWaitCompleted  rtx_evr.o
    0x0800379c   0x0800379c   0x00000010   Code   RO         1523    .text.EvrRtxThreadFlagsWaitTimeout  rtx_evr.o
    0x080037ac   0x080037ac   0x00000010   Code   RO         1455    .text.EvrRtxThreadGetId  rtx_evr.o
    0x080037bc   0x080037bc   0x00000010   Code   RO         1487    .text.EvrRtxThreadJoined  rtx_evr.o
    0x080037cc   0x080037cc   0x00000018   Code   RO         1449    .text.EvrRtxThreadNew  rtx_evr.o
    0x080037e4   0x080037e4   0x00000010   Code   RO         1493    .text.EvrRtxThreadPreempted  rtx_evr.o
    0x080037f4   0x080037f4   0x00000010   Code   RO         1495    .text.EvrRtxThreadSwitched  rtx_evr.o
    0x08003804   0x08003804   0x00000010   Code   RO         1491    .text.EvrRtxThreadUnblocked  rtx_evr.o
    0x08003814   0x08003814   0x00000010   Code   RO         1543    .text.EvrRtxTimerCallback  rtx_evr.o
    0x08003824   0x08003824   0x00000170   Code   RO         1080    .text.HAL_DMA_IRQHandler  stm32f4xx_hal_dma.o
    0x08003994   0x08003994   0x00000128   Code   RO         1062    .text.HAL_DMA_Init  stm32f4xx_hal_dma.o
    0x08003abc   0x08003abc   0x00000188   Code   RO         1022    .text.HAL_GPIO_Init  stm32f4xx_hal_gpio.o
    0x08003c44   0x08003c44   0x0000000a   Code   RO         1028    .text.HAL_GPIO_WritePin  stm32f4xx_hal_gpio.o
    0x08003c4e   0x08003c4e   0x00000002   PAD
    0x08003c50   0x08003c50   0x00000008   Code   RO         1232    .text.HAL_GetTick   stm32f4xx_hal.o
    0x08003c58   0x08003c58   0x00000018   Code   RO         1230    .text.HAL_IncTick   stm32f4xx_hal.o
    0x08003c70   0x08003c70   0x00000034   Code   RO         1220    .text.HAL_Init      stm32f4xx_hal.o
    0x08003ca4   0x08003ca4   0x00000078   Code   RO          312    .text.HAL_InitTick  stm32f4xx_hal_timebase_tim.o
    0x08003d1c   0x08003d1c   0x00000038   Code   RO          303    .text.HAL_MspInit   stm32f4xx_hal_msp.o
    0x08003d54   0x08003d54   0x0000001c   Code   RO         1177    .text.HAL_NVIC_EnableIRQ  stm32f4xx_hal_cortex.o
    0x08003d70   0x08003d70   0x0000003c   Code   RO         1173    .text.HAL_NVIC_SetPriority  stm32f4xx_hal_cortex.o
    0x08003dac   0x08003dac   0x00000020   Code   RO         1171    .text.HAL_NVIC_SetPriorityGrouping  stm32f4xx_hal_cortex.o
    0x08003dcc   0x08003dcc   0x00000120   Code   RO          882    .text.HAL_RCC_ClockConfig  stm32f4xx_hal_rcc.o
    0x08003eec   0x08003eec   0x00000038   Code   RO          900    .text.HAL_RCC_GetClockConfig  stm32f4xx_hal_rcc.o
    0x08003f24   0x08003f24   0x00000014   Code   RO          894    .text.HAL_RCC_GetPCLK1Freq  stm32f4xx_hal_rcc.o
    0x08003f38   0x08003f38   0x00000020   Code   RO          896    .text.HAL_RCC_GetPCLK2Freq  stm32f4xx_hal_rcc.o
    0x08003f58   0x08003f58   0x0000005c   Code   RO          884    .text.HAL_RCC_GetSysClockFreq  stm32f4xx_hal_rcc.o
    0x08003fb4   0x08003fb4   0x000002d8   Code   RO          880    .text.HAL_RCC_OscConfig  stm32f4xx_hal_rcc.o
    0x0800428c   0x0800428c   0x0000007e   Code   RO          328    .text.HAL_SPI_Init  stm32f4xx_hal_spi.o
    0x0800430a   0x0800430a   0x00000002   PAD
    0x0800430c   0x0800430c   0x0000006c   Code   RO          245    .text.HAL_SPI_MspInit  spi.o
    0x08004378   0x08004378   0x0000012e   Code   RO          340    .text.HAL_SPI_Receive  stm32f4xx_hal_spi.o
    0x080044a6   0x080044a6   0x000001d4   Code   RO          342    .text.HAL_SPI_TransmitReceive  stm32f4xx_hal_spi.o
    0x0800467a   0x0800467a   0x00000002   Code   RO          752    .text.HAL_TIMEx_BreakCallback  stm32f4xx_hal_tim_ex.o
    0x0800467c   0x0800467c   0x00000002   Code   RO          748    .text.HAL_TIMEx_CommutCallback  stm32f4xx_hal_tim_ex.o
    0x0800467e   0x0800467e   0x00000034   Code   RO          447    .text.HAL_TIM_Base_Init  stm32f4xx_hal_tim.o
    0x080046b2   0x080046b2   0x00000002   Code   RO          449    .text.HAL_TIM_Base_MspInit  stm32f4xx_hal_tim.o
    0x080046b4   0x080046b4   0x00000020   Code   RO          461    .text.HAL_TIM_Base_Start_IT  stm32f4xx_hal_tim.o
    0x080046d4   0x080046d4   0x00000002   Code   RO          583    .text.HAL_TIM_IC_CaptureCallback  stm32f4xx_hal_tim.o
    0x080046d6   0x080046d6   0x0000016a   Code   RO          581    .text.HAL_TIM_IRQHandler  stm32f4xx_hal_tim.o
    0x08004840   0x08004840   0x00000002   Code   RO          585    .text.HAL_TIM_OC_DelayElapsedCallback  stm32f4xx_hal_tim.o
    0x08004842   0x08004842   0x00000002   Code   RO          587    .text.HAL_TIM_PWM_PulseFinishedCallback  stm32f4xx_hal_tim.o
    0x08004844   0x08004844   0x00000014   Code   RO          210    .text.HAL_TIM_PeriodElapsedCallback  main.o
    0x08004858   0x08004858   0x00000002   Code   RO          591    .text.HAL_TIM_TriggerCallback  stm32f4xx_hal_tim.o
    0x0800485a   0x0800485a   0x0000005c   Code   RO          765    .text.HAL_UART_Init  stm32f4xx_hal_uart.o
    0x080048b6   0x080048b6   0x00000002   PAD
    0x080048b8   0x080048b8   0x000000e8   Code   RO          261    .text.HAL_UART_MspInit  usart.o
    0x080049a0   0x080049a0   0x00000002   Code   RO          279    .text.HardFault_Handler  stm32f4xx_it.o
    0x080049a2   0x080049a2   0x00000002   PAD
    0x080049a4   0x080049a4   0x00000040   Code   RO          233    .text.MX_DMA_Init   dma.o
    0x080049e4   0x080049e4   0x000000d4   Code   RO          222    .text.MX_GPIO_Init  gpio.o
    0x08004ab8   0x08004ab8   0x00000044   Code   RO          243    .text.MX_SPI2_Init  spi.o
    0x08004afc   0x08004afc   0x00000038   Code   RO          259    .text.MX_USART1_UART_Init  usart.o
    0x08004b34   0x08004b34   0x00000002   Code   RO          281    .text.MemManage_Handler  stm32f4xx_it.o
    0x08004b36   0x08004b36   0x00000044   Code   RO         1953    .text.MessageQueueGet  rtx_msgqueue.o
    0x08004b7a   0x08004b7a   0x00000062   Code   RO         1947    .text.MessageQueuePut  rtx_msgqueue.o
    0x08004bdc   0x08004bdc   0x0000001c   Code   RO         1945    .text.MessageQueueRemove  rtx_msgqueue.o
    0x08004bf8   0x08004bf8   0x00000002   Code   RO          277    .text.NMI_Handler   stm32f4xx_it.o
    0x08004bfa   0x08004bfa   0x00000002   PAD
    0x08004bfc   0x08004bfc   0x0000000c   Code   RO         2427    .text.NOR0_DriverEvent  fs_config.o
    0x08004c08   0x08004c08   0x00000008   Code   RO         2237    .text.OS_Tick_AcknowledgeIRQ  os_systick.o
    0x08004c10   0x08004c10   0x00000024   Code   RO         2233    .text.OS_Tick_Enable  os_systick.o
    0x08004c34   0x08004c34   0x00000006   Code   RO         2239    .text.OS_Tick_GetIRQn  os_systick.o
    0x08004c3a   0x08004c3a   0x00000002   PAD
    0x08004c3c   0x08004c3c   0x0000003c   Code   RO         2231    .text.OS_Tick_Setup  os_systick.o
    0x08004c78   0x08004c78   0x00000052   Code   RO          344    .text.SPI_EndRxTransaction  stm32f4xx_hal_spi.o
    0x08004cca   0x08004cca   0x00000002   PAD
    0x08004ccc   0x08004ccc   0x00000054   Code   RO          338    .text.SPI_EndRxTxTransaction  stm32f4xx_hal_spi.o
    0x08004d20   0x08004d20   0x00000080   Code   RO          436    .text.SPI_WaitFlagStateUntilTimeout  stm32f4xx_hal_spi.o
    0x08004da0   0x08004da0   0x00000084   Code   RO          206    .text.SystemClock_Config  main.o
    0x08004e24   0x08004e24   0x0000006c   Code   RO         1314    .text.SystemCoreClockUpdate  system_stm32f4xx.o
    0x08004e90   0x08004e90   0x0000004c   Code   RO         1312    .text.SystemInit    system_stm32f4xx.o
    0x08004edc   0x08004edc   0x0000000c   Code   RO          289    .text.TIM1_TRG_COM_TIM11_IRQHandler  stm32f4xx_it.o
    0x08004ee8   0x08004ee8   0x00000084   Code   RO          451    .text.TIM_Base_SetConfig  stm32f4xx_hal_tim.o
    0x08004f6c   0x08004f6c   0x0000006a   Code   RO         2137    .text.ThreadFlagsCheck  rtx_thread.o
    0x08004fd6   0x08004fd6   0x00000002   PAD
    0x08004fd8   0x08004fd8   0x00000050   Code   RO         2206    .text.TimerInsert   rtx_timer.o
    0x08005028   0x08005028   0x0000017c   Code   RO          769    .text.UART_SetConfig  stm32f4xx_hal_uart.o
    0x080051a4   0x080051a4   0x00000048   Code   RO           30    .text.USART1_IRQHandler  serial.o
    0x080051ec   0x080051ec   0x00000002   Code   RO          285    .text.UsageFault_Handler  stm32f4xx_it.o
    0x080051ee   0x080051ee   0x00000002   PAD
    0x080051f0   0x080051f0   0x0000004c   Code   RO           64    .text.W25qxx_EraseChip  w25qxx.o
    0x0800523c   0x0800523c   0x0000007c   Code   RO           66    .text.W25qxx_EraseSector  w25qxx.o
    0x080052b8   0x080052b8   0x000000c0   Code   RO           62    .text.W25qxx_Init   w25qxx.o
    0x08005378   0x08005378   0x00000080   Code   RO           96    .text.W25qxx_ReadBytes  w25qxx.o
    0x080053f8   0x080053f8   0x00000040   Code   RO           48    .text.W25qxx_ReadID  w25qxx.o
    0x08005438   0x08005438   0x0000006c   Code   RO           56    .text.W25qxx_ReadStatusRegister  w25qxx.o
    0x080054a4   0x080054a4   0x0000004c   Code   RO           50    .text.W25qxx_ReadUniqID  w25qxx.o
    0x080054f0   0x080054f0   0x00000028   Code   RO           46    .text.W25qxx_Spi    w25qxx.o
    0x08005518   0x08005518   0x0000004c   Code   RO           60    .text.W25qxx_WaitForWriteEnd  w25qxx.o
    0x08005564   0x08005564   0x00000080   Code   RO           86    .text.W25qxx_WriteByte  w25qxx.o
    0x080055e4   0x080055e4   0x00000030   Code   RO           52    .text.W25qxx_WriteEnable  w25qxx.o
    0x08005614   0x08005614   0x00000024   Code   RO         1175    .text.__NVIC_SetPriority  stm32f4xx_hal_cortex.o
    0x08005638   0x08005638   0x00000050   Code   RO         1811    .text.__user_perthread_libspace  rtx_lib.o
    0x08005688   0x08005688   0x0000001a   Code   RO         1817    .text._mutex_acquire  rtx_lib.o
    0x080056a2   0x080056a2   0x00000006   Code   RO         1821    .text._mutex_free   rtx_lib.o
    0x080056a8   0x080056a8   0x00000020   Code   RO         1815    .text._mutex_initialize  rtx_lib.o
    0x080056c8   0x080056c8   0x00000016   Code   RO         1819    .text._mutex_release  rtx_lib.o
    0x080056de   0x080056de   0x00000004   Code   RO         1809    .text._platform_post_stackheap_init  rtx_lib.o
    0x080056e2   0x080056e2   0x00000012   Code   RO         2315    .text._sys_close    retarget_io.o
    0x080056f4   0x080056f4   0x00000012   Code   RO         2325    .text._sys_flen     retarget_io.o
    0x08005706   0x08005706   0x00000010   Code   RO         2321    .text._sys_istty    retarget_io.o
    0x08005716   0x08005716   0x00000002   PAD
    0x08005718   0x08005718   0x00000060   Code   RO         2313    .text._sys_open     retarget_io.o
    0x08005778   0x08005778   0x00000022   Code   RO         2319    .text._sys_read     retarget_io.o
    0x0800579a   0x0800579a   0x00000014   Code   RO         2323    .text._sys_seek     retarget_io.o
    0x080057ae   0x080057ae   0x00000002   PAD
    0x080057b0   0x080057b0   0x00000024   Code   RO         2317    .text._sys_write    retarget_io.o
    0x080057d4   0x080057d4   0x000001c8   Code   RO            2    .text.app_main      osmain.o
    0x0800599c   0x0800599c   0x000000a0   Code   RO            4    .text.app_pwm       osmain.o
    0x08005a3c   0x08005a3c   0x00000014   Code   RO          171    .text.consoleCmdManageAppend  shell.o
    0x08005a50   0x08005a50   0x0000002a   Code   RO          173    .text.consoleCmdManageFind  shell.o
    0x08005a7a   0x08005a7a   0x0000000a   Code   RO          167    .text.consoleStringGetString  shell.o
    0x08005a84   0x08005a84   0x00000040   Code   RO          163    .text.consoleStringInsert  shell.o
    0x08005ac4   0x08005ac4   0x00000050   Code   RO          165    .text.consoleStringRemove  shell.o
    0x08005b14   0x08005b14   0x00000008   Code   RO          161    .text.consoleStringReset  shell.o
    0x08005b1c   0x08005b1c   0x00000070   Code   RO          159    .text.consoleStringSetString  shell.o
    0x08005b8c   0x08005b8c   0x00000088   Code   RO          169    .text.consoleStringStringSplit  shell.o
    0x08005c14   0x08005c14   0x0000000c   Code   RO          179    .text.console_cmd_init  shell.o
    0x08005c20   0x08005c20   0x00000178   Code   RO          175    .text.console_line_handle  shell.o
    0x08005d98   0x08005d98   0x00000046   Code   RO           22    .text.emHAL_UART_Transmit_DMA  serial.o
    0x08005dde   0x08005dde   0x00000002   PAD
    0x08005de0   0x08005de0   0x0000004c   Code   RO           24    .text.em_printf     serial.o
    0x08005e2c   0x08005e2c   0x00000004   Code   RO         2373    .text.fat_close     fs_config.o
    0x08005e30   0x08005e30   0x00000004   Code   RO         2385    .text.fat_ffind     fs_config.o
    0x08005e34   0x08005e34   0x00000006   Code   RO         2381    .text.fat_flen      fs_config.o
    0x08005e3a   0x08005e3a   0x00000006   Code   RO         2361    .text.fat_handle_get  fs_config.o
    0x08005e40   0x08005e40   0x00000004   Code   RO         2363    .text.fat_init      fs_config.o
    0x08005e44   0x08005e44   0x00000004   Code   RO         2367    .text.fat_mount     fs_config.o
    0x08005e48   0x08005e48   0x00000004   Code   RO         2371    .text.fat_open      fs_config.o
    0x08005e4c   0x08005e4c   0x00000006   Code   RO         2375    .text.fat_read      fs_config.o
    0x08005e52   0x08005e52   0x00000004   Code   RO         2383    .text.fat_seek      fs_config.o
    0x08005e56   0x08005e56   0x00000004   Code   RO         2365    .text.fat_uninit    fs_config.o
    0x08005e5a   0x08005e5a   0x00000004   Code   RO         2369    .text.fat_unmount   fs_config.o
    0x08005e5e   0x08005e5e   0x00000006   Code   RO         2377    .text.fat_write     fs_config.o
    0x08005e64   0x08005e64   0x00000040   Code   RO         2355    .text.fs_config     fs_config.o
    0x08005ea4   0x08005ea4   0x00000050   Code   RO         2449    .text.fs_config_evr  fs_debug.o
    0x08005ef4   0x08005ef4   0x00000004   Code   RO         2347    .text.fs_get_rtos_tick_freq  fs_config.o
    0x08005ef8   0x08005ef8   0x00000012   Code   RO         2341    .text.fs_mutex_acquire  fs_config.o
    0x08005f0a   0x08005f0a   0x0000000e   Code   RO         2345    .text.fs_mutex_delete  fs_config.o
    0x08005f18   0x08005f18   0x0000000e   Code   RO         2343    .text.fs_mutex_release  fs_config.o
    0x08005f26   0x08005f26   0x00000002   PAD
    0x08005f28   0x08005f28   0x00000014   Code   RO         2349    .text.fs_set_rtos_delay  fs_config.o
    0x08005f3c   0x08005f3c   0x00000096   Code   RO          153    .text.hAppend       shell.o
    0x08005fd2   0x08005fd2   0x00000008   Code   RO          151    .text.hInitialise   shell.o
    0x08005fda   0x08005fda   0x0000002a   Code   RO          157    .text.hNext         shell.o
    0x08006004   0x08006004   0x0000002c   Code   RO          155    .text.hPrevious     shell.o
    0x08006030   0x08006030   0x00000064   Code   RO           26    .text.initSerial    serial.o
    0x08006094   0x08006094   0x00000044   Code   RO          177    .text.m_cmd_fun_help  shell.o
    0x080060d8   0x080060d8   0x0000001e   Code   RO          204    .text.main          main.o
    0x080060f6   0x080060f6   0x0000000e   Code   RO           44    .text.mmdelay       w25qxx.o
    0x08006104   0x08006104   0x00000038   Code   RO         1333    .text.osDelay       rtx_delay.o
    0x0800613c   0x0800613c   0x0000002c   Code   RO         1752    .text.osKernelGetState  rtx_kernel.o
    0x08006168   0x08006168   0x00000024   Code   RO         1772    .text.osKernelGetTickFreq  rtx_kernel.o
    0x0800618c   0x0800618c   0x00000038   Code   RO         1746    .text.osKernelInitialize  rtx_kernel.o
    0x080061c4   0x080061c4   0x00000034   Code   RO         1756    .text.osKernelStart  rtx_kernel.o
    0x080061f8   0x080061f8   0x00000068   Code   RO            6    .text.osMain        osmain.o
    0x08006260   0x08006260   0x00000094   Code   RO         1919    .text.osMessageQueueGet  rtx_msgqueue.o
    0x080062f4   0x080062f4   0x00000044   Code   RO         1913    .text.osMessageQueueNew  rtx_msgqueue.o
    0x08006338   0x08006338   0x00000098   Code   RO         1917    .text.osMessageQueuePut  rtx_msgqueue.o
    0x080063d0   0x080063d0   0x0000003c   Code   RO         1976    .text.osMutexAcquire  rtx_mutex.o
    0x0800640c   0x0800640c   0x00000038   Code   RO         1982    .text.osMutexDelete  rtx_mutex.o
    0x08006444   0x08006444   0x0000003c   Code   RO         1972    .text.osMutexNew    rtx_mutex.o
    0x08006480   0x08006480   0x00000038   Code   RO         1978    .text.osMutexRelease  rtx_mutex.o
    0x080064b8   0x080064b8   0x00000002   Code   RO         2261    .text.osRtxErrorNotify  rtx_config.o
    0x080064ba   0x080064ba   0x00000002   Code   RO         2259    .text.osRtxIdleThread  rtx_config.o
    0x080064bc   0x080064bc   0x00000002   Code   RO         1744    .text.osRtxKernelPreInit  rtx_kernel.o
    0x080064be   0x080064be   0x0000008a   Code   RO         1847    .text.osRtxMemoryAlloc  rtx_memory.o
    0x08006548   0x08006548   0x00000052   Code   RO         1849    .text.osRtxMemoryFree  rtx_memory.o
    0x0800659a   0x0800659a   0x0000003e   Code   RO         1845    .text.osRtxMemoryInit  rtx_memory.o
    0x080065d8   0x080065d8   0x00000044   Code   RO         1862    .text.osRtxMemoryPoolAlloc  rtx_mempool.o
    0x0800661c   0x0800661c   0x00000056   Code   RO         1864    .text.osRtxMemoryPoolFree  rtx_mempool.o
    0x08006672   0x08006672   0x0000004c   Code   RO         1860    .text.osRtxMemoryPoolInit  rtx_mempool.o
    0x080066be   0x080066be   0x000000f2   Code   RO         1943    .text.osRtxMessageQueuePostProcess  rtx_msgqueue.o
    0x080067b0   0x080067b0   0x0000005a   Code   RO         1970    .text.osRtxMutexOwnerRelease  rtx_mutex.o
    0x0800680a   0x0800680a   0x00000002   PAD
    0x0800680c   0x0800680c   0x0000008c   Code   RO         2042    .text.osRtxPendSV_Handler  rtx_system.o
    0x08006898   0x08006898   0x00000070   Code   RO         2044    .text.osRtxPostProcess  rtx_system.o
    0x08006908   0x08006908   0x00000042   Code   RO         2021    .text.osRtxSemaphorePostProcess  rtx_semaphore.o
    0x0800694a   0x0800694a   0x00000002   PAD
    0x0800694c   0x0800694c   0x00000038   Code   RO         2077    .text.osRtxThreadBlock  rtx_thread.o
    0x08006984   0x08006984   0x00000084   Code   RO         2085    .text.osRtxThreadDelayInsert  rtx_thread.o
    0x08006a08   0x08006a08   0x00000038   Code   RO         2081    .text.osRtxThreadDelayRemove  rtx_thread.o
    0x08006a40   0x08006a40   0x000000b8   Code   RO         2065    .text.osRtxThreadDelayTick  rtx_thread.o
    0x08006af8   0x08006af8   0x00000058   Code   RO         2075    .text.osRtxThreadDispatch  rtx_thread.o
    0x08006b50   0x08006b50   0x00000058   Code   RO         2161    .text.osRtxThreadFree  rtx_thread.o
    0x08006ba8   0x08006ba8   0x00000014   Code   RO         2057    .text.osRtxThreadListGet  rtx_thread.o
    0x08006bbc   0x08006bbc   0x0000002a   Code   RO         2055    .text.osRtxThreadListPut  rtx_thread.o
    0x08006be6   0x08006be6   0x00000014   Code   RO         2061    .text.osRtxThreadListRemove  rtx_thread.o
    0x08006bfa   0x08006bfa   0x0000000c   Code   RO         2067    .text.osRtxThreadListRoot  rtx_thread.o
    0x08006c06   0x08006c06   0x00000028   Code   RO         2059    .text.osRtxThreadListSort  rtx_thread.o
    0x08006c2e   0x08006c2e   0x0000003a   Code   RO         2135    .text.osRtxThreadPostProcess  rtx_thread.o
    0x08006c68   0x08006c68   0x00000014   Code   RO         2063    .text.osRtxThreadReadyPut  rtx_thread.o
    0x08006c7c   0x08006c7c   0x00000014   Code   RO         2069    .text.osRtxThreadRegPtr  rtx_thread.o
    0x08006c90   0x08006c90   0x00000024   Code   RO         2073    .text.osRtxThreadStackCheck  rtx_thread.o
    0x08006cb4   0x08006cb4   0x00000038   Code   RO         2087    .text.osRtxThreadStartup  rtx_thread.o
    0x08006cec   0x08006cec   0x00000020   Code   RO         2071    .text.osRtxThreadSwitch  rtx_thread.o
    0x08006d0c   0x08006d0c   0x0000004c   Code   RO         2083    .text.osRtxThreadWaitEnter  rtx_thread.o
    0x08006d58   0x08006d58   0x00000038   Code   RO         2079    .text.osRtxThreadWaitExit  rtx_thread.o
    0x08006d90   0x08006d90   0x00000078   Code   RO         2040    .text.osRtxTick_Handler  rtx_system.o
    0x08006e08   0x08006e08   0x00000040   Code   RO         2190    .text.osRtxTimerThread  rtx_timer.o
    0x08006e48   0x08006e48   0x00000058   Code   RO         2192    .text.osRtxTimerTick  rtx_timer.o
    0x08006ea0   0x08006ea0   0x00000080   Code   RO         2009    .text.osSemaphoreAcquire  rtx_semaphore.o
    0x08006f20   0x08006f20   0x00000044   Code   RO         2005    .text.osSemaphoreNew  rtx_semaphore.o
    0x08006f64   0x08006f64   0x0000008c   Code   RO         2011    .text.osSemaphoreRelease  rtx_semaphore.o
    0x08006ff0   0x08006ff0   0x0000001c   Code   RO         2119    .text.osThreadExit  rtx_thread.o
    0x0800700c   0x0800700c   0x00000024   Code   RO         2095    .text.osThreadGetId  rtx_thread.o
    0x08007030   0x08007030   0x00000044   Code   RO         2091    .text.osThreadNew   rtx_thread.o
    0x08007074   0x08007074   0x00000020   Code   RO         1813    .text.os_kernel_is_active  rtx_lib.o
    0x08007094   0x08007094   0x00000084   Code   RO           32    .text.registerSerial  serial.o
    0x08007118   0x08007118   0x00000046   Code   RO           28    .text.restartDMA    serial.o
    0x0800715e   0x0800715e   0x00000002   PAD
    0x08007160   0x08007160   0x00000028   Code   RO         1337    .text.svcRtxDelay   rtx_delay.o
    0x08007188   0x08007188   0x00000014   Code   RO         1754    .text.svcRtxKernelGetState  rtx_kernel.o
    0x0800719c   0x0800719c   0x00000014   Code   RO         1774    .text.svcRtxKernelGetTickFreq  rtx_kernel.o
    0x080071b0   0x080071b0   0x00000154   Code   RO         1784    .text.svcRtxKernelInitialize  rtx_kernel.o
    0x08007304   0x08007304   0x000000a0   Code   RO         1786    .text.svcRtxKernelStart  rtx_kernel.o
    0x080073a4   0x080073a4   0x00000110   Code   RO         1955    .text.svcRtxMessageQueueGet  rtx_msgqueue.o
    0x080074b4   0x080074b4   0x00000144   Code   RO         1941    .text.svcRtxMessageQueueNew  rtx_msgqueue.o
    0x080075f8   0x080075f8   0x000000ec   Code   RO         1951    .text.svcRtxMessageQueuePut  rtx_msgqueue.o
    0x080076e4   0x080076e4   0x000000d4   Code   RO         1988    .text.svcRtxMutexAcquire  rtx_mutex.o
    0x080077b8   0x080077b8   0x000000c4   Code   RO         1994    .text.svcRtxMutexDelete  rtx_mutex.o
    0x0800787c   0x0800787c   0x00000080   Code   RO         1984    .text.svcRtxMutexNew  rtx_mutex.o
    0x080078fc   0x080078fc   0x000000e8   Code   RO         1990    .text.svcRtxMutexRelease  rtx_mutex.o
    0x080079e4   0x080079e4   0x00000088   Code   RO         2025    .text.svcRtxSemaphoreAcquire  rtx_semaphore.o
    0x08007a6c   0x08007a6c   0x0000009c   Code   RO         2019    .text.svcRtxSemaphoreNew  rtx_semaphore.o
    0x08007b08   0x08007b08   0x00000086   Code   RO         2027    .text.svcRtxSemaphoreRelease  rtx_semaphore.o
    0x08007b8e   0x08007b8e   0x00000002   PAD
    0x08007b90   0x08007b90   0x00000078   Code   RO         2165    .text.svcRtxThreadExit  rtx_thread.o
    0x08007c08   0x08007c08   0x00000014   Code   RO         2097    .text.svcRtxThreadGetId  rtx_thread.o
    0x08007c1c   0x08007c1c   0x000001ec   Code   RO         2089    .text.svcRtxThreadNew  rtx_thread.o
    0x08007e08   0x08007e08   0x0000003e   Code   RO         3134    CL$$btod_d2e        c_w.l(btod.o)
    0x08007e46   0x08007e46   0x00000046   Code   RO         3136    CL$$btod_d2e_denorm_low  c_w.l(btod.o)
    0x08007e8c   0x08007e8c   0x00000060   Code   RO         3135    CL$$btod_d2e_norm_op1  c_w.l(btod.o)
    0x08007eec   0x08007eec   0x00000338   Code   RO         3144    CL$$btod_div_common  c_w.l(btod.o)
    0x08008224   0x08008224   0x000000dc   Code   RO         3141    CL$$btod_e2e        c_w.l(btod.o)
    0x08008300   0x08008300   0x0000002a   Code   RO         3138    CL$$btod_ediv       c_w.l(btod.o)
    0x0800832a   0x0800832a   0x0000002a   Code   RO         3137    CL$$btod_emul       c_w.l(btod.o)
    0x08008354   0x08008354   0x00000244   Code   RO         3143    CL$$btod_mult_common  c_w.l(btod.o)
    0x08008598   0x08008598   0x0000000c   Code   RO         2461    i.EvrFsEFS_FileHandleInvalid  FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x080085a4   0x080085a4   0x00000010   Code   RO         2462    i.EvrFsEFS_FileName  FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x080085b4   0x080085b4   0x0000000c   Code   RO         2463    i.EvrFsEFS_FileNotOpened  FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x080085c0   0x080085c0   0x00000014   Code   RO         2464    i.EvrFsEFS_FlashReadFailed  FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x080085d4   0x080085d4   0x00000014   Code   RO         2465    i.EvrFsEFS_FlashReadTimeout  FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x080085e8   0x080085e8   0x00000030   Code   RO         3218    i.__ARM_fpclassify  m_wm.l(fpclassify.o)
    0x08008618   0x08008618   0x00000074   Code   RO         2651    i.__sys_close       FS_Dbg_LFN_CM3_L.lib(fs_sys.o)
    0x0800868c   0x0800868c   0x00000074   Code   RO         2653    i.__sys_flen        FS_Dbg_LFN_CM3_L.lib(fs_sys.o)
    0x08008700   0x08008700   0x000000b0   Code   RO         2654    i.__sys_open        FS_Dbg_LFN_CM3_L.lib(fs_sys.o)
    0x080087b0   0x080087b0   0x00000094   Code   RO         2655    i.__sys_read        FS_Dbg_LFN_CM3_L.lib(fs_sys.o)
    0x08008844   0x08008844   0x00000088   Code   RO         2656    i.__sys_seek        FS_Dbg_LFN_CM3_L.lib(fs_sys.o)
    0x080088cc   0x080088cc   0x00000088   Code   RO         2657    i.__sys_write       FS_Dbg_LFN_CM3_L.lib(fs_sys.o)
    0x08008954   0x08008954   0x0000000e   Code   RO         2906    i._is_digit         c_w.l(__printf_wp.o)
    0x08008962   0x08008962   0x00000012   Code   RO         2466    i.addr_of_block     FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x08008974   0x08008974   0x0000001c   Code   RO         2467    i.addr_of_sign      FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x08008990   0x08008990   0x0000006e   Code   RO         2468    i.block_erase       FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x080089fe   0x080089fe   0x00000218   Code   RO         2469    i.block_read        FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x08008c16   0x08008c16   0x00000080   Code   RO         2470    i.block_write       FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x08008c96   0x08008c96   0x0000009a   Code   RO         2477    i.efs_AllocBlock    FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x08008d30   0x08008d30   0x00000036   Code   RO         2478    i.efs_BlockInvalid  FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x08008d66   0x08008d66   0x00000008   Code   RO         2479    i.efs_DrvEvent      FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x08008d6e   0x08008d6e   0x00000002   PAD
    0x08008d70   0x08008d70   0x00000090   Code   RO         2482    i.efs_close         FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x08008e00   0x08008e00   0x000000f4   Code   RO         2485    i.efs_ffind         FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x08008ef4   0x08008ef4   0x0000004c   Code   RO         2486    i.efs_flen          FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x08008f40   0x08008f40   0x00000042   Code   RO         2490    i.efs_get_freeMem   FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x08008f82   0x08008f82   0x00000002   PAD
    0x08008f84   0x08008f84   0x0000004c   Code   RO         2491    i.efs_handle_get    FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x08008fd0   0x08008fd0   0x0000006c   Code   RO         2493    i.efs_init          FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x0800903c   0x0800903c   0x00000034   Code   RO         2494    i.efs_is_busy       FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x08009070   0x08009070   0x0000008a   Code   RO         2495    i.efs_mark_fileMem  FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x080090fa   0x080090fa   0x00000044   Code   RO         2496    i.efs_mark_freeMem  FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x0800913e   0x0800913e   0x00000002   PAD
    0x08009140   0x08009140   0x000000cc   Code   RO         2497    i.efs_mount         FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x0800920c   0x0800920c   0x00000150   Code   RO         2498    i.efs_open          FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x0800935c   0x0800935c   0x0000007e   Code   RO         2499    i.efs_rd            FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x080093da   0x080093da   0x00000002   PAD
    0x080093dc   0x080093dc   0x0000008c   Code   RO         2500    i.efs_read          FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x08009468   0x08009468   0x000000fc   Code   RO         2502    i.efs_seek          FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x08009564   0x08009564   0x0000004c   Code   RO         2503    i.efs_uninit        FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x080095b0   0x080095b0   0x00000060   Code   RO         2504    i.efs_unmount       FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x08009610   0x08009610   0x0000003e   Code   RO         2505    i.efs_vol_chk       FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x0800964e   0x0800964e   0x00000126   Code   RO         2506    i.efs_wr            FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x08009774   0x08009774   0x00000098   Code   RO         2507    i.efs_write         FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x0800980c   0x0800980c   0x00000088   Code   RO         2508    i.falloc_read       FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x08009894   0x08009894   0x0000003c   Code   RO         2509    i.falloc_write      FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x080098d0   0x080098d0   0x000000f4   Code   RO         2596    i.ffind             FS_Dbg_LFN_CM3_L.lib(fs_mapi.o)
    0x080099c4   0x080099c4   0x00000018   Code   RO         3074    i.fgetc             c_w.l(fgetc.o)
    0x080099dc   0x080099dc   0x0000012a   Code   RO         2510    i.file_create       FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x08009b06   0x08009b06   0x00000098   Code   RO         2511    i.file_delete       FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x08009b9e   0x08009b9e   0x0000009c   Code   RO         2512    i.file_find         FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x08009c3a   0x08009c3a   0x0000005a   Code   RO         2513    i.file_id_alloc     FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x08009c94   0x08009c94   0x0000004a   Code   RO         2514    i.file_name_validate  FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x08009cde   0x08009cde   0x0000007e   Code   RO         2515    i.file_size_get     FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x08009d5c   0x08009d5c   0x00000058   Code   RO         2600    i.finit             FS_Dbg_LFN_CM3_L.lib(fs_mapi.o)
    0x08009db4   0x08009db4   0x00000064   Code   RO         2603    i.fmount            FS_Dbg_LFN_CM3_L.lib(fs_mapi.o)
    0x08009e18   0x08009e18   0x000000a8   Code   RO         2607    i.fs_component_init  FS_Dbg_LFN_CM3_L.lib(fs_mapi.o)
    0x08009ec0   0x08009ec0   0x000000cc   Code   RO         2677    i.fs_drive_id       FS_Dbg_LFN_CM3_L.lib(fs_common.o)
    0x08009f8c   0x08009f8c   0x00000020   Code   RO         2678    i.fs_set_cdrive     FS_Dbg_LFN_CM3_L.lib(fs_common.o)
    0x08009fac   0x08009fac   0x00000050   Code   RO         2679    i.fs_strmatch       FS_Dbg_LFN_CM3_L.lib(fs_common.o)
    0x08009ffc   0x08009ffc   0x00000042   Code   RO         2680    i.fs_strncasecmp    FS_Dbg_LFN_CM3_L.lib(fs_common.o)
    0x0800a03e   0x0800a03e   0x00000018   Code   RO         2681    i.fs_strpos         FS_Dbg_LFN_CM3_L.lib(fs_common.o)
    0x0800a056   0x0800a056   0x00000002   PAD
    0x0800a058   0x0800a058   0x00000048   Code   RO         2609    i.funinit           FS_Dbg_LFN_CM3_L.lib(fs_mapi.o)
    0x0800a0a0   0x0800a0a0   0x00000064   Code   RO         2610    i.funmount          FS_Dbg_LFN_CM3_L.lib(fs_mapi.o)
    0x0800a104   0x0800a104   0x00000016   Code   RO         2683    i.get_u32           FS_Dbg_LFN_CM3_L.lib(fs_common.o)
    0x0800a11a   0x0800a11a   0x00000086   Code   RO         2516    i.sign_read         FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x0800a1a0   0x0800a1a0   0x0000002a   Code   RO         2517    i.sign_write        FS_Dbg_LFN_CM3_L.lib(fs_efs.o)
    0x0800a1ca   0x0800a1ca   0x00000002   PAD
    0x0800a1cc   0x0800a1cc   0x0000002c   Code   RO         3171    locale$$code        c_w.l(lc_numeric_c.o)
    0x0800a1f8   0x0800a1f8   0x0000002c   Code   RO         3251    locale$$code        c_w.l(lc_ctype_c.o)
    0x0800a224   0x0800a224   0x0000001a   Code   RO         3102    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x0800a23e   0x0800a23e   0x00000004   Code   RO         3009    x$fpl$printf1       fz_wm.l(printf1.o)
    0x0800a242   0x0800a242   0x00000004   Code   RO         3011    x$fpl$printf2       fz_wm.l(printf2.o)
    0x0800a246   0x0800a246   0x00000000   Code   RO         3217    x$fpl$usenofp       fz_wm.l(usenofp.o)
    0x0800a246   0x0800a246   0x00000002   PAD
    0x0800a248   0x0800a248   0x00000008   Data   RO         2865    .constdata          c_w.l(_printf_wctomb.o)
    0x0800a250   0x0800a250   0x00000028   Data   RO         2894    .constdata          c_w.l(_printf_hex_int_ll_ptr.o)
    0x0800a278   0x0800a278   0x00000011   Data   RO         2914    .constdata          c_w.l(__printf_flags_ss_wp.o)
    0x0800a289   0x0800a289   0x00000026   Data   RO         3060    .constdata          c_w.l(_printf_fp_hex.o)
    0x0800a2af   0x0800a2af   0x00000001   PAD
    0x0800a2b0   0x0800a2b0   0x00000094   Data   RO         3132    .constdata          c_w.l(bigflt0.o)
    0x0800a344   0x0800a344   0x000000a0   Data   RO         1827    .rodata             rtx_lib.o
    0x0800a3e4   0x0800a3e4   0x00000010   Data   RO         1317    .rodata.AHBPrescTable  system_stm32f4xx.o
    0x0800a3f4   0x0800a3f4   0x00000008   Data   RO         1318    .rodata.APBPrescTable  system_stm32f4xx.o
    0x0800a3fc   0x0800a3fc   0x0000002c   Data   RO          141    .rodata.Driver_Flash0  driver_flash.o
    0x0800a428   0x0800a428   0x00000018   Data   RO         2303    .rodata.EventRecorderInfo  eventrecorder.o
    0x0800a440   0x0800a440   0x00000018   Data   RO          140    .rodata.FlashInfo   driver_flash.o
    0x0800a458   0x0800a458   0x00000008   Data   RO         2329    .rodata.__stderr_name  retarget_io.o
    0x0800a460   0x0800a460   0x00000007   Data   RO         2327    .rodata.__stdin_name  retarget_io.o
    0x0800a467   0x0800a467   0x00000008   Data   RO         2328    .rodata.__stdout_name  retarget_io.o
    0x0800a46f   0x0800a46f   0x00000001   PAD
    0x0800a470   0x0800a470   0x00000008   Data   RO         2434    .rodata.fs_DevPool  fs_config.o
    0x0800a478   0x0800a478   0x00000001   Data   RO         2430    .rodata.fs_efs_fh_cnt  fs_config.o
    0x0800a479   0x0800a479   0x00000001   Data   RO         2429    .rodata.fs_fat_fh_cnt  fs_config.o
    0x0800a47a   0x0800a47a   0x00000001   Data   RO         2431    .rodata.fs_ndrv     fs_config.o
    0x0800a47b   0x0800a47b   0x00000001   PAD
    0x0800a47c   0x0800a47c   0x00000008   Data   RO         2438    .rodata.fs_nor0_flash_tout  fs_config.o
    0x0800a484   0x0800a484   0x00000010   Data   RO         2437    .rodata.fs_nor0_mtx_at  fs_config.o
    0x0800a494   0x0800a494   0x00000004   Data   RO         1829    .rodata.osRtxUserSVC  rtx_lib.o
    0x0800a498   0x0800a498   0x00000024   Data   RO         1824    .rodata.os_idle_thread_attr  rtx_lib.o
    0x0800a4bc   0x0800a4bc   0x00000018   Data   RO         1826    .rodata.os_timer_mq_attr  rtx_lib.o
    0x0800a4d4   0x0800a4d4   0x00000024   Data   RO         1825    .rodata.os_timer_thread_attr  rtx_lib.o
    0x0800a4f8   0x0800a4f8   0x0000006c   Data   RO          185    .rodata.s_cmd_1     shell.o
    0x0800a564   0x0800a564   0x0000008c   Data   RO            9    .rodata.str1.1      osmain.o
    0x0800a5f0   0x0800a5f0   0x00000046   Data   RO          184    .rodata.str1.1      shell.o
    0x0800a636   0x0800a636   0x00000002   PAD
    0x0800a638   0x0800a638   0x0000000b   Data   RO         1798    .rodata.str1.4      rtx_kernel.o
    0x0800a643   0x0800a643   0x00000001   PAD
    0x0800a644   0x0800a644   0x00000020   Data   RO         3291    Region$$Table       anon$$obj.o
    0x0800a664   0x0800a664   0x0000001c   Data   RO         3170    locale$$data        c_w.l(lc_numeric_c.o)
    0x0800a680   0x0800a680   0x00000110   Data   RO         3250    locale$$data        c_w.l(lc_ctype_c.o)


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x0800a7c0, Size: 0x000081f0, Max: 0x00020000, ABSOLUTE, COMPRESSED[0x00000080])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   COMPRESSED   0x00000001   Data   RW         2612    .data               FS_Dbg_LFN_CM3_L.lib(fs_mapi.o)
    0x20000001   COMPRESSED   0x00000001   Data   RW         2686    .data               FS_Dbg_LFN_CM3_L.lib(fs_common.o)
    0x20000002   COMPRESSED   0x00000002   PAD
    0x20000004   COMPRESSED   0x00000004   Data   RW         2953    .data               c_w.l(streamlock.o)
    0x20000008   COMPRESSED   0x00000004   Data   RW         2957    .data               c_w.l(stdio_streams.o)
    0x2000000c   COMPRESSED   0x00000004   Data   RW         2958    .data               c_w.l(stdio_streams.o)
    0x20000010   COMPRESSED   0x00000004   Data   RW         2959    .data               c_w.l(stdio_streams.o)
    0x20000014   COMPRESSED   0x00000008   Data   RW         1275    .data..L_MergedGlobals  stm32f4xx_hal.o
    0x2000001c   COMPRESSED   0x00000004   Data   RW         1316    .data.SystemCoreClock  system_stm32f4xx.o
    0x20000020   COMPRESSED   0x00000014   Data   RW          183    .data.emConsoleCmdManage  shell.o
    0x20000034   COMPRESSED   0x000000c8   Data   RW          182    .data.emConsoleString  shell.o
    0x200000fc   COMPRESSED   0x00000208   Data   RW          181    .data.emHistory     shell.o
    0x20000304   COMPRESSED   0x000000a4   Data   RW         1799    .data.os            rtx_kernel.o
    0x200003a8   COMPRESSED   0x00000018   PAD
    0x200003c0        -       0x00000054   Zero   RW         2954    .bss                c_w.l(stdio_streams.o)
    0x20000414        -       0x00000054   Zero   RW         2955    .bss                c_w.l(stdio_streams.o)
    0x20000468        -       0x00000054   Zero   RW         2956    .bss                c_w.l(stdio_streams.o)
    0x200004bc        -       0x00000060   Zero   RW         3022    .bss                c_w.l(libspace.o)
    0x2000051c        -       0x0000000c   Zero   RW           12    .bss..L_MergedGlobals  osmain.o
    0x20000528        -       0x00000008   Zero   RW           34    .bss..L_MergedGlobals  serial.o
    0x20000530        -       0x00000004   Zero   RW          138    .bss.FlashStatus    driver_flash.o
    0x20000534        -       0x00000001   Zero   RW         2249    .bss.PendST         os_systick.o
    0x20000535   COMPRESSED   0x00000003   PAD
    0x20000538        -       0x00000004   Zero   RW          139    .bss.cnt            driver_flash.o
    0x2000053c        -       0x00000070   Zero   RW         2436    .bss.fs_efs_fh      fs_config.o
    0x200005ac        -       0x00000024   Zero   RW         2435    .bss.fs_fat_fh      fs_config.o
    0x200005d0        -       0x00000004   Zero   RW         2432    .bss.fs_ms_rtos_tick  fs_config.o
    0x200005d4        -       0x00000038   Zero   RW         2433    .bss.fs_nor0_vol    fs_config.o
    0x2000060c        -       0x00000060   Zero   RW          266    .bss.hdma_usart1_rx  usart.o
    0x2000066c        -       0x00000060   Zero   RW          267    .bss.hdma_usart1_tx  usart.o
    0x200006cc        -       0x00000058   Zero   RW          249    .bss.hspi2          spi.o
    0x20000724        -       0x00000040   Zero   RW          318    .bss.htim11         stm32f4xx_hal_timebase_tim.o
    0x20000764        -       0x00000040   Zero   RW          265    .bss.huart1         usart.o
    0x200007a4        -       0x00000002   Zero   RW            8    .bss.light          osmain.o
    0x200007a6   COMPRESSED   0x0000001a   PAD
    0x200007c0        -       0x000004a4   Zero   RW         2302    .bss.noinit         eventrecorder.o
    0x20000c64   COMPRESSED   0x00000004   PAD
    0x20000c68        -       0x00001040   Zero   RW         1823    .bss.os             rtx_lib.o
    0x20001ca8        -       0x000001f0   Zero   RW         1830    .bss.os.libspace    rtx_lib.o
    0x20001e98        -       0x00000034   Zero   RW         1833    .bss.os.msgqueue.cb  rtx_lib.o
    0x20001ecc        -       0x00000050   Zero   RW         1834    .bss.os.msgqueue.mem  rtx_lib.o
    0x20001f1c        -       0x0000001c   Zero   RW         2439    .bss.os.mutex.cb    fs_config.o
    0x20001f38        -       0x00000088   Zero   RW         1831    .bss.os.thread.cb   rtx_lib.o
    0x20001fc0        -       0x00000200   Zero   RW         1832    .bss.os.thread.stack  rtx_lib.o
    0x200021c0        -       0x00000001   Zero   RW         1835    .bss.os_kernel_is_active.os_kernel_active  rtx_lib.o
    0x200021c1   COMPRESSED   0x00000003   PAD
    0x200021c4        -       0x00000004   Zero   RW         1274    .bss.uwTick         stm32f4xx_hal.o
    0x200021c8        -       0x00000028   Zero   RW          104    .bss.w25qxx         w25qxx.o
    0x200021f0        -       0x00005000   Zero   RW          195    HEAP                startup_stm32f411xe.o
    0x200071f0        -       0x00001000   Zero   RW          194    STACK               startup_stm32f411xe.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

        64          0          0          0          0       2883   dma.o
       200         20         68          0          8       4275   driver_flash.o
      1396         68         24          0       1188       9465   eventrecorder.o
       202         28         35          0        236      14132   fs_config.o
        80          8          0          0          0        762   fs_debug.o
       212         16          0          0          0       2272   gpio.o
       196         12          0          0          0        664   irq_cm4f.o
       184         12          0          0          0       5318   main.o
       110         16          0          0          1       4125   os_systick.o
       720        236        140          0         14       5782   osmain.o
       238         24         23          0          0       2148   retarget_io.o
         4          0          0          0          0        795   rtx_config.o
        96          8          0          0          0       4264   rtx_delay.o
      1190        248          0          0          0      34529   rtx_evr.o
       730         40         11        164          0      17399   rtx_kernel.o
       202         12        260          0       5437       7129   rtx_lib.o
       282          0          0          0          0       2707   rtx_memory.o
       230          0          0          0          0      15301   rtx_mempool.o
      1636         24          0          0          0      18932   rtx_msgqueue.o
      1090         24          0          0          0       9973   rtx_mutex.o
       828         20          0          0          0      11609   rtx_semaphore.o
       372         18          0          0          0       5576   rtx_system.o
      1962         74          0          0          0      34217   rtx_thread.o
       232         16          0          0          0      10942   rtx_timer.o
       520         60          0          0          8       5511   serial.o
      1172        112        178        740          0       6307   shell.o
       176         16          0          0         88       4979   spi.o
        64         26        408          0      24576        880   startup_stm32f411xe.o
        84         12          0          8          4       6875   stm32f4xx_hal.o
       156         20          0          0          0       9370   stm32f4xx_hal_cortex.o
       712         20          0          0          0       8327   stm32f4xx_hal_dma.o
       402         20          0          0          0       4927   stm32f4xx_hal_gpio.o
        56          4          0          0          0       1546   stm32f4xx_hal_msp.o
      1216         44          0          0          0       7113   stm32f4xx_hal_rcc.o
      1190          4          0          0          0      19205   stm32f4xx_hal_spi.o
       588         28          0          0          0      35469   stm32f4xx_hal_tim.o
         4          0          0          0          0      13671   stm32f4xx_hal_tim_ex.o
       120         16          0          0         64       6289   stm32f4xx_hal_timebase_tim.o
       472         12          0          0          0      15882   stm32f4xx_hal_uart.o
        48         12          0          0          0       1107   stm32f4xx_it.o
       184         36         24          4          0       2692   system_stm32f4xx.o
       288         20          0          0        256       6417   usart.o
      1074         42          0          0         40      11667   w25qxx.o

    ----------------------------------------------------------------------
     21018       1428       1208        916      31980     393433   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        36          0          5          0         60          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       428         24          0          1          0        456   fs_common.o
      5094        128          0          0          0       3468   fs_efs.o
       772         84          0          1          0        508   fs_mapi.o
       828         78          0          0          0        496   fs_sys.o
        24          0          0          0          0         84   __0fscanf.o
        60          8          0          0          0         84   __0sscanf.o
        58          0          0          0          0          0   __dczerorl.o
         8          0          0          0          0         68   __main.o
       392          4         17          0          0         92   __printf_flags_ss_wp.o
        14          0          0          0          0         68   __printf_wp.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        28          0          0          0          0          0   __scatter_zi.o
        72          0          0          0          0         96   _c16rtomb.o
         6          0          0          0          0          0   _printf_a.o
         6          0          0          0          0          0   _printf_c.o
        44          0          0          0          0        108   _printf_char.o
        48          6          0          0          0         96   _printf_char_common.o
        40          0          0          0          0         68   _printf_charcount.o
         6          0          0          0          0          0   _printf_d.o
       120         16          0          0          0         92   _printf_dec.o
         6          0          0          0          0          0   _printf_e.o
         6          0          0          0          0          0   _printf_f.o
      1052          0          0          0          0        148   _printf_fp_dec.o
       764          8         38          0          0        100   _printf_fp_hex.o
       128         16          0          0          0         84   _printf_fp_infnan.o
         6          0          0          0          0          0   _printf_g.o
       148          4         40          0          0        160   _printf_hex_int_ll_ptr.o
         6          0          0          0          0          0   _printf_i.o
       178          0          0          0          0         88   _printf_intcommon.o
        10          0          0          0          0          0   _printf_l.o
         6          0          0          0          0          0   _printf_lc.o
        10          0          0          0          0          0   _printf_ll.o
         6          0          0          0          0          0   _printf_lld.o
         6          0          0          0          0          0   _printf_lli.o
         6          0          0          0          0          0   _printf_llo.o
         6          0          0          0          0          0   _printf_llu.o
         6          0          0          0          0          0   _printf_llx.o
       124         16          0          0          0         92   _printf_longlong_dec.o
         6          0          0          0          0          0   _printf_ls.o
         6          0          0          0          0          0   _printf_n.o
         6          0          0          0          0          0   _printf_o.o
       112          8          0          0          0        124   _printf_oct_int_ll.o
         6          0          0          0          0          0   _printf_p.o
        78          0          0          0          0        108   _printf_pad.o
         0          0          0          0          0          0   _printf_percent.o
         4          0          0          0          0          0   _printf_percent_end.o
         6          0          0          0          0          0   _printf_s.o
        82          0          0          0          0         80   _printf_str.o
        36          0          0          0          0         84   _printf_truncate.o
         6          0          0          0          0          0   _printf_u.o
        44          0          0          0          0        108   _printf_wchar.o
       188          6          8          0          0         92   _printf_wctomb.o
         6          0          0          0          0          0   _printf_x.o
       884          6          0          0          0        100   _scanf.o
       224          0          0          0          0         96   _scanf_str.o
        64          0          0          0          0         84   _sgetc.o
        16          0          0          0          0         68   _snputc.o
        10          0          0          0          0         68   _sputc.o
        72          0          0          0          0         92   backspace.o
       228          4        148          0          0         96   bigflt0.o
      1936        128          0          0          0        672   btod.o
        10          0          0          0          0         68   defsig_exit.o
        50          0          0          0          0         88   defsig_general.o
        80         58          0          0          0         76   defsig_rtmem_inner.o
        14          0          0          0          0         80   defsig_rtmem_outer.o
        52         38          0          0          0         76   defsig_rtred_inner.o
        14          0          0          0          0         80   defsig_rtred_outer.o
        18          0          0          0          0         80   exit.o
        76          0          0          0          0         88   fclose.o
        52          6          0          0          0         80   fclose_locked.o
       144         10          0          0          0        128   fflush_locked.o
        24          0          0          0          0         68   fgetc.o
       570          0          0          0          0        132   filbuf.o
       470          0          0          0          0         88   flsbuf.o
        92          8          0          0          0         88   flushlinebuffered_locked.o
       324          8          0          0          0        152   fopen_locked.o
       248          6          0          0          0         84   fseek.o
        66          0          0          0          0         76   ftell.o
       208          0          0          0          0         92   fwritefast_locked.o
       166          0          0          0          0        144   h1_alloc_threads.o
        82          0          0          0          0        104   h1_extend_threads.o
        10          0          0          0          0         76   h1_final_threads.o
       118          0          0          0          0        108   h1_free_threads.o
        18          0          0          0          0         84   h1_init_threads.o
         6          0          0          0          0        152   heapauxi.o
         4          0          0          0          0        136   hguard.o
         0          0          0          0          0          0   indicate_semi.o
       138          0          0          0          0        168   init_alloc.o
       456         48          0          0          0        116   initio_locked.o
        18          0          0          0          0         76   isspace.o
        44         10        272          0          0         76   lc_ctype_c.o
        44         10         28          0          0         76   lc_numeric_c.o
         2          0          0          0          0          0   libinit.o
        46          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
        10          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
       138          0          0          0          0         80   lludiv10.o
       238          0          0          0          0        100   lludivv7m.o
         0          0          0          0          0          0   maybetermalloc2.o
        16          4          0          0          0         76   rt_ctype_table.o
         4          0          0          0          0         68   rt_errno_addr_twolibspace.o
        10          0          0          0          0         76   rt_heap_descriptor_twolibspace.o
        10          0          0          0          0         76   rt_locale_twolibspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        44          8          0          0          0         84   scanf_char.o
        64          8          0          0          0         84   scanf_char_file_locked.o
       104          0          0          0          0         88   setvbuf_locked.o
       240          6          0          0          0        156   stdio.o
         0          0          0         12        252          0   stdio_streams.o
       124          0          0          0          0         88   strcmpv7em.o
         0          0          0          4          0          0   streamlock.o
        62          0          0          0          0         76   strlen.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
        14          0          0          0          0         76   sys_wrch.o
        16          0          0          0          0         80   term_alloc.o
        72         12          0          0          0         68   ungetc.o
         2          0          0          0          0         68   use_no_semi.o
        52          4          0          0          0         80   vsnprintf.o
        26          0          0          0          0        116   fpinit.o
         4          0          0          0          0        116   printf1.o
         4          0          0          0          0        116   printf2.o
         0          0          0          0          0          0   usenofp.o
        48          0          0          0          0        124   fpclassify.o

    ----------------------------------------------------------------------
     20118        804        552         20        348      13676   Library Totals
        40          0          1          2          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      7122        314          0          2          0       4928   FS_Dbg_LFN_CM3_L.lib
     12874        490        551         16        348       8276   c_w.l
        34          0          0          0          0        348   fz_wm.l
        48          0          0          0          0        124   m_wm.l

    ----------------------------------------------------------------------
     20118        804        552         20        348      13676   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     41136       2232       1760        936      32328     398629   Grand Totals
     41136       2232       1760        128      32328     398629   ELF Image Totals (compressed)
     41136       2232       1760        128          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                42896 (  41.89kB)
    Total RW  Size (RW Data + ZI Data)             33264 (  32.48kB)
    Total ROM Size (Code + RO Data + RW Data)      43024 (  42.02kB)

==============================================================================

