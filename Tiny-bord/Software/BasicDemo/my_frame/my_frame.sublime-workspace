{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"uint",
				"uint8_t\tuint8_t"
			],
			[
				"oled",
				"oled_config.h\tE:\\DDZ-Office\\Tiny-bord\\Software\\BasicDemo\\my_frame\\User"
			],
			[
				"de",
				"delay_config.h\tE:\\DDZ-Office\\Tiny-bord\\Software\\BasicDemo\\my_frame\\User"
			],
			[
				"LED",
				"LED_Set\tLED_Set(port, pin, state)"
			],
			[
				"mem",
				"memory_config.h\tC:\\Users\\emeili\\Desktop\\GitApp\\New Folder\\black\\Usr"
			],
			[
				"in",
				"inc\t#include \"â€¦\""
			],
			[
				"qui",
				"quitTransLink\tWIFI_STATUS (*)(struct tWifi8266Device *) quitTransLink"
			],
			[
				"s",
				"send\tWIFI_STATUS (*)(struct tWifi8266Device *, char *) send"
			],
			[
				"WIFI",
				"WIFI_STATUS\tWIFI_STATUS"
			],
			[
				"rem",
				"remotePort\tint remotePort"
			],
			[
				"c",
				"connect\tWIFI_STATUS (*)(struct tWifi8266Device *, char *, char *, int) connect"
			],
			[
				"remo",
				"remotePort\tint remotePort"
			],
			[
				"WI",
				"WIFI_STATUS\tWIFI_STATUS"
			],
			[
				"arg",
				"argv\tchar ** argv"
			],
			[
				"ar",
				"argv\tchar ** argv"
			],
			[
				"STA",
				"WIFI_STATION\tWIFI_MODE WIFI_STATION"
			],
			[
				"a",
				"is_active\tint is_active"
			],
			[
				"W",
				"WIFI_OK\tWIFI_STATUS WIFI_OK"
			],
			[
				"em",
				"emConsoleString\tconsoleString_t emConsoleString"
			],
			[
				"p",
				"print\tvoid (*)(const char *, ...) print"
			],
			[
				"r",
				"rbuf\tchar * rbuf"
			],
			[
				"rbuf",
				"rbufSize\tint rbufSize"
			],
			[
				"seri",
				"serial_config.h\tE:\\myGitApp\\SmartLed1\\Usr"
			],
			[
				"stda",
				"stdarg.h\tC:\\Program Files\\LLVM\\lib\\clang\\8.0.1\\include"
			],
			[
				"she",
				"shell_config.h\tE:\\DDZ-Office\\Tiny-bord\\Software\\BasicDemo\\8-flash-lower\\Usr"
			],
			[
				"__HAL_DMA",
				"__HAL_DMA_DISABLE\t__HAL_DMA_DISABLE(__HANDLE__)"
			],
			[
				"hd",
				"hdmarx\tDMA_HandleTypeDef * hdmarx"
			],
			[
				"UART",
				"UART_HandleTypeDef\tUART_HandleTypeDef"
			],
			[
				"led1",
				"LED1_Pin\tLED1_Pin"
			],
			[
				"led",
				"LED1_Pin\tLED1_Pin"
			],
			[
				"std",
				"stdio.h\tC:\\Keil_v5\\ARM\\ARMCLANG\\include"
			],
			[
				"MX",
				"MX_GPIO_Init\tint MX_GPIO_Init()"
			],
			[
				"LED4",
				"LED4_GPIO_Port\tLED4_GPIO_Port"
			],
			[
				"LED3",
				"LED3_GPIO_Port\tLED3_GPIO_Port"
			],
			[
				"HAL_GPIO",
				"HAL_GPIO_TogglePin\tvoid HAL_GPIO_TogglePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)"
			],
			[
				"HAL_",
				"HAL_Delay\tvoid HAL_Delay(int Delay)"
			],
			[
				"stm32f4xx",
				"stm32f4xx_hal_uart.h\tE:\\myGitApp\\Tiny Bord\\1-code\\Drivers\\STM32F4xx_HAL_Driver\\Inc"
			],
			[
				"prin",
				"printf\tint printf(const char *restrict, ...)"
			]
		]
	},
	"buffers":
	[
		{
			"file": "emWin/ui_print.h",
			"settings":
			{
				"buffer_size": 116,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "emWin/ui_print.c",
			"settings":
			{
				"buffer_size": 1215,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Shell/shell.h",
			"settings":
			{
				"buffer_size": 1176,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/emeili/Desktop/GitApp/TinyBord/ddzOffice/Tiny-bord/Hardware/WiFiBord/readme.md",
			"settings":
			{
				"buffer_size": 34,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				" git:comm",
				"Git: Commit"
			],
			[
				" git:add",
				"Git: Add Current File"
			],
			[
				" git:init",
				"Git: Diff All Files (Ignore Whitespace)"
			],
			[
				" git:commit init",
				"Git: Amend Commit"
			],
			[
				"git:commit ",
				"Git: Commit"
			],
			[
				"git:comm",
				"Git: Commit"
			],
			[
				"git:add ",
				"Git: Add Current File"
			],
			[
				"git:",
				"Git: Gui"
			],
			[
				"clang",
				"Clang Format: Select Style"
			],
			[
				"cla",
				"Clang Format: Select Style"
			],
			[
				"easyclang",
				"EasyClangComplete: Open completion triggers location"
			],
			[
				"pa",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/emeili/Desktop/GitApp/TinyBord/ddzOffice/Tiny-bord/Software/BasicDemo/my_frame",
		"/C/Users/emeili/Desktop/GitApp/TinyBord/ddzOffice/Tiny-bord/Software/BasicDemo/my_frame/Shell"
	],
	"file_history":
	[
		"/C/Users/emeili/Desktop/GitApp/TinyBord/ddzOffice/Tiny-bord/Software/BasicDemo/my_frame/emWin/ui_print.c",
		"/C/Users/emeili/Desktop/GitApp/TinyBord/ddzOffice/Tiny-bord/Software/BasicDemo/my_frame/Thread/temperThread.c",
		"/C/Users/emeili/Desktop/GitApp/TinyBord/ddzOffice/Tiny-bord/Software/BasicDemo/my_frame/Thread/rtos.h",
		"/C/Users/emeili/Desktop/GitApp/TinyBord/ddzOffice/Tiny-bord/Software/BasicDemo/my_frame/User/user_main.c",
		"/C/Users/emeili/Desktop/GitApp/TinyBord/ddzOffice/Tiny-bord/Software/BasicDemo/my_frame/Thread/rtos_startup.c",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/black/Usr/serial_config.h",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/black/Usr/serial.h",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/black/Usr/serial.c",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/black/Usr/shell.c",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/my_frame/User/memory_config.h",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/my_frame/User/w25qxx.c",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/my_frame/User/w25qxx.h",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/my_frame/Thread/rtos_startup.c",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/my_frame/User/user_main.c",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/my_frame/emWin/ui_print.c",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/my_frame/Thread/rtos.h",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/my_frame/Thread/GUI_MultiThread.c",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/my_frame/User/w25qxxConfig.h",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/my_frame/User/oled.c",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/my_frame/User/oled.h",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/my_frame/User/oled_config.h",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/my_frame/Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/my_frame/User/ds18b20.c",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/my_frame/User/ds18b20.h",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/my_frame/User/delay.c",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/my_frame/User/delay_config.h",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/my_frame/User/delay.h",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/my_frame/User/ds18b20_config.h",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/my_frame/User/led.c",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/my_frame/User/led.h",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/my_frame/User/led_config.h",
		"/C/Users/emeili/Desktop/GitApp/TinyBord/ddzOffice/Tiny-bord/Software/BasicDemo/my_frame/User/startup.c",
		"/C/Users/emeili/Desktop/GitApp/TinyBord/ddzOffice/Tiny-bord/Software/BasicDemo/my_frame/User/startup.h",
		"/C/Users/emeili/Desktop/GitApp/New Folder/black/LightLed.sublime-project",
		"/C/Users/emeili/Desktop/GitApp/SmartLed/led/Usr/wifi8266.h",
		"/C/Users/emeili/Desktop/GitApp/SmartLed/led/Usr/osmain.c",
		"/C/Users/emeili/Desktop/GitApp/SmartLed/led/Usr/wifi8266_config.h",
		"/C/Users/emeili/Desktop/GitApp/SmartLed/led/Usr/shell.c",
		"/C/Users/emeili/Desktop/GitApp/SmartLed/led/Usr/shell.h",
		"/C/Users/emeili/Desktop/GitApp/SmartLed/led/Usr/serial.c",
		"/C/Users/emeili/Desktop/GitApp/SmartLed/led/Usr/serial.h",
		"/C/Users/emeili/Desktop/GitApp/SmartLed/led/Usr/shell_config.h",
		"/E/myGitApp/SmartLed/README.md",
		"/E/myGitApp/SmartLed1/Usr/serial.h",
		"/E/myGitApp/SmartLed1/Usr/serial_config.h",
		"/E/myGitApp/SmartLed1/Core/Src/stm32g0xx_it.c",
		"/E/myGitApp/SmartLed1/Usr/serial.c",
		"/E/myGitApp/H734/serial/Src/serial.c",
		"/E/myGitApp/SmartLed1/LightLed.sublime-project",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/8-flash-lower/include/shell/shell_uart.h",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/8-flash-lower/shell/shell.c",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/8-flash-lower/shell/shell_ops.c",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/8-flash-lower/include/shell/shell.h",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/8-flash-lower/Usr/shell.c",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/8-flash-lower/LightLed.sublime-project",
		"/C/Users/87436/Downloads/S_Param_Plotting-master/S_Param_Plotting-master/README.md",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/5-serial-isr/Core/Src/main.c",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/5-serial-isr/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/5-serial-isr/Core/Src/usart.c",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/5-serial-isr/Core/Src/serial.c",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/5-serial-isr/Core/Inc/serial.h",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/5-serial-isr/LightLed.sublime-project",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/1-LightLed/Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/1-LightLed/Core/Inc/main.h",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/1-LightLed/Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/1-LightLed/LightLed.sublime-project",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/1-LightLed/111.json",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/1-LightLed/.clang_complete",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/1-LightLed/c_cpp_properties.json",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/1-LightLed/Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h",
		"/E/DDZ-Office/Tiny-bord/Software/BasicDemo/1-LightLed/Core/Src/stm32f4xx_it.c",
		"/E/DDZ-Office/Tiny-bord/README.txt",
		"/E/DDZ-Office/Tiny-bord/software/BasicDemo/1-LightLed/LightLed.sublime-project",
		"/E/DDZ-Office/Tiny-bord/code/1-LED/main.c",
		"/E/DDZ-Office/Tiny-bord/code/1-LED/readme.txt",
		"/E/DDZ-Office/Tiny-bord/code/1-LED/test.c",
		"/C/Users/87436/AppData/Roaming/Sublime Text 3/Packages/User/Git.sublime-settings",
		"/C/Users/87436/AppData/Roaming/Sublime Text 3/Packages/Git/Git.sublime-settings",
		"/E/myGitApp/Tiny Bord/1-code/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_gpio.c",
		"/E/myGitApp/Tiny Bord/1-code/Inc/main.h",
		"/E/myGitApp/Tiny Bord/1-code/Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h",
		"/C/Keil_v5/ARM/ARMCLANG/include/stdint.h",
		"/E/myGitApp/Tiny Bord/1-code/Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h",
		"/E/myGitApp/Tiny Bord/1-code/Src/main.c",
		"/C/Users/87436/AppData/Roaming/Sublime Text 3/Packages/User/EasyClangComplete.sublime-settings",
		"/E/myGitApp/Tiny Bord/1-code/c_cpp_properties.json",
		"/E/myGitApp/Tiny Bord/1-code/config.sublime-project",
		"/E/myGitApp/Tiny Bord/1-code/compile_commands.json",
		"/C/Users/87436/AppData/Roaming/Sublime Text 3/Packages/ClangAutoComplete/ClangAutoComplete.sublime-settings",
		"/C/Users/87436/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-keymap",
		"/C/Users/87436/AppData/Roaming/Sublime Text 3/Packages/Alignment/Default (Windows).sublime-keymap",
		"/C/Users/87436/AppData/Roaming/Sublime Text 3/Packages/Clang Format/Default (Windows).sublime-keymap",
		"/C/Users/87436/AppData/Roaming/Sublime Text 3/Packages/Clang Format/clang_format_custom.sublime-settings"
	],
	"find":
	{
		"height": 57.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "emWin/ui_print.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 116,
						"regions":
						{
						},
						"selection":
						[
							[
								53,
								62
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										86,
										87
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										62,
										63
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"open_with_edit": true,
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "emWin/ui_print.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1215,
						"regions":
						{
						},
						"selection":
						[
							[
								592,
								578
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Shell/shell.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1176,
						"regions":
						{
						},
						"selection":
						[
							[
								510,
								498
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 108.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/C/Users/emeili/Desktop/GitApp/TinyBord/ddzOffice/Tiny-bord/Hardware/WiFiBord/readme.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 34,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 91.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 50.0
	},
	"input":
	{
		"height": 62.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.astyle_error_message":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "my_frame.sublime-project",
	"replace":
	{
		"height": 96.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 214.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
